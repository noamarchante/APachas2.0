{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/authUser/email/retrievePassword/retrievePassword.component.ts","./src/app/components/authUser/email/retrievePassword/retrievePassword.component.html","./src/app/components/authUser/email/verifyEmail/verifyEmail.component.ts","./src/app/components/authUser/email/verifyEmail/verifyEmail.component.html","./src/app/components/authUser/login/login/login.component.ts","./src/app/components/authUser/login/login/login.component.html","./src/app/components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component.ts","./src/app/components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component.html","./src/app/components/authUser/paypal/paypal.component.ts","./src/app/components/authUser/paypal/paypal.component.html","./src/app/components/authUser/profile/detailProfile/detailProfile.component.ts","./src/app/components/authUser/profile/detailProfile/detailProfile.component.html","./src/app/components/authUser/profile/editProfile/editProfile.component.ts","./src/app/components/authUser/profile/editProfile/editProfile.component.html","./src/app/components/authUser/register/register.component.ts","./src/app/components/authUser/register/register.component.html","./src/app/components/authUser/transactionHistory/transactionHistory.component.ts","./src/app/components/authUser/transactionHistory/transactionHistory.component.html","./src/app/components/confirm/messageConfirm.component.ts","./src/app/components/confirm/messageConfirm.component.html","./src/app/components/events/createEvent/createEvent.component.ts","./src/app/components/events/createEvent/createEvent.component.html","./src/app/components/events/detailEvent/detailEvent.component.ts","./src/app/components/events/detailEvent/detailEvent.component.html","./src/app/components/events/listEvents/listEvents.component.ts","./src/app/components/events/listEvents/listEvents.component.html","./src/app/components/groups/createGroup/createGroup.component.ts","./src/app/components/groups/createGroup/createGroup.component.html","./src/app/components/groups/detailGroup/detailGroup.component.ts","./src/app/components/groups/detailGroup/detailGroup.component.html","./src/app/components/groups/listGroups/listGroups.component.ts","./src/app/components/groups/listGroups/listGroups.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/products/createProduct/createProduct.component.ts","./src/app/components/products/createProduct/createProduct.component.html","./src/app/components/products/createUserEventExpense/createUserEventExpense.component.ts","./src/app/components/products/createUserEventExpense/createUserEventExpense.component.html","./src/app/components/products/detailProduct/detailProduct.component.ts","./src/app/components/products/detailProduct/detailProduct.component.html","./src/app/components/products/listProducts/listProducts.component.ts","./src/app/components/products/listProducts/listProducts.component.html","./src/app/components/transactions/listTransactions.component.ts","./src/app/components/transactions/listTransactions.component.html","./src/app/components/users/detailUser/detailUser.component.ts","./src/app/components/users/detailUser/detailUser.component.html","./src/app/components/users/listUsers/listUsers.component.ts","./src/app/components/users/listUsers/listUsers.component.html","./src/app/guards/authGuard.ts","./src/app/helpers/authentication.interceptor.ts","./src/app/models/AuthUser.ts","./src/app/models/MEvent.ts","./src/app/models/MGroup.ts","./src/app/models/MGroupMembers.ts","./src/app/models/MProduct.ts","./src/app/models/MRetrievePassword.ts","./src/app/models/MUser.ts","./src/app/models/MUserEvent.ts","./src/app/models/MUserUser.ts","./src/app/models/MUserUserEvent.ts","./src/app/models/MVerifyEmail.ts","./src/app/modules/notification/entities/aPachas-error.model.ts","./src/app/modules/notification/entities/index.ts","./src/app/modules/notification/entities/severity.model.ts","./src/app/modules/notification/handlers/error-notification.handler.ts","./src/app/modules/notification/notification.module.ts","./src/app/modules/notification/services/notification.service.ts","./src/app/services/authentication.service.ts","./src/app/services/event.service.ts","./src/app/services/group.service.ts","./src/app/services/groupUser.service.ts","./src/app/services/product.service.ts","./src/app/services/user.service.ts","./src/app/services/userEvent.service.ts","./src/app/services/userProduct.service.ts","./src/app/services/userUser.service.ts","./src/app/services/userUserEvent.service.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@angular/compiler-cli/src/diagnostics|sync","./node_modules/moment/locale|sync|/^/.*$"],"names":[],"mappings":"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":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/authUser/login/login/login.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {AuthGuard} from './guards/authGuard';\nimport {RegisterComponent} from \"./components/authUser/register/register.component\";\nimport {ListUsersComponent} from \"./components/users/listUsers/listUsers.component\";\nimport {CreateGroupComponent} from \"./components/groups/createGroup/createGroup.component\";\nimport {ListGroupsComponent} from \"./components/groups/listGroups/listGroups.component\";\nimport {DetailGroupComponent} from \"./components/groups/detailGroup/detailGroup.component\";\nimport {DetailUserComponent} from \"./components/users/detailUser/detailUser.component\";\nimport {MessageConfirmComponent} from \"./components/confirm/messageConfirm.component\";\nimport {ListEventsComponent} from \"./components/events/listEvents/listEvents.component\";\nimport {DetailEventComponent} from \"./components/events/detailEvent/detailEvent.component\";\nimport {CreateEventComponent} from \"./components/events/createEvent/createEvent.component\";\nimport {CreateProductComponent} from \"./components/products/createProduct/createProduct.component\";\nimport {ListProductsComponent} from \"./components/products/listProducts/listProducts.component\";\nimport {DetailProductComponent} from \"./components/products/detailProduct/detailProduct.component\";\nimport {CreateUserEventExpenseComponent} from \"./components/products/createUserEventExpense/createUserEventExpense.component\";\nimport {DetailProfileComponent} from \"./components/authUser/profile/detailProfile/detailProfile.component\";\nimport {ListTransactionsComponent} from \"./components/transactions/listTransactions.component\";\nimport {EditProfileComponent} from \"./components/authUser/profile/editProfile/editProfile.component\";\nimport {VerifyEmailComponent} from \"./components/authUser/email/verifyEmail/verifyEmail.component\";\nimport {RetrievePasswordComponent} from \"./components/authUser/email/retrievePassword/retrievePassword.component\";\nimport {RetrievePasswordEmailComponent} from \"./components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component\";\nimport {TransactionHistoryComponent} from \"./components/authUser/transactionHistory/transactionHistory.component\";\nimport {PaypalComponent} from \"./components/authUser/paypal/paypal.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'home', component: HomeComponent\n\t},\n\t{\n\t\tpath: 'login', component: LoginComponent\n\t},\n  \t{\n    \tpath: 'register', component: RegisterComponent\n  \t},\n\t{\n\t\tpath: 'users', component: ListUsersComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createGroup', component: CreateGroupComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'groups', component: ListGroupsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailGroup', component: DetailGroupComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailUser', component: DetailUserComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'messageConfirm', component: MessageConfirmComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'events', component: ListEventsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailEvent', component: DetailEventComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createEvent', component: CreateEventComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createProduct', component: CreateProductComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'products', component: ListProductsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailProduct', component: DetailProductComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createUserEventExpense', component: CreateUserEventExpenseComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'transactions', component: ListTransactionsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'profile', component: DetailProfileComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'editProfile', component: EditProfileComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'verifyEmail', component: VerifyEmailComponent\n\t},\n\t{\n\t\tpath: 'retrievePassword', component: RetrievePasswordComponent\n\t},\n\t{\n\t\tpath: 'retrievePasswordEmail', component: RetrievePasswordEmailComponent\n\t},\n\t{\n\t\tpath: 'transactionHistory', component: TransactionHistoryComponent\n\t},\n\t{\n\t\tpath: 'paypal', component: PaypalComponent\n\t},\n\t{\n\t\tpath: '', redirectTo: 'home', pathMatch: 'full'\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, {\n\t\t\tuseHash: false,\n\t\t\tanchorScrolling: 'enabled'\n\t\t})\n\t],\n  \texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {NotificationService} from './modules/notification/services/notification.service';\nimport {NotificationsService} from 'angular2-notifications';\nimport {Severity} from './modules/notification/entities';\nimport {AuthenticationService} from './services/authentication.service';\nimport {Router} from '@angular/router';\nimport {UserEventService} from \"./services/userEvent.service\";\nimport {UserUserService} from \"./services/userUser.service\";\n\ndeclare var paypal;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'APachas';\n  defaultImage: string = './assets/user16.jpg';\n  notifications: string[] = [];\n  badge: string =\"\";\n  constructor(\n    private notificationService: NotificationService,\n    private notificationsService: NotificationsService,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private userEventService: UserEventService,\n    private userUserService: UserUserService\n  ) {\n  }\n\n  ngOnInit() {\n    this.notificationService.getMessages().subscribe(\n      message => {\n        switch (message.severity) {\n          case Severity.ERROR:\n            this.notificationsService.error(message.summary, message.detail);\n            break;\n          case Severity.SUCCESS:\n            this.notificationsService.success(message.summary, message.detail);\n            break;\n          case Severity.INFO:\n            this.notificationsService.info(message.summary, message.detail);\n            break;\n          case Severity.WARNING:\n            this.notificationsService.warn(message.summary, message.detail);\n            break;\n        }\n      }\n    );\n    this.getEventNotifications();\n  }\n\n  getEventNotifications() {\n    this.userEventService.getNotifications(this.authenticationService.getUser().id).subscribe((response) => {\n      response.forEach((eventName) => {\n        this.notifications.push(\"Invitación a evento \" + eventName);\n      });\n      this.setBadge();\n    });\n    this.getUserNotifications();\n  }\n\n  getUserNotifications() {\n    this.userUserService.getNotifications(this.authenticationService.getUser().id).subscribe((response) => {\n      response.forEach((userLogin) => {\n        this.notifications.push(\"Solicitud de amistad de \" + userLogin);\n      });\n      this.setBadge();\n    });\n  }\n\n  setBadge(){\n    if (this.notifications.length != 0) {\n      this.badge = \"bg-danger\";\n    }else{\n      this.badge = \"\";\n    }\n  }\n\n  logOut() {\n    this.authenticationService.logOut();\n    this.router.navigateByUrl('/login');\n  }\n  logIn(){\n    this.router.navigateByUrl('/login');\n  }\n}\n","<header *ngIf=\"authenticationService.getUser().authenticated == true\">\n  <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand title\" aria-label=\"vuelta a la página principal\"  href=\"/home\"><img class=\"logo\" src=\"../assets/logo.png\" alt=\"logo\"></a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav w-100\">\n          <li class=\"nav-item\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"nav-link text\" aria-label=\"usuarios\" href=\"/users\">Usuarios</a>\n          </li>\n          <li class=\"nav-item\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"nav-link text\" aria-label=\"grupos\" href=\"/groups\">Grupos</a>\n          </li>\n          <li class=\"nav-item\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"nav-link text\" aria-label=\"eventos\" href=\"/events\">Eventos</a>\n          </li>\n        </ul>\n        <ul class=\"navbar-nav\">\n          <li class=\"dropdown not\">\n            <button type=\"button\" class=\"notButton nav-link  text\" id=\"navbarDropdownMenuLink2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <span [ngClass]=\"badge\" class=\"position-absolute top-0 start-100 translate-middle p-1 border border-light rounded-circle\">\n                <span class=\"visually-hidden\">Notificaciones</span>\n              </span>\n            </button>\n            <ul class=\"dropdown-menu notification-menu\" aria-labelledby=\"navbarDropdownMenuLink2\">\n              <li class=\"dropdown-item textDrop\" *ngFor=\"let notification of notifications\">\n                <p >{{notification}}</p>\n              </li>\n              <li class=\"dropdown-item textDrop\" [hidden]=\"notifications.length > 0\"><p >No hay notificaciones pendientes</p></li>\n            </ul>\n          </li>\n          <li class=\"nav-item dropdown profile\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" aria-label=\"desplegable\" class=\"nav-link dropdown-toggle text\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <ng-container *ngIf=\"authenticationService.getUser().photo; else imagesDiv\">\n                <img class=\"image\" [src]=\"authenticationService.getUser().photo\" alt=\"foto de usuario\">\n              </ng-container>\n              <ng-template #imagesDiv>\n                <img class=\"image\" [src]=\"defaultImage\" alt=\"foto por defecto de usuario\">\n              </ng-template>\n            </a>\n            <ul class=\"dropdown-menu profileDrop\" aria-labelledby=\"navbarDropdownMenuLink\">\n              <li>\n                <a *ngIf=\"authenticationService.getUser().authenticated == true\" aria-label=\"perfil\" class=\"dropdown-item textDrop\" href=\"/profile\">Perfil</a>\n              </li>\n              <li><a *ngIf=\"authenticationService.getUser().authenticated == true\" aria-label=\"historial de transacciones\" class=\"dropdown-item textDrop\" href=\"/transactionHistory\">Historial de transacciones</a></li>\n              <li><a *ngIf=\"authenticationService.getUser().authenticated == false\" class=\"dropdown-item textDrop\" aria-label=\"inicio de sesión\" (click)=\"logIn()\">Iniciar sesión</a></li>\n              <li><a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"dropdown-item textDrop\" aria-label=\"cierre de sesión\" (click)=\"logOut()\">Cerrar sesión</a></li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n<main class=\"container h-100\">\n  <router-outlet></router-outlet>\n</main>","import {ErrorHandler, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {NotificationModule} from './modules/notification/notification.module';\nimport {SimpleNotificationsModule} from 'angular2-notifications';\nimport {ErrorNotificationHandler} from './modules/notification/handlers/error-notification.handler';\nimport {LoginComponent} from './components/authUser/login/login/login.component';\nimport {AuthenticationInterceptor} from './helpers/authentication.interceptor';\nimport {HomeComponent} from './components/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {RegisterComponent} from \"./components/authUser/register/register.component\";\nimport {ListUsersComponent} from \"./components/users/listUsers/listUsers.component\";\nimport {CreateGroupComponent} from \"./components/groups/createGroup/createGroup.component\";\nimport {ListGroupsComponent} from \"./components/groups/listGroups/listGroups.component\";\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DetailGroupComponent} from \"./components/groups/detailGroup/detailGroup.component\";\nimport {DetailUserComponent} from \"./components/users/detailUser/detailUser.component\";\nimport {MessageConfirmComponent} from \"./components/confirm/messageConfirm.component\";\nimport {ListEventsComponent} from \"./components/events/listEvents/listEvents.component\";\nimport {DetailEventComponent} from \"./components/events/detailEvent/detailEvent.component\";\nimport {CreateEventComponent} from \"./components/events/createEvent/createEvent.component\";\nimport {Daterangepicker} from \"ng2-daterangepicker\";\nimport {ListProductsComponent} from \"./components/products/listProducts/listProducts.component\";\nimport {CreateProductComponent} from \"./components/products/createProduct/createProduct.component\";\nimport {DetailProductComponent} from \"./components/products/detailProduct/detailProduct.component\";\nimport {CreateUserEventExpenseComponent} from \"./components/products/createUserEventExpense/createUserEventExpense.component\";\nimport {DetailProfileComponent} from \"./components/authUser/profile/detailProfile/detailProfile.component\";\nimport {ListTransactionsComponent} from \"./components/transactions/listTransactions.component\";\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport {LOCALE_ID } from '@angular/core';\nimport localeEs from '@angular/common/locales/es';\nimport {registerLocaleData} from \"@angular/common\";\nimport {EditProfileComponent} from \"./components/authUser/profile/editProfile/editProfile.component\";\nimport {VerifyEmailComponent} from \"./components/authUser/email/verifyEmail/verifyEmail.component\";\nimport {RetrievePasswordComponent} from \"./components/authUser/email/retrievePassword/retrievePassword.component\";\nimport {RetrievePasswordEmailComponent} from \"./components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component\";\nimport {TransactionHistoryComponent} from \"./components/authUser/transactionHistory/transactionHistory.component\";\nimport {NgxPayPalModule} from \"ngx-paypal\";\nimport {PaypalComponent} from \"./components/authUser/paypal/paypal.component\";\n\nregisterLocaleData(localeEs, 'es');\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ListUsersComponent,\n    CreateGroupComponent,\n    ListGroupsComponent,\n    DetailGroupComponent,\n    DetailUserComponent,\n    MessageConfirmComponent,\n    ListEventsComponent,\n    DetailEventComponent,\n    CreateEventComponent,\n    CreateProductComponent,\n    CreateUserEventExpenseComponent,\n    ListProductsComponent,\n    DetailProductComponent,\n    ListTransactionsComponent,\n    DetailProfileComponent,\n    HomeComponent,\n    EditProfileComponent,\n    VerifyEmailComponent,\n    RetrievePasswordComponent,\n    RetrievePasswordEmailComponent,\n    TransactionHistoryComponent,\n    PaypalComponent\n  ],\n    imports: [\n        AppRoutingModule,\n        BrowserModule,\n        FormsModule,\n        NgSelectModule,\n        HttpClientModule,\n        NotificationModule,\n        BrowserAnimationsModule,\n        CalendarModule.forRoot({\n            provide: DateAdapter,\n            useFactory: adapterFactory,\n        }),\n        SimpleNotificationsModule.forRoot({\n            timeOut: 10000,\n            preventDuplicates: true,\n            pauseOnHover: true,\n            clickToClose: true\n        }),\n        Daterangepicker,\n        NgxPayPalModule\n    ],\n\n  providers: [\n    {\n      provide: ErrorHandler,\n      useClass: ErrorNotificationHandler\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthenticationInterceptor, multi: true\n    },\n      {provide: LOCALE_ID, useValue: 'es'}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from \"@angular/core\";\nimport {MRetrievePassword} from \"../../../../models/MRetrievePassword\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../../../services/user.service\";\n\n@Component({\n    selector: 'app-retrievePassword',\n    templateUrl: './retrievePassword.component.html',\n    styleUrls: ['./retrievePassword.component.css']\n})\nexport class RetrievePasswordComponent implements OnInit{\n    mRetrievePassword: MRetrievePassword = new MRetrievePassword();\n    password = \"\";\n    passwordConfirm = \"\";\n    message = \"ERROR EN LA RECUPERACIÓN DE LA CONTRASEÑA. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n    messageColor = \"messageColor\";\n    hidden: boolean = false;\n    token: boolean = false;\n\n    constructor(private router: Router,\n                private userService: UserService,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.mRetrievePassword.userEmail = this.activatedRoute.snapshot.queryParams[\"email\"];\n        this.mRetrievePassword.tokenPassword = this.activatedRoute.snapshot.queryParams[\"token\"];\n        this.userService.getToken(this.mRetrievePassword.userEmail).subscribe((response) =>{\n            if (!response){\n                    this.token = false;\n                    this.getMessage(false);\n            }else{\n                this.token = true;\n            }\n        });\n    }\n\n    retrievePassword(){\n        if (this.token){\n            if (this.password == this.passwordConfirm){\n                this.mRetrievePassword.newPassword = this.password;\n                this.userService.retrievePassword(this.mRetrievePassword).subscribe(() => {\n                    this.getMessage(true);\n                });\n            }\n        }else{\n            this.getMessage(false);\n        }\n    }\n\n    getMessage(goodRequest: boolean){\n        this.hidden = true;\n        if (goodRequest){\n            this.messageColor = \"\";\n            this.message = \"CONTRASEÑA CAMBIADA. Ya puedes acceder con tu nueva contraseña\";\n        }else{\n            this.messageColor = \"messageColor\";\n            this.message = \"ERROR EN LA RECUPERACIÓN DE LA CONTRASEÑA. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n        }\n    }\n}","<section>\n    <div [hidden]=\"!hidden\" class=\"imageDiv\">\n        <img src=\"../../../assets/logo.png\">\n    </div>\n    <div [hidden]=\"!hidden\">\n        <h1 [ngClass]=\"messageColor\">{{message}}</h1>\n    </div>\n        <form [hidden]=\"hidden\" (submit)=\"retrievePassword();\" ngNativeValidate #retrievePasswordForm=\"ngForm\">\n            <div>\n                <input class=\"inputs\" type=\"password\" id=\"register_userPassword\" name=\"userPassword\" placeholder=\"Contraseña*\"\n                               [(ngModel)]=\"password\" required #userPasswordForm=\"ngModel\" minlength=\"6\">\n                <div *ngIf=\"retrievePasswordForm.submitted && userPasswordForm.invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"userPasswordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                    <div *ngIf=\"userPasswordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                    </div>\n                </div>\n            </div>\n            <div>\n                <input class=\"inputs\" type=\"password\" id=\"register_userPasswordConfirm\" name=\"userPasswordConfirm\"\n                               placeholder=\"Confirmación contraseña*\" [(ngModel)]=\"passwordConfirm\" required\n                               #userPasswordConfirmForm=\"ngModel\" minlength=\"6\">\n                <div *ngIf=\"password != passwordConfirm\" class=\"alert alert-danger\">\n                    <div>La contraseña de confirmación no coincide</div>\n                </div>\n                <div *ngIf=\"retrievePasswordForm.submitted && userPasswordConfirmForm.invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"userPasswordConfirmForm.errors.required\">La contraseña es un campo obligatorio\n                    </div>\n                    <div *ngIf=\"userPasswordConfirmForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                    </div>\n                </div>\n            </div>\n            <div class=\"buttons\">\n                <input type=\"submit\" class=\"button\" value=\"Guardar\">\n            </div>\n        </form>\n</section>\n<simple-notifications></simple-notifications>\n","import {AfterViewChecked, Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport {MVerifyEmail} from \"../../../../models/MVerifyEmail\";\n@Component({\n    selector: 'app-verifyEmail',\n    templateUrl: './verifyEmail.component.html',\n    styleUrls: ['./verifyEmail.component.css']\n})\nexport class VerifyEmailComponent implements OnInit{\n\n    mVerifyEmail: MVerifyEmail = new MVerifyEmail();\n\n    message = \"ERROR DE VERIFICACIÓN. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n    messageColor = \"messageColor\";\n\n    constructor(private router: Router,\n                private userService: UserService,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.mVerifyEmail.userEmail = this.activatedRoute.snapshot.queryParams[\"email\"];\n        this.mVerifyEmail.tokenPassword = this.activatedRoute.snapshot.queryParams[\"token\"];\n        this.userService.getToken(this.mVerifyEmail.userEmail).subscribe((response) =>{\n            if (response){\n                this.verifyEmail();\n            }else{\n                this.getMessage(false);\n            }\n        });\n    }\n\n    verifyEmail(){\n        this.userService.verifyUser(this.mVerifyEmail).subscribe(()=>{\n            this.getMessage(true);\n        });\n    }\n\n    private getMessage(goodRequest: boolean){\n        if (goodRequest){\n            this.message = \"Tu cuenta ha sido verificada\";\n            this.messageColor = \"\";\n        }else{\n            this.message = \"ERROR DE VERIFICACIÓN. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n            this.messageColor = \"messageColor\";\n        }\n    }\n\n}","<div class=\"imageDiv\">\n    <img src=\"../../../assets/logo.png\">\n</div>\n<div>\n    <h1 [ngClass]=\"messageColor\">{{message}}</h1>\n</div>\n","/*\nCOMPONENT -> Bloque de código re-utilizable: CSS + HTML + TypeScript\n */\nimport {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../../../services/authentication.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NotificationService} from \"../../../../modules/notification/services/notification.service\";\nimport {UserService} from \"../../../../services/user.service\";\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit, AfterViewChecked {\n\n  login: string;\n  password: string;\n  private return = '';\n\n\tconstructor(private authenticationService: AuthenticationService,\n\t\t\t\tprivate userService: UserService,\n\t\t\t\tprivate route: ActivatedRoute,\n\t\t\t\tprivate router: Router,\n\t\t\t\tprivate notificationService: NotificationService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.route.queryParams\n\t\t  .subscribe(params => this.return = params['return'] || '');\n\n\t}\n\n\tlogIn() {\n\t\tthis.authenticationService.checkCredentials(this.login, this.password).subscribe(( s:any) =>{\n\t\t\tthis.authenticationService.logIn(this.login, this.password, s.headers.get(\"Authorization\"));\n\t\t\tthis.router.navigateByUrl(this.return);\n\t\t});\n\t}\n\n\n\tngAfterViewChecked(): void {\n\t\tif (localStorage.getItem(\"profile\") != undefined){\n\t\t\tthis.notificationService.success(\"Usuario editado\", \"Se ha editado el usuario correctamente.\");\n\t\t\tlocalStorage.removeItem(\"profile\");\n\t\t}\n\t}\n}","<section>\n    <div class=\"container\">\n        <div class=\"user signinBx\">\n            <div class=\"imgBx\"><img src=\"../../../../../assets/LoginMoney.jpg\" alt=\"Imagen decorativa de billetes para login\"></div>\n            <div class=\"formBx\">\n                <form (submit)=\"logIn()\" ngNativeValidate #loginForm=\"ngForm\">\n                    <h2>Iniciar sesión en <a href=\"\"><br>¡A pachas!</a></h2>\n                    <div>\n                        <input type=\"text\" id=\"login_userLogin\" name=\"userLogin\" placeholder=\"Nombre de usuario\"\n                               pattern=\"[a-zA-ZñÑ0-9_-]{1,100}\" title=\"Must be an alphanumeric\"\n                               [(ngModel)]=\"login\" required #usernameForm=\"ngModel\">\n                        <div *ngIf=\"loginForm.submitted && usernameForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"usernameForm.errors.required\">Username is required.</div>\n                            <div *ngIf=\"usernameForm.errors.pattern\">Username can only contain letters, numbers or\n                                underscore and should\n                                have a length between 1 and 100.\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"password\" id=\"login_userPassword\" name=\"userPassword\" placeholder=\"Contraseña\"\n                               [(ngModel)]=\"password\" required #passwordForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && passwordForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"passwordForm.errors.required\">Password is required.</div>\n                            <div *ngIf=\"passwordForm.errors.minlength\">Password can't be shorter than 6 characters.\n                            </div>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Iniciar sesión\">\n                    <p class=\"signup\">¿has olvidado tu contraseña? <a href=\"\" data-bs-toggle=\"modal\" data-bs-target=\"#retrievePasswordEmailModal\"> Recupérala</a></p>\n                    <p class=\"signup\">¿no tienes una cuenta? <a href=\"register\"> Regístrate</a></p>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</section>\n<app-retrievePasswordEmail></app-retrievePasswordEmail>\n\n<simple-notifications></simple-notifications>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../../services/user.service\";\nimport {MUser} from \"../../../../models/MUser\";\nimport {NotificationService} from \"../../../../modules/notification/services/notification.service\";\n\n\n@Component({\n    selector: 'app-retrievePasswordEmail',\n    templateUrl: './retrievePasswordEmail.component.html',\n    styleUrls: ['./retrievePasswordEmail.component.css']\n})\nexport class RetrievePasswordEmailComponent implements OnInit {\n\n    mUser: MUser= new MUser();\n    title: string = \"RECUPERAR CONTRASEÑA\";\n    email: string = \"\";\n\n\n    constructor(private userService: UserService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(){\n        this.mUser.userEmail = this.email;\n        this.userService.sendRetrievePassword(this.mUser).subscribe(()=>{\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.info(\"Revisa tu correo electrónico para establecer una nueva contraseña\", \"Revisa tu correo electrónico\");\n            this.closeModal();\n        });\n    }\n\n    closeModal(){\n        this.email = \"\";\n        this.mUser = new MUser();\n    }\n}","<div class=\"modal fade\" id=\"retrievePasswordEmailModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"retrievePasswordEmailLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button id=\"closeButton\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #retrievePasswordEmailForm=\"ngForm\">\n                     <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                <input class=\"inputs\" type=\"email\" id=\"register_userEmail\" name=\"userEmail\" placeholder=\"Correo electrónico*\"\n                                       [(ngModel)]=\"email\" required #userEmailForm=\"ngModel\" minlength=\"6\">\n                                <div *ngIf=\"retrievePasswordEmailForm.submitted && userEmailForm.invalid\" class=\"alert alert-danger\">\n                                    <div *ngIf=\"userEmailForm.errors.required\">El correo electrónico es un campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"userEmailForm.errors.pattern\">El correo electrónico solo puede contener letras,\n                                        @, . y debe estar comprendido entre 1 y 100 caracteres\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"buttons\">\n                                <button type=\"button\" id=\"closeButton1\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                    Cerrar\n                                </button>\n                            </div>\n                            <div class=\"buttons\">\n                                <input type=\"submit\" class=\"button\" value=\"Enviar\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport { IPayPalConfig, ICreateOrderRequest } from 'ngx-paypal';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\n\ndeclare var paypal;\n\n@Component({\n    selector: 'app-paypal',\n    templateUrl: './paypal.component.html',\n    styleUrls: ['./paypal.component.css']\n})\nexport class PaypalComponent implements OnInit {\n\n    public payPalConfig: any;\n\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    @ViewChild('paypal', { static: true }) paypalElement: ElementRef;\n\n    ngOnInit(): void {\n      //  this.initConfig();\n        //this.initConfigB();\n        this.test();\n    }\n    paidFor = false;\n    product = {\n        price: 777.77,\n        description: 'used couch, decent condition'\n    };\n    test() {\n        paypal\n        .Buttons({\n            createOrder: (data, actions) => {\n                return actions.order.create({\n                    // advanced: {\n                    //     commit: 'true'\n                    // },\n                    //\n                    // style: {\n                    //     label: 'paypal',\n                    //     layout: 'horizontal',\n                    //     shape: 'rect',\n                    //     color: 'silver',\n                    //     tagline: false\n                    // },\n                    intent: 'CAPTURE',\n                    payer: {\n                        email_address: \"sb-clc3816042471@personal.example.com\",\n                    },\n                    purchase_units: [\n                        {\n                            payee:{\n                                email_address: \"sb-jypul16089008@business.example.com\"\n                            },\n                            amount: {\n                                currency_code: 'EUR',\n                                value: '5.00'\n                            },\n                            item_list: {\n                            items: [\n                                {\n                                    name: \"hat\",\n                                    sku: \"1\",\n                                    price: \"5.00\",\n                                    currency: 'EUR',\n                                    quantity: \"1\",\n                                    description: \"Brown hat.\"\n\n                                }]}\n                        }\n                    ]\n                });\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture();\n                this.paidFor = true;\n                console.log(order);\n            },\n            onError: err => {\n                console.log(err);\n            }\n        })\n        .render(this.paypalElement.nativeElement);\n\n\n    }\n    /*\n\n    P\n    sb-clc3816042471@personal.example.com\n    rO>0F7Ge\n    - TA2FJTAJMAWQU\n\n    B\n    sb-tioio15365415@business.example.com\n    ?BRnDf#1\n    - 7822BDYPJ54BG\n\n    P\n    sb-nn8cv16042503@personal.example.com\n    Xj6=@w7P\n    - HSL8KPUXAEHDU\n\n    B\n    sb-jypul16089008@business.example.com\n    -C9=6Jb2\n    - ZU6K2LR9KUYE6\n\n    */\n\n    private initConfigB(): void {\n        this.payPalConfig = {\n            createOrder: data =>\n                <ICreateOrderRequest>{\n                    intent: \"CAPTURE\",\n                    // Pagador\n                    payer: {\n                        email_address: \"sb-clc3816042471@personal.example.com\",\n                    },\n\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: \"EUR\",\n                                value: \"9.99\"\n                            },\n                            payee:{\n                                email_address: \"sb-jypul16089008@business.example.com\"\n                            },\n                            items: [\n                            ]\n                        }\n                    ]\n                },\n            currency: 'EUR',\n            clientId: 'ATf1-QPk20tqgmCXMEH_rTkdpYDJjOoUSHsoP4ROOevzgsYVLnvurgPeAGh8PAynWpSe0NKJiTolOThs',\n            advanced: {\n                commit: 'true'\n            },\n\n            style: {\n                label: 'paypal',\n                layout: 'horizontal',\n                shape: 'rect',\n                color: 'silver',\n                tagline: false\n            },\n            onApprove: (data, actions) => {\n                console.log(\n                    \"onApprove - transaction was approved, but not authorized\",\n                    data,\n                    actions\n                );\n                actions.order.get().then(details => {\n                    console.log(\n                        \"onApprove - you can get full order details inside onApprove: \",\n                        details\n                    );\n                });\n            },\n            onClientAuthorization: data => {\n                console.log(\n                    \"onClientAuthorization - you should probably inform your server about completed transaction at this point\",\n                    data\n                );\n            },\n            onCancel: (data, actions) => {\n                console.log(\"OnCancel\", data, actions);\n            },\n            onError: err => {\n                console.log(\"OnError\", err);\n            },\n            onClick: (data, actions) => {\n                console.log(\"onClick\", data, actions);\n            }\n        };\n    }\n\n    private initConfig(): void {\n        this.payPalConfig = {\n            currency: 'EUR',\n            clientId: 'ATf1-QPk20tqgmCXMEH_rTkdpYDJjOoUSHsoP4ROOevzgsYVLnvurgPeAGh8PAynWpSe0NKJiTolOThs',\n            advanced: {\n                commit: 'true'\n            },\n\n            style: {\n                label: 'paypal',\n                layout: 'horizontal',\n                shape: 'rect',\n                color: 'silver',\n                tagline: false\n            },\n\n\n            createOrderOnClient: (data) => <ICreateOrderRequest>{\n                description: \"Holaa\",\n                // Pagador\n                payer: {\n                     email_address: \"sb-clc3816042471@personal.example.com\",\n                },\n                // Al que se paga\n                // payee:{\n                //     email_address: \"sb-nn8cv16042503@personal.example.com\",\n                // },\n                intent: 'CAPTURE',\n                purchase_units: [\n                    {\n                        payee:{\n                            email_address: \"sb-nn8cv16042503@personal.example.com\"\n                        },\n                        amount: {\n                            currency_code: 'EUR',\n                            value: '9.99'\n                        },\n                        items: [\n                            // {\n                            //     name: 'Enterprise Subscription',\n                            //     quantity: '1',\n                            //     category: 'DIGITAL_GOODS',\n                            //     unit_amount: {\n                            //         currency_code: 'EUR',\n                            //         value: '9.99',\n                            //     },\n                            // }\n                        ]\n                    }\n                ]\n            },\n\n            onApprove: (data, actions) => {\n                console.log('onApprove - transaction was approved, but not authorized', data, actions);\n                actions.order.get().then(details => {\n                    console.log('onApprove - you can get full order details inside onApprove: ', details);\n                });\n            },\n            onClientAuthorization: (data) => {\n                console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n                //this.showSuccess = true;\n            },\n            onCancel: (data, actions) => {\n                console.log('OnCancel', data, actions);\n            },\n            onError: err => {\n                console.log('OnError', err);\n            },\n            onClick: (data, actions) => {\n                console.log('onClick', data, actions);\n            },\n        };\n    }\n}","<!--<ngx-paypal [config]=\"payPalConfig\"></ngx-paypal>-->\n\n<div *ngIf=\"!paidFor\">\n\n    <h1>Buy this Couch - ${{ product.price }} OBO</h1>\n\n    <p>{{ product.description }}</p>\n\n\n</div>\n\n<div *ngIf=paidFor>\n    <h1>Yay, you bought a sweet couch!</h1>\n\n    <img src=\"assets/giphy.gif\">\n</div>\n\n\n<div [hidden]=\"paidFor\" #paypal></div>\n","import {Component, OnInit,ChangeDetectionStrategy, ViewChild, TemplateRef,} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport {AuthUser} from \"../../../../models/AuthUser\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours,} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport {CalendarEvent, CalendarView,} from 'angular-calendar';\nimport {UserEventService} from \"../../../../services/userEvent.service\";\nimport {EventService} from \"../../../../services/event.service\";\nimport {toNumbers} from \"@angular/compiler-cli/src/diagnostics/typescript_version\";\n\nconst colors: any = {\n    blue: {\n        primary: '#007eff',\n        secondary: '',\n    },\n    orange: {\n        primary: '#ff9e34',\n        secondary: '',\n    },\n    red: {\n        primary: '#d92e2e',\n        secondary: '',\n    }\n};\n\n@Component({\n    selector: 'app-profile',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './detailProfile.component.html',\n    styleUrls: ['./detailProfile.component.css']\n})\nexport class DetailProfileComponent implements OnInit {\n    authUser: AuthUser;\n    imageProfile: any = null;\n    defaultImage: string = \"./assets/user16.jpg\";\n\n    @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n\n    view: CalendarView = CalendarView.Month;\n\n    CalendarView = CalendarView;\n\n    viewDate: Date = new Date();\n\n    refresh = new Subject<void>();\n\n    events: CalendarEvent[] = [];\n\n    activeDayIsOpen: boolean = false;\n\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer,\n                private userEventService: UserEventService,\n                private eventService: EventService) {\n    }\n\n    ngOnInit() {\n        this.authUser = this.authenticationService.getUser();\n        this.getURLProfile();\n        this.getOpenEvents();\n        this.getClosedEvents();\n\n    }\n\n    private getURLProfile() {\n        this.imageProfile = this.sanitizer.bypassSecurityTrustUrl(this.authUser.photo);\n    }\n\n    //mostras eventos\n    dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n        if (isSameMonth(date, this.viewDate)) {\n            if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\n                this.activeDayIsOpen = false;\n            } else {\n                this.activeDayIsOpen = true;\n            }\n            this.viewDate = date;\n        }\n    }\n\n    //evento seleccionado\n    handleEvent(event: CalendarEvent): void {\n       this.eventService.getEvent(toNumbers(event.id.valueOf().toString())[0]).subscribe((response) =>{\n            localStorage.setItem(\"products\",  JSON.stringify(response));\n            this.router.navigateByUrl(\"/products\");\n        });\n    }\n\n    //añade los eventos a las distintas vistas\n    addEvent(): void {\n        this.events = [\n            ...this.events\n        ];\n    }\n\n    //cambia de vista\n    setView(view: CalendarView) {\n        this.view = view;\n    }\n\n    //estable si se muestran los detalles de los eventos del dia al cambiar de dia seleccionado\n    closeOpenMonthViewDay() {\n        this.activeDayIsOpen = false;\n    }\n\n    //coger los eventos abiertos de un usuario\n    getOpenEvents(){\n        this.userEventService.getOpenEvents(this.authUser.id).subscribe((response)=>{\n            response.forEach((event) =>{\n                this.events.push({\n                    id: event.eventId,\n                    start: addHours(new Date(event.eventStart),2),\n                    end: addHours(new Date(event.eventEnd),2),\n                    title: event.eventName,\n                    color: colors.blue,\n                });\n            });\n        });\n\n    }\n\n    //coger los eventos cerrados de un usuario\n    getClosedEvents(){\n        this.userEventService.getClosedEvents(this.authUser.id).subscribe((response) => {\n            response.forEach((event) => {\n                this.events.push({\n                    id: event.eventId,\n                    start: addHours(new Date(event.eventStart),2),\n                    end: addHours(new Date(event.eventEnd),2),\n                    title: event.eventName,\n                    color: colors.orange,\n                });\n            })\n        });\n    }\n\n\n\n}\n","<section class=\"section\">\n    <div class=\"row\">\n        <div class=\"col-xxl-4 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 imageCol\">\n\n            <div class=\"row\">\n                <div class=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 imageDiv\">\n                    <ng-container *ngIf=\"authUser.photo; else imagesDiv\">\n                        <img class=\"image\" [src]=\"imageProfile\" alt=\"\"\n                             id=\"detailProfile_photo\">\n                    </ng-container>\n                    <ng-template #imagesDiv>\n                        <img class=\"image\" [src]=\"defaultImage\">\n                    </ng-template>\n                </div>\n                <div class=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 titleclass\">\n                    <button type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#editProfileModal\">Editar perfil</button>\n\n                </div>\n            </div>\n\n        </div>\n\n\n        <div class=\"col-xxl-8 col-xl-12 col-lg-12 col-md-12 col-sm-10 col-10 calendarDiv\">\n            <div class=\"row text-center\">\n                <!--BOTONES ANTERIOR HOY SIGUIENTE -->\n                <div class=\"col-md-4\">\n                    <div class=\"btn-group\">\n                        <div class=\"btn btn-primary\"\n                             mwlCalendarPreviousView\n                             [view]=\"view\"\n                             [(viewDate)]=\"viewDate\"\n                             (viewDateChange)=\"closeOpenMonthViewDay()\">\n                            Anterior\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             mwlCalendarToday\n                             [(viewDate)]=\"viewDate\">\n                            Hoy\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             mwlCalendarNextView\n                             [view]=\"view\"\n                             [(viewDate)]=\"viewDate\"\n                             (viewDateChange)=\"closeOpenMonthViewDay()\">\n                            Siguiente\n                        </div>\n                    </div>\n                </div>\n                <!-- FECHA ACTUAL -->\n                <div class=\"col-md-4\">\n                    <h3 class=\"todayDate\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'es' }}</h3>\n                </div>\n                <!-- BOTONES MES SEMANA DIA -->\n                <div class=\"col-md-4\">\n                    <div class=\"btn-group\">\n                        <div class=\"btn btn-primary\"\n                             (click)=\"setView(CalendarView.Month)\"\n                             [class.active]=\"view === CalendarView.Month\">\n                            Mes\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             (click)=\"setView(CalendarView.Week)\"\n                             [class.active]=\"view === CalendarView.Week\">\n                            Semana\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             (click)=\"setView(CalendarView.Day)\"\n                             [class.active]=\"view === CalendarView.Day\">\n                            Día\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--VISTAS DEL CALENDARIO -->\n            <div [ngSwitch]=\"view\">\n                <!-- VISTA MENSUAL DEL CALENDARIO -->\n                <mwl-calendar-month-view\n                        *ngSwitchCase=\"CalendarView.Month\"\n                        [viewDate]=\"viewDate\"\n                        [events]=\"events\"\n                        [weekStartsOn]=\"1\"\n                        [refresh]=\"refresh\"\n                        [activeDayIsOpen]=\"activeDayIsOpen\"\n                        (dayClicked)=\"dayClicked($event.day)\"\n                        (eventClicked)=\"handleEvent( $event.event)\">\n                </mwl-calendar-month-view>\n                <!-- VISTA SEMANAL DEL CALENDARIO -->\n                <mwl-calendar-week-view\n                        *ngSwitchCase=\"CalendarView.Week\"\n                        [viewDate]=\"viewDate\"\n                        [weekStartsOn]=\"1\"\n                        [events]=\"events\"\n                        [refresh]=\"refresh\"\n                        (eventClicked)=\"handleEvent( $event.event)\">\n                </mwl-calendar-week-view>\n                <!-- VISTA DIARIA DEL CALENDARIO -->\n                <mwl-calendar-day-view\n                        *ngSwitchCase=\"CalendarView.Day\"\n                        [viewDate]=\"viewDate\"\n                        [events]=\"events\"\n                        [refresh]=\"refresh\"\n                        (eventClicked)=\"handleEvent( $event.event)\">\n                </mwl-calendar-day-view>\n            </div>\n        </div>\n    </div>\n    <app-editProfile [authUser] = \"authUser\"></app-editProfile>\n</section>\n\n","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../../modules/notification/services/notification.service\";\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport {AuthUser} from \"../../../../models/AuthUser\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n    selector: 'app-editProfile',\n    templateUrl: './editProfile.component.html',\n    styleUrls: ['./editProfile.component.css']\n})\nexport class EditProfileComponent implements OnInit, AfterViewChecked {\n    defaultImage = \"./assets/user16.jpg\";\n    imageFormat: boolean;\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"EDITAR USUARIO\";\n    _authUser: AuthUser;\n    birthday: Date;\n    password = \"\";\n    newPassword = \"\";\n    passwordConfirm = \"\";\n    login = \"\";\n    available: boolean = true;\n\n    public options: any = {\n        autoApply: false,\n        alwaysShowCalendars: true,\n        applyButtonClasses: \"btn-primary applyDate\",\n        buttonClasses: \"btn btn-sm\",\n        cancelClass: \"btn-default cancelDate\",\n        drops: \"up\",\n        locale: {\n            format: 'DD/MM/yyyy',\n            \"firstDay\": 1,\n            daysOfWeek: [\n                \"D\",\n                \"L\",\n                \"M\",\n                \"X\",\n                \"J\",\n                \"V\",\n                \"S\"\n            ],\n            monthNames: [\n                \"Enero\",\n                \"Febrero\",\n                \"Marzo\",\n                \"Abril\",\n                \"Mayo\",\n                \"Junio\",\n                \"Julio\",\n                \"Agosto\",\n                \"Septiembre\",\n                \"Octubre\",\n                \"Noviembre\",\n                \"Diciembre\"\n            ]\n        },\n        minDate: undefined,\n        maxDate: new Date(),\n        opens: 'left',\n        showDropdowns: true,\n        timePicker: false,\n        singleDatePicker: true\n    };\n\n\n    constructor(private sanitizer: DomSanitizer,\n                private authenticationService: AuthenticationService,\n                private userService: UserService,\n                private router: Router,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    get authUser(){\n        return this._authUser;\n    }\n\n    @Input() set authUser(authUser: AuthUser){\n        if (authUser.id != undefined){\n            this._authUser = authUser;\n            if (this.authUser.birthday != null){\n                this.birthday = new Date(this.authUser.birthday);\n            }else{\n                this.birthday = null;\n            }\n            this.login = authUser.login;\n        }else{\n            this._authUser = new AuthUser();\n            this.birthday = null;\n        }\n    }\n\n    setNotify(){\n        this.authUser.notify = !this.authUser.notify;\n    }\n\n    ngAfterViewChecked() {\n        document.getElementsByClassName(\"applyDate\")[0].textContent =\"Aplicar\";\n        document.getElementsByClassName(\"cancelDate\")[0].textContent = \"Cancelar\";\n    }\n\n    public applyDate(): void {\n        this.authUser.birthday= new Date(this.birthday.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n    }\n\n    public selectedDate(value: any): void {\n        this.birthday = new Date(value.start);\n    }\n\n    public cancelDate(): void {\n        this.birthday = undefined;\n    }\n\n    onEdit(){\n        if (this.correctPassword()){\n            this.authUser.login = this.login;\n            this.userService.editUser(this.authUser).subscribe(() => {\n                this.closeModal();\n                document.getElementById(\"closeButton\").click();\n                localStorage.setItem(\"profile\", JSON.stringify(true));\n                this.authenticationService.logOut();\n                this.router.navigateByUrl(\"/login\");\n            });\n        }\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.authUser.photo = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    correctPassword(): boolean{\n        if(this.password != \"\" && this.password != null) {\n            if (this.password == this.authUser.password) {\n                if (this.newPassword == this.passwordConfirm && this.newPassword != \"\" && this.newPassword != null && this.passwordConfirm != \"\" && this.passwordConfirm != null) {\n                    this.authUser.password = this.newPassword;\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }else{\n            return true;\n        }\n    }\n\n    closeModal(){\n        this.imageFormat = null;\n        this.authUser = new AuthUser();\n        this.cancelDate();\n        this.password = \"\";\n        this.newPassword = \"\";\n        this.passwordConfirm = \"\";\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n\n}","<div class=\"modal fade\" id=\"editProfileModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"editProfileLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onEdit();\" ngNativeValidate #editProfileForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row imageRow\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 file-input imageDiv\">\n                                        <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                               type=\"file\"\n                                               id=\"editProfile_userPhoto\" name=\"userPhoto\">\n                                        <label title=\"Cambiar imagen de usuario\" for=\"editProfile_userPhoto\"\n                                               (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                            <ng-container *ngIf=\"authUser.photo; else imagesDiv\">\n                                                <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"authUser.photo\" alt=\"\"\n                                                     id=\"editProfile_photo\">\n                                            </ng-container>\n                                            <ng-template #imagesDiv>\n                                                <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"defaultImage\">\n                                            </ng-template>\n                                            <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                        </label>\n                                        <div *ngIf=\"imageFormat == false\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row secondDiv\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 passwordDiv\">\n                                        <div>\n                                            <input type=\"password\" class=\"inputs\" id=\"editProfile_password\" autocomplete=\"current-password\" name=\"current-password\" placeholder=\"Contraseña Actual\"\n                                                   [(ngModel)]=\"password\" #passwordForm=\"ngModel\" minlength=\"6\">\n                                            <div *ngIf=\"password != authUser.password && password !=''\" class=\"alert alert-danger\">\n                                                <div>La contraseña no es correcta</div>\n                                            </div>\n                                            <div *ngIf=\"editProfileForm.submitted && passwordForm.invalid\" class=\"alert alert-danger\">\n                                                <div *ngIf=\"passwordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                                                <div *ngIf=\"passwordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                                    caracteres\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div class=\"row secondDiv\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <div>\n                                            <input type=\"password\" class=\"inputs\" id=\"editProfile_newPassword\" autocomplete=\"new-password\" name=\"new-password\" placeholder=\"Nueva contraseña\"\n                                                   [(ngModel)]=\"newPassword\" #passwordForm=\"ngModel\" minlength=\"6\">\n                                            <div *ngIf=\"editProfileForm.submitted && passwordForm.invalid\" class=\"alert alert-danger\">\n                                                <div *ngIf=\"passwordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                                                <div *ngIf=\"passwordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                                    caracteres\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row secondDiv\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"password\" class=\"inputs\" id=\"editProfile_userPasswordConfirm\" autocomplete=\"new-password\" name=\"new-password\"\n                                               placeholder=\"Confirmación contraseña\" [(ngModel)]=\"passwordConfirm\"\n                                               #userPasswordConfirmForm=\"ngModel\" minlength=\"6\">\n                                        <div *ngIf=\"newPassword != passwordConfirm\" class=\"alert alert-danger\">\n                                            <div>La contraseña de confirmación no coincide</div>\n                                        </div>\n                                        <div *ngIf=\"editProfileForm.submitted && userPasswordConfirmForm.invalid\" class=\"alert alert-danger\">\n                                            <div *ngIf=\"userPasswordConfirmForm.errors.required\">La contraseña es un campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userPasswordConfirmForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                                caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"editProfile_userName\" name=\"userName\"\n                                               class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"authUser.name\" required\n                                               #userNameForm=\"ngModel\">\n                                        <div *ngIf=\"editProfileForm.onSubmit(undefined) && userNameForm.invalid  || userNameForm.invalid && userNameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userNameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"editProfile_userSurname\" name=\"userSurname\"\n                                               class=\"inputs\" placeholder=\"Apellidos*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"authUser.surname\" required\n                                               #userSurnameForm=\"ngModel\">\n                                        <div *ngIf=\"editProfileForm.onSubmit(undefined) && userSurnameForm.invalid  || userSurnameForm.invalid && userSurnameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userSurnameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userSurnameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"editProfile_login\" name=\"login\"\n                                               class=\"inputs\" placeholder=\"Login*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"login\" required\n                                               #loginForm=\"ngModel\" autocomplete=\"username\">\n                                        <div *ngIf=\"!available\" class=\"alert alert-danger\">\n                                            <div>Login no disponible</div>\n                                        </div>\n                                        <div *ngIf=\"editProfileForm.onSubmit(undefined) && loginForm.invalid  || loginForm.invalid && loginForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"loginForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"loginForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <div class=\"daterangerpicker\"\n                                             daterangepicker\n                                             [options]=\"options\"\n                                             (selected)=\"selectedDate($event)\"\n                                             (applyDaterangepicker)=\"applyDate()\"\n                                             (cancelDaterangepicker)=\"cancelDate()\">\n                                            <div class=\"d-flex justify-content-between h-100\">\n                                            <span *ngIf=\"birthday != undefined\" class=\"ps-2 align-self-center\">\n                                                            {{birthday | date:'dd/MM/YYYY'}}\n                                            </span>\n                                                <span *ngIf=\"birthday == undefined\" class=\"placeholder align-self-center\">\n                                                            Fecha*\n                                            </span>\n                                                <div class=\"align-self-center\">\n                                                    <span *ngIf=\"birthday != undefined\" class=\"cancel\" (click)=\"cancelDate()\">×</span>\n                                                    <span class=\"ng-arrow-wrapper\">\n                                                     <span class=\"btn ng-arrow\"><i class=\"bi bi-calendar\"></i></span>\n                                                </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <div class=\"form-check form-switch\">\n                                            <input name=\"notify\" class=\"form-check-input check\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" [checked]=\"authUser.notify\" (click)=\"setNotify()\">\n                                            <label class=\"form-check-label text check\" for=\"flexSwitchCheckDefault\">Notificaciones email</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"buttons\">\n                                <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                    Cerrar\n                                </button>\n                            </div>\n                            <div class=\"buttons\">\n                                <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from \"../../../services/user.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n  private mUser: MUser = new MUser();\n  name = \"\";\n  surname = \"\";\n  login = \"\";\n  password = \"\";\n  passwordConfirm = \"\";\n  email = \"\";\n  available: boolean = true;\n  private return = 'login';\n\n  constructor(private router: Router,\n              private userService: UserService,\n              private notificationService: NotificationService) {\n  }\n  ngOnInit() {}\n  onCreate(){\n    this.mUser.userLogin = this.login;\n    this.mUser.userPassword = this.password;\n    this.mUser.userName = this.name;\n    this.mUser.userEmail = this.email;\n    this.mUser.userSurname = this.surname;\n    if(this.password == this.passwordConfirm) {\n      this.userService.createUser(this.mUser).subscribe(()=>{\n        this.notificationService.info(\"Revisa tu correo electrónico y verifica tu cuenta para poder acceder a A Pachas\", \"Pendiente de verificación\");\n      });\n    }\n  }\n\n  loginAvailable(){\n    this.userService.loginAvailable(this.login).subscribe((response) => {\n      if (!response) {\n        this.available = false;\n      }else{\n        this.available = true;\n      }\n    });\n  }\n}\n","<section>\n    <div class=\"container\">\n        <div class=\"user signupBx\">\n            <div class=\"formBx\">\n                <form (submit)=\"onCreate()\" ngNativeValidate #loginForm=\"ngForm\">\n                    <h2>Crear una cuenta en <a href=\"home\">¡A pachas!</a></h2>\n                    <div>\n                        <input type=\"text\" id=\"register_userName\" name=\"userName\" placeholder=\"Nombre*\"\n                               pattern=\"[a-zA-ZñÑ]{1,100}\" title=\"Must be an alpha\"\n                               [(ngModel)]=\"name\" required #usernameForm=\"ngModel\">\n                        <div *ngIf=\"!available\" class=\"alert alert-danger\">\n                            <div>Login no disponible</div>\n                        </div>\n                        <div *ngIf=\"loginForm.submitted && usernameForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"usernameForm.errors.required\">El nombre es un campo obligatorio</div>\n                            <div *ngIf=\"usernameForm.errors.pattern\">El nombre solo puede contener letras y debe estar\n                                comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"text\" id=\"register_userSurname\" name=\"userSurname\" placeholder=\"Apellidos*\"\n                               [(ngModel)]=\"surname\" pattern=\"[a-zA-Zñáéíóú ]{1,100}\" title=\"Must be an alpha\" required\n                               #userSurnameForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && userSurnameForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userSurnameForm.errors.required\">El apellido es un campo obligatorio</div>\n                            <div *ngIf=\"userSurnameForm.errors.pattern\">El apellido solo puede contener letras, espacios\n                                y debe estar comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"text\" id=\"register_userLogin\" name=\"userLogin\" placeholder=\"Nombre de usuario*\"\n                               [(ngModel)]=\"login\" required #userLoginForm=\"ngModel\" minlength=\"6\" maxlength=\"13\"\n                               pattern=\"[a-zA-ZñÑ0-9_-]{1,100}\" title=\"Must be an alphanumeric\">\n                        <div *ngIf=\"loginForm.submitted && userLoginForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userLoginForm.errors.required\">El nombre de usuario es un campo obligatorio\n                            </div>\n                            <div *ngIf=\"userLoginForm.errors.pattern\">El nombre de usuario solo puede contener letras,\n                                número, _ y debe estar comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"password\" id=\"register_userPassword\" name=\"userPassword\" placeholder=\"Contraseña*\"\n                               [(ngModel)]=\"password\" required #userPasswordForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && userPasswordForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userPasswordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                            <div *ngIf=\"userPasswordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"password\" id=\"register_userPasswordConfirm\" name=\"userPasswordConfirm\"\n                               placeholder=\"Confirmación contraseña*\" [(ngModel)]=\"passwordConfirm\" required\n                               #userPasswordConfirmForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"password != passwordConfirm\" class=\"alert alert-danger\">\n                            <div>La contraseña de confirmación no coincide</div>\n                        </div>\n                        <div *ngIf=\"loginForm.submitted && userPasswordConfirmForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userPasswordConfirmForm.errors.required\">La contraseña es un campo obligatorio\n                            </div>\n                            <div *ngIf=\"userPasswordConfirmForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"email\" id=\"register_userEmail\" name=\"userEmail\" placeholder=\"Correo electrónico*\"\n                               [(ngModel)]=\"email\" required #userEmailForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && userEmailForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userEmailForm.errors.required\">El correo electrónico es un campo obligatorio\n                            </div>\n                            <div *ngIf=\"userEmailForm.errors.pattern\">El correo electrónico solo puede contener letras,\n                                @, . y debe estar comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Registrar\">\n                    <p class=\"signin\">¿tienes una cuenta? <a href=\"login\"> Inicia sesión</a></p>\n                </form>\n            </div>\n            <div class=\"imgBx\"><img src=\"../../../../assets/RegisterMoney.jpg\" alt=\"Imagen de tarjetas decorativa registro\"></div>\n        </div>\n    </div>\n</section>\n<simple-notifications></simple-notifications>\n","import {Component, OnInit} from \"@angular/core\";\nimport {MUser} from \"../../../models/MUser\";\nimport {UserUserEventService} from \"../../../services/userUserEvent.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MUserUserEvent} from \"../../../models/MUserUserEvent\";\nimport {EventService} from \"../../../services/event.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {UserService} from \"../../../services/user.service\";\n\n@Component({\n    selector: 'app-transactionHistory',\n    templateUrl: './transactionHistory.component.html',\n    styleUrls: ['./transactionHistory.component.css']\n})\n\nexport class TransactionHistoryComponent implements OnInit {\n    size: number= 6;\n    transactionPage: number = 0;\n    index: number;\n    previous:string;\n    next:string;\n    transactions: MUserUserEvent[] = [];\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultEventImage: string = \"./assets/event7.jpg\";\n    imagesPartakers: {[index:number]: any;} = {};\n    imagesEvents: {[index:number]: any;} = {};\n    searchTransactionValue = \"\";\n    totalTransactionPage:number= 0;\n    transactionPartakers: MUser[] = [];\n    transactionEvents: MEvent[] = [];\n    checked: boolean[] = [false,false,false,false, false];\n    message: string = \"\";\n    selectedTransaction: MUserUserEvent;\n    paid:boolean = false;\n    confirmed: boolean = false;\n\n    constructor(private userUserEventService: UserUserEventService,\n                private userService: UserService,\n                private eventService: EventService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getTransactions();\n    }\n    cost(cost: number): number{\n        return Math.round(cost*100)/100;\n    }\n\n    onRequest($event){\n        if ($event.valueOf() && this.paid){\n            this.updatePaid();\n        }else if ($event.valueOf() && this.confirmed){\n            this.updateConfirmed();\n        }\n    }\n\n    updatePaid(){\n        this.userUserEventService.editPaid(this.selectedTransaction, true).subscribe(()=>{\n            this.getTransactions();\n            this.selectedTransaction = null;\n            this.paid = false;\n        });\n    }\n\n    updateConfirmed(){\n        this.userUserEventService.editConfirmed(this.selectedTransaction, true).subscribe(()=>{\n            this.getTransactions();\n            this.selectedTransaction = null;\n            this.confirmed = false;\n        });\n    }\n\n    messageValue(transaction: MUserUserEvent){\n        this.selectedTransaction = transaction;\n        if (transaction.senderId == this.authenticationService.getUser().id){\n            this.message = \"¿Estás seguro de que quieres confirmar que has pagado?\"\n            this.paid = true;\n        }else if (transaction.receiverId == this.authenticationService.getUser().id){\n            this.message = \"¿Estás seguro de que quieres confirmar que has recibido el pago?\"\n            this.confirmed = true;\n        }else{\n            this.message = \"\";\n        }\n    }\n\n    toggleCheck(index: number){\n        if (index != -1){\n\n            if ((index == 0 && !this.checked[4]) || (index == 4 && !this.checked[0]) || (index == 1 && !this.checked[2]) || (index == 2 && !this.checked[1]) || index == 3) {\n                this.searchTransactionValue = \"\";\n                this.transactionPage = 0;\n                this.checked[index] = !this.checked[index];\n            }\n        }\n            if (this.checked[0] && !this.checked[1] && !this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 0 0 1\n                this.getByEvent();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 0 1 0\n                this.getDebts();\n            } else if (this.checked[0] && this.checked[1] && !this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 0 1 1\n                this.getDebtsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 1 0 0\n                this.getPayments();\n            } else if (this.checked[0] && !this.checked[1] && this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 1 0 1\n                this.getPaymentsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 0 0\n                this.getFinished();\n            } else if (this.checked[0] && !this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 0 1\n                this.getFinishedByEvent();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 1 0\n                this.getFinishedDebts();\n            } else if (this.checked[0] && this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 1 1\n                this.getFinishedDebtsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 1 0 0\n                this.getFinishedPayments();\n            } else if (this.checked[0] && !this.checked[1] && this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 1 0 1\n                this.getFinishedPaymentsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && !this.checked[2] && !this.checked[3] && this.checked[4]) { // 1 0 0 0 0\n                this.getByDate();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && !this.checked[3] && this.checked[4]) { // 1 0 0 1 0\n                this.getDebtsByDate();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && !this.checked[3] && this.checked[4]) { // 1 0 1 0 0\n                this.getPaymentsByDate();\n            } else if (!this.checked[0] && !this.checked[1] && !this.checked[2] && this.checked[3] && this.checked[4]) { // 1 1 0 0 0\n                this.getFinishedByDate();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && this.checked[3] && this.checked[4]) { // 1 1 0 1 0\n                this.getFinishedDebtsByDate();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && this.checked[3] && this.checked[4]) { // 1 1 1 0 0\n                this.getFinishedPaymentsByDate();\n            } else {\n                this.getTransactions();\n            }\n    }\n\n    getByEvent(){\n        this.userUserEventService.getPageableUserUserEventsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getDebts(){\n        this.userUserEventService.getPageableUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n    totalTransactionDebtsPages(){\n        this.userUserEventService.countUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getDebtsByEvent(){\n        this.userUserEventService.getPageableUserUserEventsDebtsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getPayments(){\n        this.userUserEventService.getPageableUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalTransactionPaymentsPages(){\n        this.userUserEventService.countUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getPaymentsByEvent(){\n        this.userUserEventService.getPageableUserUserEventsPaymentsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinished() {\n        this.userUserEventService.getPageableNotFinishedUserUserEventsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalFinishedTransactionPages(){\n        this.userUserEventService.countFinishedUserUserEventsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getFinishedByEvent(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedDebts(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalFinishedTransactionDebtsPages(){\n        this.userUserEventService.countFinishedUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getFinishedDebtsByEvent(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsDebtsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedPayments(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalFinishedTransactionPaymentsPages(){\n        this.userUserEventService.countFinishedUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getFinishedPaymentsByEvent(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsPaymentsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getByDate(){\n        this.userUserEventService.getPageableUserUserEventsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n\n    getDebtsByDate(){\n        this.userUserEventService.getPageableUserUserEventsDebtsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getPaymentsByDate(){\n        this.userUserEventService.getPageableUserUserEventsPaymentsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedByDate(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedDebtsByDate(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsDebtsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedPaymentsByDate(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsPaymentsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    checkFilter(index: number):string{\n        if (this.checked[index]){\n            return \"checkFilter\"\n        }else{\n            return \"\";\n        }\n    }\n\n    checkedFilter(index: number): string{\n        if (index == 0){\n            return \"Ordenar por evento\";\n        }else if (index == 1){\n            return \"Deudas\";\n        }else if (index == 2){\n            return \"Pagos\";\n        }else if (index == 3){\n            return \"Pendientes\";\n        }else if (index == 4){\n            return \"Ordenar por más reciente\";\n        }\n\n    }\n\n    costColor(transaction: MUserUserEvent): string {\n        if (this.authenticationService.getUser().id == transaction.senderId){\n            return \"costColor\";\n        }else{\n            return \"\";\n        }\n    }\n\n    getStatus(transaction: MUserUserEvent): string{\n        let message: string = \"\";\n        if (this.authenticationService.getUser().id == transaction.senderId){\n            if (transaction.paid){\n                if (transaction.confirmed){\n                    message = \"Pagado\";\n                }else{\n                    message = \"Pendiente de confirmación\";\n                }\n            }else{\n                message = \"Pagar\";\n            }\n        }else{\n            if (transaction.paid){\n                if (transaction.confirmed){\n                    message = \"Recibido\";\n                }else{\n                    message = \"Confirmar\";\n                }\n            }else{\n                message = \"Pendiente de cobro\";\n            }\n        }\n        return message;\n    }\n\n    getTransactions(){\n        this.userUserEventService.getPageableUserUserEventsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n\n        });\n    }\n\n    private totalTransactionPages() {\n        this.userUserEventService.countUserUserEventsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getPartakers(){\n        this.transactions.forEach((transaction)=>{\n            if (this.transactionPartakers.find(partaker => partaker.userId === transaction.senderId) == undefined){\n                this.getUser(transaction.senderId);\n            }\n            if (this.transactionPartakers.find(partaker => partaker.userId === transaction.receiverId) == undefined){\n                this.getUser(transaction.receiverId);\n            }\n        });\n    }\n\n    private getUser(id: number) {\n        this.userService.getUserById(id).subscribe((response) => {\n            this.transactionPartakers.push(response);\n            this.getURLPartaker(response);\n        });\n    }\n\n    private getURLPartaker(partaker: MUser){\n        this.imagesPartakers[partaker.userId] = this.sanitizer.bypassSecurityTrustUrl(partaker.userPhoto);\n    }\n\n    getEvents(){\n        this.transactions.forEach((transaction)=>{\n            if (this.transactionEvents.find(event => event.eventId === transaction.eventId) == undefined){\n                this.getEvent(transaction.eventId);\n            }\n        });\n    }\n\n    private getEvent(id: number){\n        this.eventService.getEvent(id).subscribe((response) => {\n            this.transactionEvents.push(response);\n            this.getURLEvent(response);\n        });\n    }\n\n    private getURLEvent(event: MEvent){\n        if (event.eventPhoto != null){\n            this.imagesEvents[event.eventId] = this.sanitizer.bypassSecurityTrustUrl(event.eventPhoto);\n        }\n    }\n\n    getActor(actorId: number): MUser{\n        let actor: MUser = new MUser();\n        this.transactionPartakers.forEach((partaker) =>{\n            if (partaker.userId == actorId){\n                actor = partaker;\n            }\n        });\n        return actor;\n    }\n\n    getEventTransaction(eventId: number): MEvent{\n        let eventTransaction: MEvent = new MEvent();\n        this.transactionEvents.forEach((event) =>{\n            if (event.eventId == eventId){\n                eventTransaction = event;\n            }\n        });\n        return eventTransaction;\n    }\n\n    paginationClass(){\n        if(this.transactionPage!=0 && this.transactionPage+1<this.totalTransactionPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3\";\n        }else if (this.transactionPage==0 && this.transactionPage+1<this.transactionPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n        }else if(this.transactionPage!=0 && this.transactionPage+1==this.transactionPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    setTransactionPage(page: number){\n        this.transactionPage += page;\n        this.transactionPagination();\n        this.paginationClass();\n    }\n\n    private transactionPagination(){\n        if(this.searchTransactionValue == \"\"){\n            this.toggleCheck(-1);\n        }else{\n            this.searchTransaction();\n        }\n    }\n\n    private searchTransaction(){\n        this.userUserEventService.getPageableSearchUserUserEventsByAuthUser(this.searchTransactionValue, this.authenticationService.getUser().id, this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.searchTransactionTotalPages();\n        });\n    }\n\n    searchTransactionInput(){\n        this.transactionPage=0;\n        this.transactionPagination();\n    }\n\n    private searchTransactionTotalPages(){\n        this.userUserEventService.countSearchUserUserEventsByAuthUser(this.searchTransactionValue, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n}","<section>\n    <h6 class=\"title modal-title\">HISTORIAL DE TRANSACCIONES</h6>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 searchTransaction\">\n            <form ngNativeValidate (input)=\"searchTransactionInput()\" #searchTransactionsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_transaction\" name=\"transaction\" placeholder=\"Buscar por nombre de usuario o evento\"\n                       [(ngModel)]=\"searchTransactionValue\" required #searchTransactionValueForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 dropd\">\n            <div class=\"dropdown dropAlign\">\n                <a class=\"btn btn-neutral dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <i class=\"zmdi zmdi-more-vert iSize\"></i>\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(0)\" (click)=\"toggleCheck(0)\">Ordenar por nombre de evento</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(1)\" (click)=\"toggleCheck(1)\">Mostrar deudas</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(2)\" (click)=\"toggleCheck(2)\">Mostrar pagos</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(3)\" (click)=\"toggleCheck(3)\">Mostrar transacciones pendientes</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(4)\" (click)=\"toggleCheck(4)\">Ordenar por más reciente</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div *ngIf=\"checked[0]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(0)}}</p>\n        </div>\n        <div *ngIf=\"checked[1]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(1)}}</p>\n        </div>\n        <div *ngIf=\"checked[2]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(2)}}</p>\n        </div>\n        <div *ngIf=\"checked[3]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(3)}}</p>\n        </div>\n        <div *ngIf=\"checked[4]\" class=\"col-3\">\n            <p class=\"tag\">{{checkedFilter(4)}}</p>\n        </div>\n\n    </div>\n    <app-messageConfirm (eventMessageConfirm)=\"onRequest($event)\" [message]=message></app-messageConfirm>\n    <div class=\"row row-cols-1 row-cols-xxl-2 row-cols-xl-2 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-3 divAligment\">\n            <table class=\"table table-hover\">\n                <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\" class=\"transactionTitle\">Evento</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Emisor</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Receptor</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Costo</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Estado</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let transaction of transactions;let i=index\">\n                    <td>\n                        <ng-container *ngIf=\"getEventTransaction(transaction.eventId).eventPhoto != null; else eventImagesDiv\">\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\"\n                                     [src]=\"imagesEvents[transaction.eventId]\" alt=\"\" id=\"detailEvent_photo\">\n                            </p>\n                        </ng-container>\n                        <ng-template #eventImagesDiv>\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\" [src]=\"defaultEventImage\">\n                            </p>\n                        </ng-template>\n                        <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                            <h5 class=\"text\">{{getEventTransaction(transaction.eventId).eventName}}</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"getActor(transaction.senderId).userPhoto != null; else senderImagesDiv\">\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\"\n                                 [src]=\"imagesPartakers[transaction.senderId]\" alt=\"\" id=\"detailSender_photo\">\n                            </p>\n                        </ng-container>\n                        <ng-template #senderImagesDiv>\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                            </p>\n                        </ng-template>\n                        <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                            <h5 class=\"text\">{{getActor(transaction.senderId).userLogin}}</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"getActor(transaction.receiverId).userPhoto != null; else receiverImagesDiv\">\n                        <p class=\"imageP\">\n                            <img class=\"imageTransaction\"\n                                 [src]=\"imagesPartakers[transaction.receiverId]\" alt=\"\" id=\"detailReceiver_photo\">\n                        </p>\n                        </ng-container>\n                        <ng-template #receiverImagesDiv>\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                            </p>\n                        </ng-template>\n                        <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                            <h5 class=\"text\">{{getActor(transaction.receiverId).userLogin}}</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <p class=\"text cost info\" [ngClass]=\"costColor(transaction)\">{{cost(transaction.cost)}}€</p>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"getStatus(transaction) != 'Pagar' && getStatus(transaction) != 'Confirmar'; else statusDiv\">\n                            <p class=\"text status\">{{getStatus(transaction)}}</p>\n                        </ng-container>\n                        <ng-template #statusDiv>\n                            <button class=\"text status button\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\" (click)=\"messageValue(transaction)\">{{getStatus(transaction)}}</button>\n                        </ng-template>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"transactionPage!=0\"><a class=\"page-link previous\" (click)=\"setTransactionPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"transactionPage+1<totalTransactionPage\"><a class=\"page-link next\" (click)=\"setTransactionPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-messageConfirm',\n    templateUrl: './messageConfirm.component.html',\n    styleUrls: ['./messageConfirm.component.css']\n})\nexport class MessageConfirmComponent implements OnInit {\n\n    @Output()\n    eventMessageConfirm = new EventEmitter<boolean>();\n\n    _message: string = \"\";\n\n    constructor() {\n    }\n\n    ngOnInit() {}\n\n    get message(){\n        return this._message;\n    }\n\n    @Input() set message(message: string){\n        if (message!= undefined){\n            this._message = message;\n        }\n    }\n\n    onConfirm(value: boolean){\n        this.eventMessageConfirm.emit(value);\n    }\n}","<div class=\"modal fade\" id=\"messageConfirmModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"messageConfirmLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{_message}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 buttons\">\n                            <button type=\"button\" id=\"cancelButton\" data-bs-dismiss=\"modal\" class=\"button close\" (click)=\"onConfirm(false);\">\n                                    Denegar\n                            </button>\n                        </div>\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 buttons\">\n                            <button type=\"button\" id=\"acceptButton\"  data-bs-dismiss=\"modal\" class=\"button\" (click)=\"onConfirm(true);\">\n                                    Aceptar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {EventService} from \"../../../services/event.service\";\nimport {MGroup} from \"../../../models/MGroup\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {MGroupMembers} from \"../../../models/MGroupMembers\";\n\n@Component({\n    selector: 'app-createEvent',\n    templateUrl: './createEvent.component.html',\n    styleUrls: ['./createEvent.component.css']\n})\nexport class CreateEventComponent implements OnInit, AfterViewChecked {\n\n    defaultImage = \"./assets/event7.jpg\";\n    defaultUserImage = \"./assets/user16.jpg\";\n    defaultGroupImage = \"./assets/group7_2.jpg\";\n\n    friends: MUser[];\n    groups: MGroup[];\n    selectPartakers: MGroupMembers[];\n\n    imageFormat: boolean;\n    eventPartakers: number[];\n    eventGroups: number[];\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"CREAR EVENTO\";\n    _event: MEvent;\n\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n    public initialDate;\n    public finalDate;\n    public options: any = {\n        autoApply: false,\n        alwaysShowCalendars: true,\n        applyButtonClasses: \"btn-primary applyDate\",\n        buttonClasses: \"btn btn-sm\",\n        cancelClass: \"btn-default cancelDate\",\n        drops: \"up\",\n        locale: {\n            format: 'DD/MM/yyyy HH:mm',\n            \"firstDay\": 1,\n            daysOfWeek: [\n            \"D\",\n            \"L\",\n            \"M\",\n            \"X\",\n            \"J\",\n            \"V\",\n            \"S\"\n            ],\n            monthNames: [\n                \"Enero\",\n                \"Febrero\",\n                \"Marzo\",\n                \"Abril\",\n                \"Mayo\",\n                \"Junio\",\n                \"Julio\",\n                \"Agosto\",\n                \"Septiembre\",\n                \"Octubre\",\n                \"Noviembre\",\n                \"Diciembre\"\n            ]\n        },\n        minDate: new Date(),\n        maxDate: undefined,\n        opens: 'left',\n        showDropdowns: true,\n        timePicker: true\n    };\n\n    constructor(private eventService: EventService,\n                private groupUserService: GroupUserService,\n                private userEventService: UserEventService,\n                private userUserService: UserUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.eventPartakers = [];\n        this.eventGroups = [];\n        this.friends = [];\n        this.groups = [];\n        this.selectPartakers = [];\n    }\n\n    ngAfterViewChecked() {\n        document.getElementsByClassName(\"applyDate\")[0].textContent =\"Aplicar\";\n        document.getElementsByClassName(\"cancelDate\")[0].textContent = \"Cancelar\";\n    }\n\n    get event(){\n        return this._event;\n    }\n\n    @Input() set event(event: MEvent){\n        if (event.eventId != undefined){\n            this._event = event;\n            this.title = \"Editar evento\";\n            this.initialDate = this.event.eventStart;\n            this.finalDate = this.event.eventEnd;\n            this.getPartakers();\n        }else{\n            this._event = new MEvent();\n            this.title = \"Crear evento\";\n            this.initialDate = null;\n            this.finalDate = null;\n        }\n\n        this.eventPartakers = [];\n        this.eventGroups = [];\n        this.selectPartakers = [];\n        this.getGroups();\n    }\n\n    public applyDate(): void {\n        this.event.eventStart =new Date(this.initialDate.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n        this.event.eventEnd = new Date(this.finalDate.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n    }\n\n    public selectedDate(value: any): void {\n        this.initialDate = new Date(value.start);\n        this.finalDate = new Date(value.end);\n    }\n\n    public cancelDate(): void {\n        this.initialDate = undefined;\n        this.finalDate = undefined;\n    }\n\n    onCreate(){\n        this.event.eventOwner = this.authenticationService.getUser().id;\n        this.eventPartakers.push(this.authenticationService.getUser().id);\n        this.eventService.createEvent(this.event).subscribe((response) => {\n            this.eventPartakers.forEach((id)=> {\n                this.userEventService.createUserEvent(response,id).subscribe(() =>{\n                    this.eventSave.emit();\n                });\n            });\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Nuevo evento creado\", \"Se ha creado el evento correctamente.\");\n        });\n\n\n    }\n\n    onEdit(){\n        this.eventPartakers.push(this.authenticationService.getUser().id);\n        this.eventService.editEvent(this.event).subscribe(() => {\n            this.userEventService.editUserEvent(this.event.eventId, this.eventPartakers).subscribe();\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Evento editado\", \"Se ha editado el evento correctamente.\");\n        });\n    }\n\n    onSubmit(){\n        if (this.event.eventId != undefined){\n            this.onEdit();\n        }else{\n            this.onCreate();\n        }\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.event.eventPhoto = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    closeModal(){\n        this.event = new MEvent();\n        this.eventPartakers = [];\n        this.eventGroups = [];\n        this.imageFormat = null;\n        this.cancelDate();\n    }\n\n\n    private getFriends(users: number[]){\n        this.userUserService.getFriends(this.authenticationService.getUser().id).subscribe((response) => {\n            this.friends = response;\n            response.forEach(user=>{\n                if (!Object.values(users).includes(user.userId)){\n                    let member: MGroupMembers = new MGroupMembers();\n                    member.groupId = 0;\n                    member.groupName = \"Otros\";\n                    member.groupPhoto = null;\n                    member.userId = user.userId;\n                    member.userLogin = user.userLogin;\n                    member.userPhoto = user.userPhoto;\n                    this.selectPartakers.push(member);\n                    this.selectPartakers = [... this.selectPartakers];\n                }\n            });\n            this.selectedSelect();\n            this.selectPartakers = this.selectPartakers.sort((a, b) => {\n\n                if (a.groupName > b.groupName) {\n                    return -1;\n                } else {\n                    if (a.groupName == b.groupName) {\n                        if (a.userLogin > b.userLogin) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                    } else {\n                        return 1;\n                    }\n                }\n            })\n        });\n    }\n\n    private getGroups(){\n        let users: number[] = [];\n        this.groupUserService.getGroups(this.authenticationService.getUser().id).subscribe((response) => {\n            this.groups = response;\n            this.groups.forEach(group => {\n                this.groupUserService.getMembers(group.groupId).subscribe((response) =>{\n                    response.forEach(user=>{\n                        let member: MGroupMembers = new MGroupMembers();\n                        if (response.length > 1 && user.userId != this.authenticationService.getUser().id){\n                            member.groupId = group.groupId;\n                            member.groupName = group.groupName;\n                            member.groupPhoto = group.groupPhoto;\n                            member.userId = user.userId;\n                            member.userLogin = user.userLogin;\n                            member.userPhoto = user.userPhoto;\n                            users.push(user.userId);\n                            this.selectPartakers.push(member);\n\n                            this.selectPartakers = [... this.selectPartakers];\n                        }\n                        return;\n                    });\n                });\n                return;\n            });\n            this.getFriends(users);\n        });\n    }\n\n    private getPartakers(){\n        this.userEventService.getPartakers(this.event.eventId).subscribe((response) =>{\n            response.forEach((user)=>{\n                if(user.userId != this.event.eventOwner){\n                    this.eventPartakers.push(user.userId);\n                }\n            });\n            this.eventPartakers = [... this.eventPartakers];\n        });\n\n    }\n\n    private selectedSelect(){\n        this.eventPartakers.forEach(partaker => {\n            this.selectPartakers.map(user => {\n                if (partaker == user.userId){\n                    user.disabled = true;\n                }\n            });\n        });\n        this.selectPartakers = [... this.selectPartakers];\n    }\n\n    public getPartakersByGroupId(id: number): MGroupMembers {\n        return this.selectPartakers.find(group => group.groupId === id);\n    }\n\n    public changeSelect(event) {\n            event.forEach(userSelected => {\n                this.selectPartakers.map(user => {\n                    if (user.userId == userSelected.userId) {\n                        user.disabled = true;\n                    }\n                });\n                this.selectPartakers = [... this.selectPartakers];\n        });\n    }\n\n    public removePartaker(event) {\n            this.selectPartakers.map(user => {\n                if (user.userId == event.value.userId) {\n                    user.disabled = false;\n                }\n            });\n        this.selectPartakers = [... this.selectPartakers];\n    }\n\n    public clearPartakers() {\n        this.eventPartakers = [];\n        this.selectPartakers.map(user => {\n            if (user.disabled == true){\n                user.disabled = false;\n            }\n        });\n        this.selectPartakers = [... this.selectPartakers];\n    }\n\n    public unselectGroup(groupID): void {\n        let userGroup = [];\n        this.selectPartakers.map(user => {\n            if (user.groupId == groupID && this.eventPartakers.includes(user.userId)) {\n                userGroup.push(user.userId);\n                this.eventPartakers = this.eventPartakers.filter(u => u != user.userId);\n            }\n        });\n\n        this.selectPartakers.map(user => {\n            if (userGroup.includes(user.userId)) {\n                user.disabled = false;\n            }\n        });\n\n        this.selectPartakers = [... this.selectPartakers];\n        this.eventPartakers = [... this.eventPartakers];\n    }\n}","<div class=\"modal fade\" id=\"createEventModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createEventLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #createEventForm=\"ngForm\">\n                     <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 file-input imageDiv\">\n                                    <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                               type=\"file\"\n                                               id=\"createEvent_eventPhoto\" name=\"eventPhoto\">\n                                    <label title=\"Cambiar imagen de evento\" for=\"createEvent_eventPhoto\"\n                                               (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                        <ng-container *ngIf=\"event.eventPhoto; else imagesDiv\">\n                                            <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"event.eventPhoto\" alt=\"foto de evento\"\n                                                     id=\"createEvent_photo\">\n                                        </ng-container>\n                                        <ng-template #imagesDiv>\n                                            <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"defaultImage\" alt=\"foto de evento por defecto\">\n                                        </ng-template>\n                                        <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                    </label>\n                                    <div *ngIf=\"imageFormat == false\"\n                                             class=\"alert alert-danger\">\n                                        <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                        </div>\n                                    </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"createEvent_eventName\" name=\"eventName\"\n                                                   class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                                   pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                   title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                                   [(ngModel)]=\"event.eventName\" required\n                                                   #eventNameForm=\"ngModel\">\n                                        <div *ngIf=\"createEventForm.onSubmit(undefined) && eventNameForm.invalid  || eventNameForm.invalid && eventNameForm.value != null\"\n                                                 class=\"alert alert-danger\">\n                                            <div *ngIf=\"eventNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"eventNameForm.errors.pattern\">Máximo 40 caracteres\n                                                    alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <textarea class=\"text-area inputs\" name=\"eventDescription\" rows=\"4\"\n                                                      cols=\"50\"\n                                                      id=\"createEvent_eventDescription\" minlength=\"0\"\n                                                      maxlength=\"100\"\n                                                      name=\"eventDescription\" placeholder=\"Descripción\"\n                                                      pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                      title=\"Puede contener letras y números, máximo 100 caracteres\"\n                                                      [(ngModel)]=\"event.eventDescription\"\n                                                      #eventDescriptionForm=\"ngModel\">\n                                        </textarea>\n                                        <div *ngIf=\"createEventForm.submitted && eventDescriptionForm.invalid  || eventDescriptionForm.invalid && eventDescriptionForm.value!= null\"\n                                                 class=\"alert alert-danger\">\n                                            <div *ngIf=\"eventDescriptionForm.errors.pattern\">Puede contener letras y\n                                                    números, máximo 100 caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row secondDiv\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                               <div class=\"daterangerpicker\"\n                                                 daterangepicker\n                                                 [options]=\"options\"\n                                                 (selected)=\"selectedDate($event)\"\n                                                 (applyDaterangepicker)=\"applyDate()\"\n                                                 (cancelDaterangepicker)=\"cancelDate()\">\n                                    <div class=\"d-flex justify-content-between h-100\">\n                                        <span *ngIf=\"initialDate != undefined\" class=\"ps-2 align-self-center\">\n                                                        {{initialDate | date:'dd/MM/YYYY HH:mm'}} {{finalDate | date:'dd/MM/YYYY HH:mm'}}\n                                        </span>\n                                        <span *ngIf=\"initialDate == undefined\" class=\"placeholder align-self-center\">\n                                                        Fecha y Hora*\n                                        </span>\n                                        <div class=\"align-self-center\">\n                                            <span *ngIf=\"initialDate != undefined\" class=\"cancel\" (click)=\"cancelDate()\">×</span>\n                                            <span class=\"ng-arrow-wrapper\">\n                                                 <span class=\"btn ng-arrow\"><i class=\"bi bi-calendar\"></i></span>\n                                            </span>\n                                        </div>\n                                    </div>\n                               </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                               <input type=\"text\" id=\"createEvent_eventLocation\" name=\"Location\"\n                                                   class=\"inputs\" placeholder=\"Localización\" minlength=\"1\" maxlength=\"40\"\n                                                   pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                   title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                                   [(ngModel)]=\"event.eventLocation\" required\n                                                   #eventLocationForm=\"ngModel\">\n                               <div *ngIf=\"createEventForm.onSubmit(undefined) && eventLocationForm.invalid  || eventLocationForm.invalid && eventLocationForm.value != null\"\n                                                 class=\"alert alert-danger\">\n                                    <div *ngIf=\"eventLocationForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"eventLocationForm.errors.pattern\">Máximo 40 caracteres\n                                                    alfanuméricos\n                                    </div>\n                               </div>\n                            </div>\n                        </div>\n                        <div class=\"row selectRow\">\n                            <ng-select name=\"groups\"\n                                               [items]=\"selectPartakers\"\n                                               bindValue=\"userId\"\n                                               groupBy=\"groupId\"\n                                               placeholder=\"Participantes\"\n                                               (change)=\"changeSelect($event)\"\n                                               (remove)=\"removePartaker($event)\"\n                                               (clear)=\"clearPartakers()\"\n                                               [multiple]=\"true\"\n                                               [closeOnSelect]=\"false\"\n                                               [selectableGroup]=\"true\"\n                                               [selectableGroupAsModel]=\"false\"\n                                               [(ngModel)]=\"eventPartakers\">\n                                <ng-template class=\"text\" ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                                    <div class=\"ng-value\" *ngFor=\"let item of items\">\n                                        <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario\"\n                                                        [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                        class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-container>\n                                        <ng-template #userPhotoDiv>\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario por defecto\"\n                                                        [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                        class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-template>\n                                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\"\n                                                      aria-hidden=\"true\">×</span>\n                                    </div>\n                                </ng-template>\n                                <ng-template ng-option-tmp let-item=\"item\">\n                                    <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                        <span class=\"ng-value-label\" id=\"{{item.groupId + '-'+ item.userId}}\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario de grupo\"\n                                                        [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                        class=\"selectedText listSelect\">{{item.userLogin}}</p></span>\n                                    </ng-container>\n                                    <ng-template #userPhotoDiv>\n                                        <span class=\"ng-value-label\" id=\"{{item.groupId + '-'+item.userId}}\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario de grupo por defecto\"\n                                                        [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                        class=\"selectedText listSelect\">{{item.userLogin}} </p></span>\n                                    </ng-template>\n                                </ng-template>\n                                <ng-template ng-optgroup-tmp let-item=\"item\">\n                                    <ng-container *ngIf=\"getPartakersByGroupId(item.groupId).groupPhoto; else groupPhotoDiv\">\n                                        <span class=\"ng-value-label\" title=\"{{getPartakersByGroupId(item.groupId).groupName}}\"><img alt=\"foto de grupo\"\n                                                        [src]=\"getPartakersByGroupId(item.groupId).groupPhoto\" class=\"imageSelect\"><p\n                                                        class=\"selectedText listSelect\">{{getPartakersByGroupId(item.groupId).groupName}}</p></span>\n                                    </ng-container>\n                                    <ng-template #groupPhotoDiv>\n                                        <span class=\"ng-value-label\" title=\"{{getPartakersByGroupId(item.groupId).groupName}}\"><img alt=\"foto de grupo por defecto\"\n                                                        [src]=\"defaultGroupImage\" class=\"imageSelect\" *ngIf=\"item.groupId !=0\"><p\n                                                        class=\"selectedText listSelect\">{{getPartakersByGroupId(item.groupId).groupName}} </p></span>\n                                        <span (click)=\"unselectGroup(item.groupId)\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n                                                <path fill-rule=\"evenodd\" d=\"M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z\"/>\n                                                <path fill-rule=\"evenodd\" d=\"M2.146 2.146a.5.5 0 0 0 0 .708l11 11a.5.5 0 0 0 .708-.708l-11-11a.5.5 0 0 0-.708 0Z\"/>\n                                            </svg>\n                                        </span>\n                                    </ng-template>\n                                </ng-template>\n                            </ng-select>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"buttons\">\n                                <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                    Cerrar\n                                </button>\n                            </div>\n                            <div class=\"buttons\">\n                                <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {EventService} from \"../../../services/event.service\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {STATUS} from \"../../users/listUsers/listUsers.component\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {Router} from \"@angular/router\";\nimport {UserUserEventService} from \"../../../services/userUserEvent.service\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\n\n@Component({\n    selector: 'app-detailEvent',\n    templateUrl: './detailEvent.component.html',\n    styleUrls: ['./detailEvent.component.css']\n})\nexport class DetailEventComponent implements OnInit {\n\n    @Output()\n    eventMessage = new EventEmitter<number>();\n\n    @Output()\n    eventDelete = new EventEmitter<boolean>();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultImage: string = \"./assets/event7.jpg\";\n\n    eventPartakers: MUser[] = [];\n    eventPartakersStored: MUser[] = [];\n    pagePartaker = 0;\n    sizePartaker = 6;\n    totalPartaker: number=0;\n    message: string = \"¿Estás seguro de que quieres salir del evento?\";\n    statusMessage: string = \"\";\n    show: boolean = true;\n\n    previousEvent: string=\"\";\n    nextEvent: string=\"\";\n\n    _previous: boolean = false;\n    _next: boolean = false;\n    _event: MEvent = new MEvent();\n    _status: string =\"\";\n    messageRequest: boolean;\n    close: boolean = false;\n\n    googleCalendarUrl: string = \"\";\n\n    constructor(private eventService: EventService,\n                private productService: ProductService,\n                private userEventService: UserEventService,\n                private userProductService: UserProductService,\n                private userUserEventService: UserUserEventService,\n                private authenticationService: AuthenticationService,\n                private notificationService: NotificationService,\n                private router: Router\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationEventClass();\n    }\n\n    showDetailsAndProducts(){\n        localStorage.setItem(\"products\", JSON.stringify(this.event));\n        this.router.navigateByUrl(\"/products\");\n    }\n\n    showTransactions(){\n        localStorage.setItem(\"transactions\", JSON.stringify(this.event));\n        this.router.navigateByUrl(\"/transactions\");\n    }\n\n    messageValue() {\n        this.messageRequest = true;\n        if (this.status == STATUS.PENDING){\n            this.message = \"¿Quieres aceptar la solicitud para participar en el evento?\";\n        }\n    }\n\n    showDeleteEvent(){\n        this.messageRequest = false;\n        if (this.authenticationService.getUser().id == this.event.eventOwner) {\n            this.message = \"¿Estás seguro de que deseas eliminar el evento? Una vez realizada está acción no se podrá deshacer.\";\n        }\n    }\n\n    showSetStatus(): boolean{\n        if (this.authenticationService.getUser().id != this.event.eventOwner) {\n            this.messageValue();\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    closeMessage(){\n        this.close = true;\n        this.message = \"¿Estás seguro de que deseas cerrar el evento? Una vez realizada está acción no se podrá deshacer.\"\n    }\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationEventClass();\n    }\n\n    get status(){\n        return this._status;\n    }\n\n    @Input() set status( status: string){\n        if (status != undefined){\n            this._status = status;\n            if (status == STATUS.PENDING){\n                this.statusMessage = \"Aceptar o denegar solicitud\";\n                this.show = false;\n            }else{\n                this.statusMessage = \"Salir del evento\";\n                this.show = true;\n            }\n        }\n    }\n\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationEventClass();\n    }\n\n\n    get event(){\n        return this._event;\n    }\n\n    @Input() set event (event: MEvent) {\n        if (event != undefined) {\n            this._event = event;\n            this.partakerReset();\n            if (this.event.eventId != null){\n                this.getPartakers(this.event.eventId);\n                this.getTotalPartakers(this.event.eventId);\n                this.addEventGoogleCalendar(this.event);\n            }else{\n                this._event = new MEvent();\n            }\n        }\n        this.eventPartakers = [];\n        this.eventPartakersStored = [];\n        this.paginationEventClass();\n    }\n\n    onDelete($event){\n        if($event.valueOf()){\n            this.eventService.deleteEvent(this.event.eventId).subscribe(()=>{\n                this.eventDelete.emit();\n                this.notificationService.success(\"Evento eliminado\", \"Se ha eliminado el evento correctamente.\");\n            });\n        }\n    }\n\n    showButtons(): boolean{\n        if (this.event.eventOwner == this.authenticationService.getUser().id){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    showButtonStatus(): boolean{\n       if (this.showButtons() && this.status == STATUS.PENDING){\n           return true;\n       }else{\n           return false;\n       }\n    }\n\n    closeEvent(){\n        this.userEventService.sumTotalEventExpense(this.event.eventId).subscribe((totalEventExpense) =>{\n            this.productService.sumTotalProductCost(this.event.eventId).subscribe((totalProductCost) =>{\n                if (totalProductCost == totalEventExpense){\n                    this.productService.getAllProductsPartakers(this.event.eventId).subscribe((response) => {\n                       if (response){\n                           this.eventService.editOpen(this.event.eventId, false).subscribe(() => {\n                               this.userUserEventService.createUserUserEvent(this.event.eventId).subscribe(()=>{\n                                   this.showTransactions();\n                               });\n                           });\n                       }else{\n                           this.notificationService.warning(\"Comprueba que todos los productos tienen al menos un participante.\", \"No es pposible finalizar el evento\");\n                       }\n                    });\n                }else{\n                    this.notificationService.warning(\"Comprueba que el dinero adelantado para el evento es igual al dinero gastado por el evento.\", \"No es posible finalizar el evento\");\n                }\n            });\n        });\n    }\n\n    ownerLabel(userId:number):string{\n        let value:string = \"\";\n        if (userId == this.event.eventOwner){\n            value = \"Administrador\";\n        }\n        return value;\n    }\n\n    ownerBorder(userId: number):string{\n        if(userId == this.event.eventOwner){\n            return \"owner\";\n        }\n    }\n\n    setPageEvent(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    getPartakers(eventId:number){\n        this.userEventService.getPageablePartakers(eventId,this.pagePartaker, this.sizePartaker).subscribe((response) => {\n            this.eventPartakers.push(...response);\n        });\n    }\n\n    getTotalPartakers(eventId:number){\n        this.userEventService.countPartakers(eventId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getMorePartakers(){\n        this.pagePartaker +=1;\n        if (this.eventPartakers.length < this.eventPartakersStored.length){\n            this.eventPartakers = this.eventPartakersStored.slice(0,this.sizePartaker*(this.pagePartaker+1));\n        }else{\n            this.getPartakers(this.event.eventId);\n        }\n    }\n\n    getLessPartakers(){\n        if (this.eventPartakersStored.length != this.totalPartaker){\n            this.eventPartakersStored = this.eventPartakers;\n            this.eventPartakers = this.eventPartakers.slice(0,this.sizePartaker*this.pagePartaker);\n        }else{\n            this.eventPartakers = this.eventPartakersStored.slice(0, this.sizePartaker*this.pagePartaker);\n        }\n        this.pagePartaker -=1;\n    }\n\n    partakerReset(){\n        this.eventPartakers = [];\n        this.eventPartakersStored = [];\n        this.pagePartaker = 0;\n    }\n\n    private paginationEventClass(){\n        if(this._previous && this._next){\n            this.previousEvent = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n                this.nextEvent = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this._previous && this._next){\n            this.previousEvent = \"\";\n            this.nextEvent = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this._previous && !this._next){\n            this.previousEvent = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextEvent = \"\";\n        }else{\n            this.previousEvent = \"\";\n            this.nextEvent = \"\";\n        }\n    }\n\n\n    onRequest($event){\n        if (this.close && $event.valueOf()){\n            this.closeEvent();\n            this.close = false;\n        }else{\n            if (this.messageRequest){\n                this.setStatus($event);\n                this.eventMessage.emit();\n            }else if (!this.messageRequest) {\n                this.onDelete($event);\n            }\n        }\n    }\n\n    setStatus($event){\n        if ($event.valueOf() && this.status == STATUS.PENDING){\n            this.userEventService.editStatus(this.event.eventId, this.authenticationService.getUser().id).subscribe();\n        }else{\n\n            this.userEventService.deleteUserEvent(this.event.eventId, this.authenticationService.getUser().id).subscribe();\n        }\n    }\n\n\n    addEventGoogleCalendar(event: MEvent){\n        let startDate: string = this.event.eventStart.replace(new RegExp(' ', 'g'), 'T').replace(new RegExp(':', 'g'), '').replace(new RegExp('-', 'g'), '');\n        let endDate: string = this.event.eventEnd.replace(new RegExp(' ', 'g'), 'T').replace(new RegExp(':', 'g'), '').replace(new RegExp('-', 'g'), '');\n        let date: string = startDate.substring(0,9) + (parseInt(startDate.substring(9))+20000).toString() + \"/\" + endDate.substring(0,9) + (parseInt(endDate.substring(9))+20000).toString();\n        let title: string = this.event.eventName.replace(new RegExp(' ', 'g'), '+');\n        let location: string = this.event.eventLocation.replace(new RegExp(' ', 'g'), '+');\n        let description: string = this.event.eventDescription.replace(new RegExp(' ', 'g'), '+');\n        this.googleCalendarUrl = \"https://calendar.google.com/calendar/u/0/r/eventedit?text=\" + title + \"&dates=\" + date + \"&details=\" + description + \"&location=\" + location + \"&sf=true&output=xml\";\n    }\n}","<div class=\"modal fade\" id=\"detailEventModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailEventLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onRequest($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{event.eventName}}</h5>\n                <div class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" aria-label=\"opciones\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li><button type=\"button\" *ngIf=\"showButtons() && event.eventOpen\" class=\"dropdown-item buttonText\" title=\"Editar evento\"\n                                    data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#createEventModal\"\n                                    (click)=\"pagePartaker=0\">Editar evento</button></li>\n                        <li><button type=\"button\" *ngIf=\"showButtons()\" class=\"dropdown-item buttonText\" title=\"Eliminar evento\" data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"showDeleteEvent();pagePartaker=0\">Eliminar evento</button></li>\n                        <li><button *ngIf=\"showSetStatus() && event.eventOpen\" type=\"button\" class=\"dropdown-item buttonText\" title=\"Cambiar de estado\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\" (click)=\"messageValue();\">{{statusMessage}}</button></li>\n                        <li><a [href]=\"googleCalendarUrl\" aria-label=\"añadir a google calendar\" target=\"_blank\" type=\"button\" class=\"dropdown-item buttonText\" title=\"googleCalendar\">Añadir a Google Calendar</a></li>\n                        <li><button *ngIf=\"showButtons() && event.eventOpen\" type=\"button\" id=\"close\" class=\"dropdown-item buttonText\" title=\"\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\" (click)=\"closeMessage()\">Finalizar evento</button></li>\n                        <li><button *ngIf=\"show\" (click)=\"showDetailsAndProducts()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"dropdown-item buttonText\" title=\"Gestion evento\">Gestión del evento</button></li>\n                        <li><button *ngIf=\"show && !event.eventOpen\" (click)=\"showTransactions()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"dropdown-item buttonText\" title=\"Transacciones\">Transacciones</button></li>\n                    </ul>\n                </div>\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\" data-bs-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        (click)=\"pagePartaker=0\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"imageEventDiv\">\n                                <ng-container *ngIf=\"event.eventPhoto; else imagesDiv\">\n                                    <img class=\"imageEvent\" [src]=\"event.eventPhoto\" alt=\"foto de evento\"\n                                         id=\"detailUserEvent_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageEvent\" [src]=\"defaultImage\" alt=\"foto de evento por defecto\">\n                                </ng-template>\n                                <div class=\"date text\">\n                                    <img class=\"icon\" src=\"./assets/date.svg\" alt=\"icono de fecha\"\n                                            id=\"detailUserEvent_date\">{{event.eventStart | date: 'dd-MM-yyyy HH:mm'}}\n                                    <p class=\"finalDate\">{{event.eventEnd | date: 'dd-MM-yyyy HH:mm'}}</p></div>\n                                <div class=\"description-row text\"\n                                     name=\"eventLocation\"\n                                     id=\"detailEvent_eventLocation\">\n                                    <img class=\"icon\" src=\"./assets/location.svg\" alt=\"icono de Localizacion\"\n                                         id=\"detailUserEvent_location\">\n                                    {{event.eventLocation}}\n                                </div>\n                                <div class=\"description-row text\"\n                                     name=\"eventDescription\"\n                                     id=\"detailEvent_eventDescription\">\n                                    <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"icono de comentario\"\n                                         id=\"detailUserEvent_description\">{{event.eventDescription}}\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"paginationPartakerDiv col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let user of eventPartakers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-6 members\">\n                                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imagePartaker\" [ngClass]=\"ownerBorder(user.userId)\"\n                                                 [src]=\"user.userPhoto\" alt=\"foto de usuario\" id=\"detailUser_photo\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-container>\n                                    <ng-template #userImagesDiv>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imagePartaker\" alt=\"imagen de usuario por defecto\" [ngClass]=\"ownerBorder(user.userId)\" [src]=\"defaultUserImage\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-template>\n                                </div>\n                                <div *ngIf=\"eventPartakers.length > sizePartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getLessPartakers()\"><a aria-label=\"ver menos\">\n                                    Ver menos</a></div>\n                                <div *ngIf=\"eventPartakers.length < totalPartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getMorePartakers()\"><a aria-label=\"ver mas\">\n                                    Ver más</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationEvent\">\n                            <li [ngClass]=\"previousEvent\" *ngIf=\"previous\">\n                                <a class=\"previousEvent\" (click)=\"setPageEvent(-1); pagePartaker=0\" aria-label=\"anterior\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextEvent\" *ngIf=\"next\">\n                                <a class=\"nextEvent\" (click)=\"setPageEvent(1); pagePartaker=0\" aria-label=\"siguiente\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>\n\n","import {Component, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {STATUS} from \"../../users/listUsers/listUsers.component\";\n\n@Component({\n    selector: 'app-events',\n    templateUrl: './listEvents.component.html',\n    styleUrls: ['./listEvents.component.css']\n})\nexport class ListEventsComponent implements OnInit {\n    eventName = \"\";\n    events: MEvent[] = [];\n    images: {[index:number]: any;} = {};\n    status: {[index: number]: any;} = {};\n    defaultImage: string = \"./assets/event7.jpg\";\n    totalPage:number= 0;\n    page: number= 0;\n    selectedEvent: MEvent = new MEvent();\n    selectedStatus: string =\"\";\n    size: number= 6;\n    index: number;\n    previous:string;\n    next:string;\n    pageDirection: number;\n    checked: boolean;\n\n    constructor(private userEventService: UserEventService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getEvents();\n        this.paginationClass();\n        this.checked = false;\n    }\n\n    toggleCheck(){\n        this.page = 0;\n        this.checked = !this.checked;\n        this.pagination();\n    }\n\n    checkFilter():string{\n        if (this.checked){\n            return \"checkFilter\"\n        }else{\n            return \"\";\n        }\n    }\n\n    setEvent(){\n        this.selectedEvent = new MEvent();\n    }\n\n    selectEvent(index:number){\n        this.selectedEvent = this.events[index];\n        this.selectedStatus = this.status[this.selectedEvent.eventId];\n        this.index = index;\n    }\n\n    setSelectedEventPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n            }\n            this.selectedEvent = this.events[this.index];\n            this.selectedStatus = this.status[this.index];\n        }\n    }\n\n    getEvents(){\n        this.userEventService.getPageableEvents(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.getURL(response);\n            this.totalPages();\n        });\n    }\n\n    getEventsWithFinished(){\n        this.userEventService.getPageableEventsWithFinished(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.getURL(response);\n            this.totalPagesWithFinished();\n        });\n    }\n\n    paginationClass(){\n        if(this.page!=0 && this.page+1<this.totalPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\";\n        }else if (this.page==0 && this.page+1<this.totalPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 cpl-12\";\n        }else if(this.page!=0 && this.page+1==this.totalPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    setPage(page: number){\n        this.page += page;\n        this.pagination();\n        this.paginationClass();\n    }\n\n    private pagination(){\n        if (this.checked){\n            if(this.eventName == \"\"){\n                this.getEventsWithFinished();\n            }else{\n                this.searchWithFinished();\n            }\n        }else{\n            if(this.eventName == \"\"){\n                this.getEvents();\n            }else{\n                this.search();\n            }\n        }\n    }\n\n    private getURL(events: MEvent[]){\n        events.forEach((event) => {\n            this.images[event.eventId] = this.sanitizer.bypassSecurityTrustUrl(event.eventPhoto);\n        });\n    }\n\n    private search(){\n        this.userEventService.getPageableSearchEvents(this.eventName, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.searchTotalPages();\n            this.getURL(response);\n        });\n    }\n\n    private searchWithFinished(){\n        this.userEventService.getPageableSearchEventsWithFinished(this.eventName, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.searchTotalPagesWithFinished();\n            this.getURL(response);\n        });\n    }\n\n    searchInput(){\n        this.page=0;\n        this.pagination();\n    }\n\n    private totalPages() {\n        this.userEventService.countEvents(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private totalPagesWithFinished(){\n        this.userEventService.countEventsWithFinished(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPages(){\n        this.userEventService.countSearchEvents(this.eventName, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPagesWithFinished(){\n        this.userEventService.countSearchEventsWithFinished(this.eventName, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getNext (): boolean{\n        if (this.page != this.totalPage-1 || this.events[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getPrevious():boolean{\n        if (this.page != 0 || this.events[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    setSelectedEvent(event: number) {\n        this.pageDirection = event.valueOf();\n        if ( this.events[this.index + event.valueOf()] != undefined){\n            this.selectEvent(this.index + event.valueOf());\n        }else{\n            this.setPage(event.valueOf());\n\n        }\n    }\n\n    private statusValue (statusBD: boolean): string {\n        let status: string;\n        if (statusBD) {\n            status = STATUS.FOLLOW;\n        }else if (!statusBD){\n            status = STATUS.PENDING;\n        }else{\n            status = STATUS.REQUEST;\n        }\n        return status;\n    }\n\n    private getStatus (mEvents: MEvent[]) {\n        mEvents.forEach((mEvent) => {\n            this.userEventService.getUserEvent(mEvent.eventId, this.authenticationService.getUser().id).subscribe((response) => {\n                this.status[mEvent.eventId] = this.statusValue(response.accept);\n            });\n        });\n    }\n}","<section>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-7 col-xl-7 col-lg-7 col-md-8 col-sm-9 col-10\">\n            <form ngNativeValidate (input)=\"searchInput()\" #searchEventsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_eventName\" name=\"eventName\" placeholder=\"Buscar por nombre de evento\"\n                           [(ngModel)]=\"eventName\" required #eventNameForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 dropd\">\n            <div class=\"dropdown dropAlign\">\n                <a class=\"btn btn-neutral dropdown-toggle\" aria-label=\"filtros\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <i class=\"zmdi zmdi-more-vert iSize\"></i>\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter()\" (click)=\"toggleCheck()\">Eventos finalizados</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-2 col-sm-2 col-5 createFirstDiv\">\n            <button type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createEventModal\" (click)=\"setEvent();\">Añadir</button>\n        </div>\n    </div>\n    <div *ngIf=\"checked\" class=\"row\">\n        <p class=\"tag\">Finalizados</p>\n    </div>\n\n    <app-createEvent (eventSave)=\"getEvents();\" [event]=\"selectedEvent\"></app-createEvent>\n    <app-detailEvent (eventDelete)=\"getEvents();\" (eventDetail)=\"setSelectedEvent($event)\" (eventMessage)=\"getEvents()\" [event]=\"selectedEvent\" [previous] = \"getPrevious()\" [next] = \"getNext()\" [status] =\"selectedStatus\"></app-detailEvent>\n\n    <div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4 divAligment\">\n        <ng-container *ngIf=\"events.length != 0; else eventsDiv\">\n            <div *ngFor=\"let event of events;let i=index\">\n                <div class=\"col\">\n                    <div class=\"card mb-3 color\" id=\"detailEventCard\" data-bs-toggle=\"modal\" data-bs-target=\"#detailEventModal\"\n                         (click)=\"selectEvent(i)\">\n                        <div class=\"row g-0\">\n                            <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5 divAligment\">\n                                <ng-container *ngIf=\"event.eventPhoto != null; else imagesDiv\">\n                                    <img class=\"image\" alt=\"imagen de evento\" [src]=\"images[event.eventId]\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"image\" alt=\"imagen de evento por defecto\" [src]=\"defaultImage\">\n                                </ng-template>\n                            </div>\n                            <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7 divAligment\">\n                                <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                                    <h5 class=\"title\">{{event.eventName}}</h5>\n                                    <p class=\"card-text\">\n                                        <a class=\"message\" aria-label=\"estado\">{{status[event.eventId]}}</a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #eventsDiv>\n            <p class=\"text\">NO EXISTEN EVENTOS</p>\n        </ng-template>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"page!=0\"><a aria-label=\"anterior\" class=\"page-link previous\" (click)=\"setPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"page+1<totalPage\"><a aria-label=\"siguiente\" class=\"page-link next\" (click)=\"setPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {GroupService} from \"../../../services/group.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MGroup} from \"../../../models/MGroup\";\n\n@Component({\n    selector: 'app-createGroup',\n    templateUrl: './createGroup.component.html',\n    styleUrls: ['./createGroup.component.css']\n})\nexport class CreateGroupComponent implements OnInit {\n\n    defaultImage = \"./assets/group7_2.jpg\";\n    defaultUserImage = \"./assets/user16.jpg\";\n    friends: MUser[];\n    imageFormat: boolean;\n    groupMembers: number[];\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"CREAR GRUPO\";\n    _userGroup: MGroup;\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n\n    constructor(private groupService: GroupService,\n                private groupUserService: GroupUserService,\n                private userUserService: UserUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.groupMembers = [];\n        this.friends = [];\n    }\n\n    get userGroup(){\n        return this._userGroup;\n    }\n\n    @Input() set userGroup(userGroup: MGroup){\n        if (userGroup.groupId != undefined){\n            this._userGroup = userGroup;\n            this.title = \"Editar grupo\";\n            this.getMembers();\n        }else{\n            this._userGroup = new MGroup();\n            this.title = \"Crear grupo\";\n        }\n        this.groupMembers = [];\n        this.getFriends();\n    }\n\n    onSubmit(){\n        if (this.userGroup.groupId != undefined){\n            this.onEdit();\n        }else{\n            this.onCreate();\n        }\n    }\n\n    onCreate() {\n            this.userGroup.groupOwner = this.authenticationService.getUser().id;\n            this.groupMembers.push(this.authenticationService.getUser().id);\n            this.groupService.createGroup(this.userGroup).subscribe((response) => {\n                this.groupMembers.forEach((id)=> {\n                    this.groupUserService.createGroupUser(response,id).subscribe(() =>{\n                        this.eventSave.emit();\n                    });\n                });\n                this.closeModal();\n                document.getElementById(\"closeButton\").click();\n                this.notificationService.success(\"Nuevo grupo creado\", \"Se ha creado el grupo correctamente.\");\n            });\n    }\n\n    onEdit(){\n        this.groupMembers.push(this.authenticationService.getUser().id);\n        this.groupService.editGroup(this.userGroup).subscribe(() => {\n            this.groupUserService.editGroupUser(this.userGroup.groupId, this.groupMembers).subscribe();\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Grupo editado\", \"Se ha editado el grupo correctamente.\");\n        });\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.userGroup.groupPhoto = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    closeModal(){\n        this.userGroup = new MGroup();\n        this.groupMembers = [];\n        this.imageFormat = null;\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n\n    private getFriends(){\n        this.userUserService.getFriends(this.authenticationService.getUser().id).subscribe((response) => {\n            this.friends = response;\n        });\n    }\n\n    private getMembers(){\n        this.groupUserService.getMembers(this.userGroup.groupId).subscribe((response) =>{\n            response.forEach((user)=>{\n                if(user.userId != this.userGroup.groupOwner){\n                    this.groupMembers.push(user.userId);\n                }\n            });\n            this.groupMembers = [... this.groupMembers];\n        });\n\n    }\n}","<div class=\"modal fade\" id=\"createGroupModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n         <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #createUserGroupForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 file-input imageDiv\">\n                                <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                       type=\"file\"\n                                       id=\"createUserGroup_userGroupPhoto\" name=\"userGroupPhoto\">\n                                <label title=\"Cambiar imagen de grupo\" for=\"createUserGroup_userGroupPhoto\"\n                                       (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                    <ng-container *ngIf=\"userGroup.groupPhoto; else imagesDiv\">\n                                        <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"userGroup.groupPhoto\" alt=\"imagen de grupo\"\n                                             id=\"createUserGroup_photo\">\n                                    </ng-container>\n                                    <ng-template #imagesDiv>\n                                        <img class=\"image imageColor2\" alt=\"imagen de grupo por defecto\" [ngClass]=\"imageColor\" [src]=\"defaultImage\">\n                                    </ng-template>\n                                    <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                </label>\n                                <div *ngIf=\"imageFormat == false\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"createUserGroup_userGroupName\" name=\"userGroupName\"\n                                               class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"userGroup.groupName\" required\n                                               #userGroupNameForm=\"ngModel\" value=\"gggg\">\n                                        <div *ngIf=\"createUserGroupForm.onSubmit(undefined) && userGroupNameForm.invalid  || userGroupNameForm.invalid && userGroupNameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userGroupNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userGroupNameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <textarea class=\"text-area inputs\" name=\"userGroupDescription\" rows=\"4\"\n                                                  cols=\"50\"\n                                                  id=\"createUserGroup_userGroupDescription\" minlength=\"0\"\n                                                  maxlength=\"100\"\n                                                  name=\"userGroupDescription\" placeholder=\"Descripción\"\n                                                  pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                  title=\"Puede contener letras y números, máximo 100 caracteres\"\n                                                  [(ngModel)]=\"userGroup.groupDescription\"\n                                                  #userGroupDescriptionForm=\"ngModel\">\n                                        </textarea>\n                                        <div *ngIf=\"createUserGroupForm.submitted && userGroupDescriptionForm.invalid  || userGroupDescriptionForm.invalid && userGroupDescriptionForm.value!= null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userGroupDescriptionForm.errors.pattern\">Puede contener letras y\n                                                números, máximo 100 caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <div class=\"row\">\n                            <ng-select class=\"text\" id=\"createUserGroup_userGroupMembers\" name=\"userGroupMembers\"\n                                       [items]=\"friends\"\n                                       [multiple]=\"true\"\n                                       [closeOnSelect]=\"false\"\n                                       [hideSelected]=\"true\"\n                                       bindLabel=\"userLogin\"\n                                       bindValue=\"userId\"\n                                       placeholder=\"Participantes\"\n                                       [(ngModel)]=\"groupMembers\">\n                                <ng-template class=\"text\" ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                                    <div class=\"ng-value\" *ngFor=\"let item of items \">\n                                        <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario\"\n                                                    [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                    class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-container>\n                                        <ng-template #userPhotoDiv>\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario por defecto\"\n                                                    [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                    class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-template>\n                                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\"\n                                              aria-hidden=\"true\">×</span>\n                                    </div>\n                                </ng-template>\n                                <ng-template ng-option-tmp let-item=\"item\">\n                                    <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                        <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario\"\n                                                [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                class=\"selectedText listSelect\">{{item.userLogin}}</p></span>\n                                    </ng-container>\n                                    <ng-template #userPhotoDiv>\n                                        <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario por defecto\"\n                                                [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                class=\"selectedText listSelect\">{{item.userLogin}} </p></span>\n                                    </ng-template>\n                                </ng-template>\n                            </ng-select>\n\n                    </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"buttons\">\n                            <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                Cerrar\n                            </button>\n                        </div>\n                        <div class=\"buttons\">\n                            <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {GroupService} from \"../../../services/group.service\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MGroup} from \"../../../models/MGroup\";\n\n@Component({\n    selector: 'app-detailGroup',\n    templateUrl: './detailGroup.component.html',\n    styleUrls: ['./detailGroup.component.css']\n})\nexport class DetailGroupComponent implements OnInit {\n\n    @Output()\n    eventDelete = new EventEmitter<boolean>();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultImage: string = \"./assets/group7_2.jpg\";\n\n    groupMembers: MUser[] = [];\n    groupMembersStored: MUser[] = [];\n    pageMember = 0;\n    sizeMember = 6;\n    totalMembers: number=0;\n    message: string = \"\";\n    delete: string = \"\";\n\n    previousUserGroup: string=\"\";\n    nextUserGroup: string=\"\";\n\n    _previous: boolean = false;\n    _next: boolean = false;\n    _userGroup: MGroup = new MGroup();\n\n    constructor(private groupService: GroupService,\n                private groupUserService: GroupUserService,\n                private authenticationService: AuthenticationService,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationUserGroupClass();\n    }\n\n    messageValue(request: boolean){\n        if (!request && this.authenticationService.getUser().id == this.userGroup.groupOwner){\n            this.message = \"¿Estás seguro de que deseas eliminar el grupo?\";\n        }else{\n            this.message = \"¿Estás seguro de que quieres salir del grupo?\";\n        }\n    }\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationUserGroupClass();\n    }\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationUserGroupClass();\n    }\n\n\n    get userGroup(){\n        return this._userGroup;\n    }\n\n    @Input() set userGroup (userGroup: MGroup) {\n        if (userGroup != undefined) {\n            this._userGroup = userGroup;\n            this.membersReset();\n            if (this.authenticationService.getUser().id == this.userGroup.groupOwner){\n                this.delete = \"Eliminar\";\n            }else{\n                this.delete = \"Salir\";\n            }\n            if (this.userGroup.groupId != null){\n                this.getMembers(this.userGroup.groupId);\n                this.getTotalMembers(this.userGroup.groupId);\n            }else{\n                this._userGroup = new MGroup();\n            }\n        }\n        this.groupMembers = [];\n        this.groupMembersStored = [];\n        this.paginationUserGroupClass();\n    }\n\n    onDelete($event){\n        if($event.valueOf()){\n            if (this.userGroup.groupOwner == this.authenticationService.getUser().id){\n                this.groupService.deleteGroup(this.userGroup.groupId).subscribe(()=>{\n                        this.eventDelete.emit();\n                        this.notificationService.success(\"Grupo eliminado\", \"Se ha eliminado el grupo correctamente.\");\n\n                    }\n                );\n            }else{\n                this.groupUserService.deleteGroupUser(this.userGroup.groupId, this.authenticationService.getUser().id).subscribe(() => {\n                    this.eventDelete.emit();\n                    this.notificationService.success(\"Eliminado del grupo\", \"Ya no eres miembro de este grupo.\");\n                });\n            }\n        }\n    }\n\n    showButtons(): boolean{\n        if (this.userGroup.groupOwner == this.authenticationService.getUser().id){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    ownerLabel(userId:number):string{\n        let value:string = \"\";\n        if (userId == this.userGroup.groupOwner){\n            value = \"Administrador\";\n        }\n        return value;\n    }\n\n    ownerBorder(userId: number):string{\n        if(userId == this.userGroup.groupOwner){\n            return \"owner\";\n        }\n    }\n\n    setPageUserGroup(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    getMembers(groupId:number){\n        this.groupUserService.getPageableMembers(groupId,this.pageMember, this.sizeMember).subscribe((response) => {\n            this.groupMembers.push(...response);\n        });\n    }\n\n    getTotalMembers(groupId:number){\n        this.groupUserService.countMembers(groupId).subscribe((number)=>{\n            this.totalMembers = number;\n        });\n    }\n\n    getMoreMembers(){\n        this.pageMember +=1;\n        if (this.groupMembers.length < this.groupMembersStored.length){\n            this.groupMembers = this.groupMembersStored.slice(0,this.sizeMember*(this.pageMember+1));\n        }else{\n            this.getMembers(this.userGroup.groupId);\n        }\n    }\n\n    getLessMembers(){\n        if (this.groupMembersStored.length != this.totalMembers){\n            this.groupMembersStored = this.groupMembers;\n            this.groupMembers = this.groupMembers.slice(0,this.sizeMember*this.pageMember);\n        }else{\n            this.groupMembers = this.groupMembersStored.slice(0, this.sizeMember*this.pageMember);\n        }\n        this.pageMember -=1;\n    }\n\n    membersReset(){\n        this.groupMembers = [];\n        this.groupMembersStored = [];\n        this.pageMember = 0;\n    }\n\n\n    private paginationUserGroupClass(){\n        if(this.previous && this.next){\n            this.previousUserGroup = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextUserGroup = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this.previous && this.next){\n            this.previousUserGroup = \"\";\n            this.nextUserGroup = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.previous && !this.next){\n            this.previousUserGroup = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextUserGroup = \"\";\n        }else{\n            this.previousUserGroup = \"\";\n            this.nextUserGroup = \"\";\n        }\n    }\n}","<div class=\"modal fade\" id=\"detailGroupModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailGroupLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onDelete($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{userGroup.groupName}}</h5>\n                <div class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" aria-label=\"opciones en grupo\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li><button type=\"button\" *ngIf=\"showButtons()\" class=\"dropdown-item buttonText\" title=\"Editar grupo\"\n                                    data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#createGroupModal\"\n                                    (click)=\"pageMember=0\">Editar</button></li>\n                        <li><button type=\"button\" *ngIf=\"showButtons()\" class=\"dropdown-item buttonText\" title=\"Eliminar grupo\"  data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"messageValue(false);pageMember=0\">Eliminar</button></li>\n                        <li><button type=\"button\" *ngIf=\"!showButtons()\" class=\"dropdown-item buttonText\" title=\"Salir del grupo\"  data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"messageValue(true);pageMember=0\">Salir del grupo</button></li>\n                    </ul>\n                </div>\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\" data-bs-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        (click)=\"pageMember=0\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"imageGroupDiv\">\n                                <ng-container *ngIf=\"userGroup.groupPhoto; else imagesDiv\">\n                                    <img class=\"imageGroup\" [src]=\"userGroup.groupPhoto\" alt=\"imagen de grupo\"\n                                         id=\"detailUserGroup_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageGroup\" [src]=\"defaultImage\" alt=\"imagen de grupo por defecto\">\n                                </ng-template>\n                            </div>\n                            <!--<div class=\"date text\">\n                                    Creación: {{userGroup.groupCreation | date: 'dd-MM-yyyy'}}</div>-->\n                            <div *ngIf=\"userGroup.groupDescription!='' && userGroup.groupDescription!= null\" class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 description-row text\"\n                                 name=\"userGroupDescription\"\n                                 id=\"detailUserGroup_userGroupDescription\">\n                                <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"icono de descripcion\">{{userGroup.groupDescription}}\n                            </div>\n                        </div>\n\n                        <div class=\"paginationMemberDiv col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let user of groupMembers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-6 members\">\n                                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imageMember\" [ngClass]=\"ownerBorder(user.userId)\"\n                                               [src]=\"user.userPhoto\" alt=\"imagen miembro de grupo\" id=\"detailUser_photo\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"member\">\n                                          {{user.userLogin}}\n                                        </p>\n                                    </ng-container>\n                                    <ng-template #userImagesDiv>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imageMember\" alt=\"imagen miembro de grupo por defecto\" [ngClass]=\"ownerBorder(user.userId)\" [src]=\"defaultUserImage\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"member\">\n                                          {{user.userLogin}}\n                                        </p>\n                                    </ng-template>\n                                </div>\n                                <div *ngIf=\"groupMembers.length > sizeMember\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getLessMembers()\"><a aria-label=\"ver menos\">\n                                    Ver menos</a></div>\n                                <div *ngIf=\"groupMembers.length < totalMembers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getMoreMembers()\"><a aria-label=\"ver mas\">\n                                    Ver más</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationUserGroup\">\n                            <li [ngClass]=\"previousUserGroup\" *ngIf=\"previous\">\n                                <a class=\"previousUserGroup\" aria-label=\"anterior\" (click)=\"setPageUserGroup(-1); pageMember=0\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextUserGroup\" *ngIf=\"next\">\n                                <a class=\"nextUserGroup\" aria-label=\"siguiente\" (click)=\"setPageUserGroup(1); pageMember=0\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MGroup} from \"../../../models/MGroup\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\n\n@Component({\n    selector: 'app-groups',\n    templateUrl: './listGroups.component.html',\n    styleUrls: ['./listGroups.component.css']\n})\nexport class ListGroupsComponent implements OnInit {\n    groupName = \"\";\n    groups: MGroup[] = [];\n    images: {[index:number]: any;} = {};\n    defaultImage = \"./assets/group7_2.jpg\";\n    totalPage:number= 0;\n    page: number= 0;\n    selectedUserGroup: MGroup = new MGroup();\n    size: number= 6;\n    index: number;\n    previousClass:string;\n    nextClass:string;\n    pageDirection: number;\n\n    constructor(private groupUserService: GroupUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getGroups();\n        this.paginationClass();\n    }\n\n    setGroup(){\n        this.selectedUserGroup = new MGroup();\n    }\n\n    selectUserGroup(index:number){\n        this.selectedUserGroup = this.groups[index];\n        this.index = index;\n    }\n\n    setSelectedUserGroupPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n                this.selectedUserGroup = this.groups[this.index];\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n                this.selectedUserGroup = this.groups[this.index];\n            }\n        }\n    }\n\n    getGroups(){\n        this.groupUserService.getPageableGroups(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.groups = response;\n            this.setSelectedUserGroupPage();\n            this.getURL(response);\n            this.totalPages();\n        });\n    }\n\n    paginationClass(){\n        if(this.page!=0 && this.page+1<this.totalPage){\n            this.previousClass = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-6\";\n            this.nextClass = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-6\";\n        }else if (this.page==0 && this.page+1<this.totalPage){\n            this.previousClass = \"\";\n            this.nextClass = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n        }else if(this.page!=0 && this.page+1==this.totalPage){\n            this.previousClass = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n            this.nextClass = \"\";\n        }else{\n            this.previousClass = \"\";\n            this.nextClass = \"\";\n        }\n    }\n\n    setPage(page: number){\n        this.page += page;\n        this.pagination();\n        this.paginationClass();\n    }\n\n    private pagination(){\n        if(this.groupName == \"\"){\n            this.getGroups();\n        }else{\n            this.search();\n        }\n    }\n\n    private getURL(groups: MGroup[]){\n        groups.forEach((group) => {\n            this.images[group.groupId] = this.sanitizer.bypassSecurityTrustUrl(group.groupPhoto);\n        });\n    }\n\n    private search(){\n        this.groupUserService.getPageableSearchGroups(this.groupName, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.groups = response;\n            this.setSelectedUserGroupPage();\n            this.searchTotalPages();\n            this.getURL(response);\n        });\n    }\n\n    searchInput(){\n        this.page=0;\n        this.pagination();\n    }\n\n    private totalPages() {\n        this.groupUserService.countGroups(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPages(){\n        this.groupUserService.countSearchGroups(this.groupName, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getNext (): boolean{\n        if (this.page != this.totalPage-1 || this.groups[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getPrevious():boolean{\n        if (this.page != 0 || this.groups[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    setSelectedUserGroup(event: number) {\n        this.pageDirection = event.valueOf();\n        if ( this.groups[this.index + event.valueOf()] != undefined){\n                this.selectUserGroup(this.index + event.valueOf());\n        }else{\n            this.setPage(event.valueOf());\n\n        }\n    }\n}","<div class=\"searchDiv row\">\n    <div class=\"col-xxl-7 col-xl-7 col-lg-7 col-md-8 col-sm-9 col-10\">\n        <form ngNativeValidate (input)=\"searchInput()\" #searchGroupsForm=\"ngForm\">\n            <input type=\"search\" id=\"groups_groupName\" name=\"groupName\" placeholder=\"Buscar por nombre de grupo\"\n                   [(ngModel)]=\"groupName\" required #userGroupNameForm=\"ngModel\" aria-label=\"Search\">\n        </form>\n    </div>\n    <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-12 createDiv\">\n        <button type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createGroupModal\" (click)=\"setGroup();\">Añadir</button>\n    </div>\n</div>\n<app-createGroup (eventSave)=\"getGroups();\" [userGroup]=\"this.selectedUserGroup\"></app-createGroup>\n<app-detailGroup (eventDelete)=\"getGroups();\" (eventDetail)=\"setSelectedUserGroup($event)\" [userGroup]=\"selectedUserGroup\" [previous] = \"getPrevious()\" [next] = \"getNext()\"></app-detailGroup>\n<div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4 divAligment\">\n    <ng-container *ngIf=\"groups.length !=0; else groupsDiv\">\n        <div *ngFor=\"let group of groups;let i=index\">\n            <div class=\"col\">\n                <div class=\"card mb-3 color\" id=\"detailGroupCard\" data-bs-toggle=\"modal\" data-bs-target=\"#detailGroupModal\"\n                     (click)=\"selectUserGroup(i)\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5 divAligment\">\n                            <ng-container *ngIf=\"group.groupPhoto != null; else imagesDiv\">\n                                <img class=\"image\" [src]=\"images[group.groupId]\" alt=\"imagen de grupo\">\n                            </ng-container>\n                            <ng-template #imagesDiv>\n                                <img class=\"image\" [src]=\"defaultImage\" alt=\"imagen de grupo por defecto\">\n                            </ng-template>\n                        </div>\n                        <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7 divAligment\">\n                            <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                                <h5 class=\"title\">{{group.groupName}}</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #groupsDiv>\n        <p class=\"text\">No existen grupos</p>\n    </ng-template>\n\n</div>\n<div class=\"paginationDiv\">\n    <ul class=\"row pagination\">\n        <li class=\"page-product\" [ngClass]=\"previousClass\" *ngIf=\"page!=0\"><a class=\"page-link previous\" aria-label=\"anterior\" (click)=\"setPage(-1)\">Anterior</a>\n        </li>\n        <li class=\"page-product\" [ngClass]=\"nextClass\" *ngIf=\"page+1<totalPage\"><a class=\"page-link next\" aria-label=\"siguiente\" (click)=\"setPage(1)\">Siguiente</a>\n        </li>\n    </ul>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  loggedUser: string;\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  ngOnInit() {\n    if (this.authenticationService.getUser().authenticated) {\n      this.loggedUser = this.authenticationService.getUser().login;\n    }\n  }\n}\n","<div>\n  <h2 class=\"title\" *ngIf=\"loggedUser != null\">Bienvenid@ {{loggedUser}}</h2>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MProduct} from \"../../../models/MProduct\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {PRODUCTJOIN} from \"../listProducts/listProducts.component\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\n\n@Component({\n    selector: 'app-createProduct',\n    templateUrl: './createProduct.component.html',\n    styleUrls: ['./createProduct.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n\n    defaultImage = \"./assets/product3.jpg\";\n    imageFormat: boolean;\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"CREAR PRODUCTO\";\n    _product: MProduct;\n    _eventId: number;\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n    public productPurchaseDate;\n\n    public options: any = {\n        autoApply: false,\n        alwaysShowCalendars: true,\n        applyButtonClasses: \"btn-primary applyDate\",\n        buttonClasses: \"btn btn-sm\",\n        cancelClass: \"btn-default cancelDate\",\n        drops: \"up\",\n        locale: {\n            format: 'DD/MM/yyyy',\n            \"firstDay\": 1,\n            daysOfWeek: [\n                \"D\",\n                \"L\",\n                \"M\",\n                \"X\",\n                \"J\",\n                \"V\",\n                \"S\"\n            ],\n            monthNames: [\n                \"Enero\",\n                \"Febrero\",\n                \"Marzo\",\n                \"Abril\",\n                \"Mayo\",\n                \"Junio\",\n                \"Julio\",\n                \"Agosto\",\n                \"Septiembre\",\n                \"Octubre\",\n                \"Noviembre\",\n                \"Diciembre\"\n            ]\n        },\n        minDate: undefined,\n        maxDate: new Date(),\n        opens: 'left',\n        showDropdowns: true,\n        timePicker: false,\n        singleDatePicker: true\n    };\n\n\n    constructor(private productService: ProductService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService,\n                private userProductService: UserProductService,\n                private authenticationService: AuthenticationService\n    ) {\n    }\n\n    ngOnInit() {}\n\n    get product(){\n        return this._product;\n    }\n\n    @Input() set product(product: MProduct){\n        if (product.productId != undefined){\n            this._product = product;\n            this.productPurchaseDate = this.product.productPurchaseDate;\n            this.title = \"Editar producto\";\n        }else{\n            this._product = new MProduct();\n            this.title = \"Crear producto\";\n            this.productPurchaseDate = null;\n        }\n    }\n\n    get eventId(){\n        return this._eventId;\n    }\n\n    @Input() set eventId(eventId: number){\n        if (eventId!= undefined){\n            this._eventId = eventId;\n        }else{\n            this._eventId = 0;\n        }\n    }\n\n    public applyDate(): void {\n        this.product.productPurchaseDate = new Date(this.productPurchaseDate.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n    }\n\n    public selectedDate(value: any): void {\n        this.productPurchaseDate = new Date(value.start);\n    }\n\n    public cancelDate(): void {\n        this.productPurchaseDate = undefined;\n    }\n\n    onSubmit(){\n        if (this.product.productId != undefined){\n            this.onEdit();\n        }else{\n            this.onCreate();\n        }\n    }\n\n    onCreate() {\n        this.product.eventId = this.eventId;\n        this.productService.createProduct(this.product).subscribe((response) => {\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeProductButton\").click();\n            this.notificationService.success(\"Nuevo producto creado\", \"Se ha creado el producto correctamente.\");\n        });\n    }\n\n    onEdit(){\n        this.productService.editProduct(this.product).subscribe(() => {\n            this.userProductService.getUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe((response)=>{\n                    if (response.productId != 0){\n                        this.userProductService.editUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                    }else{\n                        this.userProductService.createUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                    }\n                });\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeProductButton\").click();\n            this.notificationService.success(\"Producto editado\", \"Se ha editado el producto correctamente.\");\n        });\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.product.productPhoto = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    closeModal(){\n        this.product = new MProduct();\n        this.imageFormat = null;\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n}","<div class=\"modal fade\" id=\"createProductModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createProductLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #createProductForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 file-input imageDiv\">\n                                <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                       type=\"file\"\n                                       id=\"createProduct_productPhoto\" name=\"productPhoto\">\n                                <label title=\"Cambiar imagen de producto\" for=\"createProduct_productPhoto\"\n                                       (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                    <ng-container *ngIf=\"product.productPhoto; else imagesDiv\">\n                                        <img class=\"image\" [ngClass]=\"imageColor\" [src]=\"product.productPhoto\" alt=\"\"\n                                             id=\"createProduct_photo\">\n                                    </ng-container>\n                                    <ng-template #imagesDiv>\n                                        <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"defaultImage\">\n                                    </ng-template>\n                                    <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                </label>\n                                <div *ngIf=\"imageFormat == false\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"createProduct_productName\" name=\"productName\"\n                                               class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"product.productName\" required\n                                               #productNameForm=\"ngModel\" value=\"gggg\">\n                                        <div *ngIf=\"createProductForm.onSubmit(undefined) && productNameForm.invalid  || productNameForm.invalid && productNameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"productNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"productNameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <textarea class=\"text-area inputs\" name=\"productDescription\" rows=\"4\"\n                                                  cols=\"50\"\n                                                  id=\"createProduct_productDescription\" minlength=\"0\"\n                                                  maxlength=\"100\"\n                                                  name=\"productDescription\" placeholder=\"Descripción\"\n                                                  pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                  title=\"Puede contener letras y números, máximo 100 caracteres\"\n                                                  [(ngModel)]=\"product.productDescription\"\n                                                  #productDescriptionForm=\"ngModel\">\n                                        </textarea>\n                                        <div *ngIf=\"createProductForm.submitted && productDescriptionForm.invalid  || productDescriptionForm.invalid && productDescriptionForm.value!= null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"productDescriptionForm.errors.pattern\">Puede contener letras y\n                                                números, máximo 100 caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"daterangerpicker\"\n                                     daterangepicker\n                                     [options]=\"options\"\n                                     (selected)=\"selectedDate($event)\"\n                                     (applyDaterangepicker)=\"applyDate()\"\n                                     (cancelDaterangepicker)=\"cancelDate()\">\n                                    <div class=\"d-flex justify-content-between h-100\">\n                                        <span *ngIf=\"productPurchaseDate != undefined\" class=\"ps-2 align-self-center\">\n                                                        {{productPurchaseDate | date:'dd/MM/YYYY'}}\n                                        </span>\n                                        <span *ngIf=\"productPurchaseDate == undefined\" class=\"placeholder align-self-center\">\n                                                        Fecha*\n                                        </span>\n                                        <div class=\"align-self-center\">\n                                            <span *ngIf=\"productPurchaseDate != undefined\" class=\"cancel\" (click)=\"cancelDate()\">×</span>\n                                            <span class=\"ng-arrow-wrapper\">\n                                                 <span class=\"btn ng-arrow\"><i class=\"bi bi-calendar\"></i></span>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3\">\n                                <input type=\"number\" class=\"text-area inputs\" name=\"productQuantity\"\n                                       id=\"createProduct_productQuantity\" min=\"1\"\n                                       name=\"productQuantity\" placeholder=\"nº*\"\n                                       pattern=\"[1-9]*\" required\n                                       title=\"Puede contener un número\"\n                                       [(ngModel)]=\"product.productQuantity\"\n                                       #productQuantityForm=\"ngModel\">\n                                <div *ngIf=\"createProductForm.onSubmit(undefined) && productQuantityForm.invalid  || productQuantityForm.invalid && productQuantityForm.value != null\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"productQuantityForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"productQuantityForm.errors.pattern\">Número entero\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3\">\n                                <input type=\"number\" class=\"text-area inputs\" name=\"productCost\"\n                                       id=\"createProduct_productCost\" min=\"0.01\" required\n                                       name=\"productCost\" placeholder=\"Precio*\" step=\"0.01\"\n                                       pattern=\"^\\d*(\\.\\d{0,2})?$\"\n                                       title=\"Puede contener un número\"\n                                       [(ngModel)]=\"product.productCost\"\n                                       #productCostForm=\"ngModel\">\n                                <div *ngIf=\"createProductForm.onSubmit(undefined) && productCostForm.invalid  || productCostForm.invalid && productCostForm.value != null\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"productCostForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"productCostForm.errors.pattern\"> Número positivo con máximo dos decimales\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"buttons\">\n                            <button type=\"button\" id=\"closeProductButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                Cerrar\n                            </button>\n                        </div>\n                        <div class=\"buttons\">\n                            <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {MUserEvent} from \"../../../models/MUserEvent\";\n\n@Component({\n    selector: 'app-createUserEventExpense',\n    templateUrl: './createUserEventExpense.component.html',\n    styleUrls: ['./createUserEventExpense.component.css']\n})\nexport class CreateUserEventExpenseComponent implements OnInit {\n    _userEvent: MUserEvent;\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n    operation: string[] = [];\n    showOperation: string =\"\";\n    totalExpense: number;\n\n    constructor(private userEventService: UserEventService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {}\n\n    get userEvent(){\n        return this._userEvent;\n    }\n\n    @Input() set userEvent(userEvent: MUserEvent){\n        if (userEvent != undefined){\n            this._userEvent = userEvent;\n            this.totalExpense = this.userEvent.totalExpense;\n            this.operation = [];\n            this.operation[0] = userEvent.totalExpense.toString();\n            this.showOperation = userEvent.totalExpense.toString();\n        }else{\n            this._userEvent = new MUserEvent();\n            this.totalExpense = 0;\n            this.operation = [];\n            this.showOperation = \"\";\n        }\n    }\n\n    onEdit(){\n        this.userEventService.editTotalExpense(this.userEvent).subscribe(() => {\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Dinero añadido al evento\", \"Se ha editado el dinero añadido correctamente.\");\n        });\n    }\n\n    calculator(value: number, operator: string){\n        //si el valor seleccionado es un numero\n        if(value != -1){\n            //si ya tenia el primer numero de la operacion pero no tenia el operador\n            if (this.operation[0] != null && this.operation[1] == null){\n                //si el primer numero es 0 se resetea con el nuevo numero\n                if (this.operation[0] == \"0\"){\n                    this.operation[0] = value.toString();\n                    this.showOperation = value.toString();\n                    this.userEvent.totalExpense = value;\n                }else{ //si el primer numero no es cero se añade cifra al numero\n                    this.operation[0] += value.toString();\n                    this.showOperation += value.toString();\n                    if (this.showOperation.includes(\".\") && !this.userEvent.totalExpense.toString().includes(\".\")){\n                        this.userEvent.totalExpense = parseFloat(this.userEvent.totalExpense.toString() + \".\"+ value.toString());\n\n                    }else{\n                        this.userEvent.totalExpense = parseFloat(this.userEvent.totalExpense.toString() + value.toString());\n                    }\n                }\n            }else if (this.operation[0] != null && this.operation[1] != null){ //si ya tenia el primer numero y el operador\n                if (this.operation[2] == null){ //si no tengo la segunda cifra asigno el nuevo numero a la segunda cifra\n                    this.operation[2] = value.toString();\n                }else{ //si tengo la segunda cifra sigo añadiendo numeros\n                    this.operation[2] += value.toString();\n                }\n                this.showOperation += value.toString();\n            }\n        }else{ //si el valor seleccionado no es un numero\n            if (operator == \"R\"){ //si selecciono r vuelvo a los valores iniciales\n                this.operation = [];\n                this.operation[0] = this.totalExpense.toString();\n                this.showOperation = this.totalExpense.toString();\n                this.userEvent.totalExpense = this.totalExpense;\n            }else if (operator == \"C\") { //si selecciono c reseteo la operacion\n                this.operation = [];\n                this.operation[0] = this.userEvent.totalExpense.toString();\n                this.showOperation = this.userEvent.totalExpense.toString();\n            }else{ //si es otro operador\n                    if (this.operation[0] != null){ //si la primera cifra tiene valor\n                        if (this.operation[2] != null){ //si la segunda cifra tiene un valor\n                            if (operator == \".\"){ //si selecciono . añado el operador a la segunda cifra\n                                this.operation[2] += operator.toString();\n                                this.showOperation += operator;\n                            }else if (operator == \"=\"){ //si el operador es un = lo asigno al tercer operando y calculo la operacion\n                                this.showOperation += operator;\n                                this.operation[3] = operator;\n                                if (this.operation[1].toString() == \"+\"){ //si el operando es un + sumo\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) + parseFloat(this.operation[2])).toFixed(2));\n                                }else if (this.operation[1].toString() == \"-\"){ //si el operando es un - resto\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) - parseFloat(this.operation[2])).toFixed(2));\n                                }else if (this.operation[1].toString() == \"/\"){ //si el operando es un / divido\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) / parseFloat(this.operation[2])).toFixed(2));\n                                }else if (this.operation[1].toString() == \"*\"){ //si el operando es un * multiplico\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) * parseFloat(this.operation[2])).toFixed(2));\n                                }\n                                this.operation = [];\n                                this.operation[0] = this.userEvent.totalExpense.toString();\n                                this.showOperation = this.userEvent.totalExpense.toString();\n                            }\n                        }else if(this.operation[1] == null && operator != \".\" && operator != \"=\"){ //si el operador es nulo y el operador no es . o = lo asigno al operador\n                            this.showOperation += operator;\n                            this.operation[1] = operator;\n                        }else if (this.operation[1] == null && operator == \".\" && this.operation[0] != null){\n                            this.operation[0] += operator.toString();\n                            this.showOperation += operator;\n                        }\n                    }\n                }\n        }\n    }\n\n    closeModal(){\n        this.operation = [];\n        this.operation[0] = this.totalExpense.toString();\n        this.showOperation = this.totalExpense.toString();\n        this.userEvent.totalExpense = this.totalExpense;\n\n    }\n}","<div class=\"modal fade\" id=\"createUserEventExpenseModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createUserEventExpenseLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">DINERO ADELANTADO</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onEdit()\"  ngNativeValidate #createUserEventExpenseForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                <p class=\"text\">{{showOperation}}</p>\n                                <input type=\"text\" class=\"text-area inputs\" name=\"totalExpense\"\n                                       id=\"createUserEventExpense_totalExpense\" required\n                                       name=\"totalExpense\" placeholder=\"Precio*\"\n                                       pattern=\"^\\d*(\\.\\d{0,2})?$\"\n                                       title=\"Dinero adelantado para el evento\"\n                                       [(ngModel)]=\"userEvent.totalExpense\"\n                                       #totalExpenseForm=\"ngModel\">\n                                <div *ngIf=\"createUserEventExpenseForm.onSubmit(undefined) && totalExpenseForm.invalid || totalExpenseForm.invalid && totalExpenseForm.value != null\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"totalExpenseForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"totalExpenseForm.errors.pattern\"> Número positivo con máximo dos decimales\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                                <button type=\"button\" class=\"calculatorButton resetButton\" (click)=\"calculator(-1,'C')\">CLEAR</button>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                                <button type=\"button\" class=\"calculatorButton resetButton\" (click)=\"calculator(-1,'R')\">RESET</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(7,'')\">7</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(8,'')\">8</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(9,'')\">9</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'/')\">/</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(4,'')\">4</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(5,'')\">5</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(6,'')\">6</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\"(click)=\"calculator(-1,'*')\">x</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(1,'')\">1</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(2,'')\">2</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(3,'')\">3</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'-')\">-</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(0,'')\">0</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\"(click)=\"calculator(-1,'.')\">.</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'=')\">=</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'+')\">+</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"buttons\">\n                            <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                Cerrar\n                            </button>\n                        </div>\n                        <div class=\"buttons\">\n                            <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MProduct} from \"../../../models/MProduct\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {PRODUCTJOIN} from \"../listProducts/listProducts.component\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\n\n@Component({\n    selector: 'app-detailProduct',\n    templateUrl: './detailProduct.component.html',\n    styleUrls: ['./detailProduct.component.css']\n})\nexport class DetailProductComponent implements OnInit, AfterViewChecked {\n\n    @Output()\n    eventDelete = new EventEmitter<boolean>();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    @Output()\n    statusUpdate = new EventEmitter<number>();\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultImage: string = \"./assets/product3.jpg\";\n\n    productPartakers: MUser[] = [];\n    productPartakersStored: MUser[] = [];\n    pagePartaker = 0;\n    sizePartaker = 6;\n    totalPartaker: number=0;\n    message: string = \"\";\n    previousProduct: string=\"\";\n    nextProduct: string=\"\";\n\n    _previous: boolean = false;\n    _next: boolean = false;\n    _open: boolean = true;\n    _product: MProduct = new MProduct();\n    _status: string =\"\";\n\n    constructor(private productService: ProductService,\n                private userProductService: UserProductService,\n                private userEventService: UserEventService,\n                private authenticationService: AuthenticationService,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationProductClass();\n    }\n\n    ngAfterViewChecked() {\n        document.getElementsByClassName(\"applyDate\")[0].textContent =\"Aplicar\";\n        document.getElementsByClassName(\"cancelDate\")[0].textContent = \"Cancelar\";\n    }\n\n    messageValue(){\n        this.message = \"¿Estás seguro de que deseas eliminar el producto?\";\n    }\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationProductClass();\n    }\n\n    get open(){\n        return this._open;\n    }\n\n    @Input() set open( open: boolean){\n        this._open = open;\n    }\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationProductClass();\n    }\n\n    get status(){\n        return this._status;\n    }\n\n    @Input() set status( status: string){\n        if (status != undefined){\n            this._status = status;\n        }\n    }\n\n\n    get product(){\n        return this._product;\n    }\n\n    @Input() set product (product: MProduct) {\n        if (product != undefined) {\n            this._product = product;\n            this.partakerReset();\n            if (this.product.productId != null){\n                this.getPartakers(this.product.productId);\n                this.getTotalPartakers(this.product.productId);\n            }else{\n                this._product = new MProduct();\n            }\n        }\n        this.productPartakers = [];\n        this.productPartakersStored = [];\n        this.paginationProductClass();\n    }\n\n    onDelete($event){\n        if($event.valueOf()){\n            this.productService.deleteProduct(this.product.productId).subscribe(()=>{\n                this.userProductService.deleteUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe(()=>{});\n                    this.eventDelete.emit();\n                this.notificationService.success(\"Producto eliminado\", \"Se ha eliminado el producto correctamente.\");\n            });\n        }\n    }\n\n    setPageProduct(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    getPartakers(productId:number){\n        this.userProductService.getPageablePartakers(productId,this.pagePartaker, this.sizePartaker).subscribe((response) => {\n            this.productPartakers.push(...response);\n        });\n    }\n\n    getTotalPartakers(productId:number){\n        this.userProductService.countPartakers(productId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getMorePartakers(){\n        this.pagePartaker +=1;\n        if (this.productPartakers.length < this.productPartakersStored.length){\n            this.productPartakers = this.productPartakersStored.slice(0,this.sizePartaker*(this.pagePartaker+1));\n        }else{\n            this.getPartakers(this.product.productId);\n        }\n    }\n\n    getLessPartakers(){\n        if (this.productPartakersStored.length != this.totalPartaker){\n            this.productPartakersStored = this.productPartakers;\n            this.productPartakers = this.productPartakers.slice(0,this.sizePartaker*this.pagePartaker);\n        }else{\n            this.productPartakers = this.productPartakersStored.slice(0, this.sizePartaker*this.pagePartaker);\n        }\n        this.pagePartaker -=1;\n    }\n\n    partakerReset(){\n        this.productPartakers = [];\n        this.productPartakersStored = [];\n        this.pagePartaker = 0;\n    }\n\n    private paginationProductClass(){\n        if(this._previous && this._next){\n            this.previousProduct = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextProduct = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this._previous && this._next){\n            this.previousProduct = \"\";\n            this.nextProduct = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this._previous && !this._next){\n            this.previousProduct = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextProduct = \"\";\n        }else{\n            this.previousProduct = \"\";\n            this.nextProduct = \"\";\n        }\n    }\n\n    setStatus(){\n        this.statusUpdate.emit();\n        if (this.status == PRODUCTJOIN.JOIN){\n            this.userProductService.getUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe((response)=>{\n                if (response.productId != 0){\n                    this.userProductService.editUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                }else{\n                    this.userProductService.createUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                }\n            });\n        }else{\n            this.userProductService.deleteUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe(()=>{\n            });\n        }\n    }\n}","<div class=\"modal fade\" id=\"detailProductModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailProductLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onDelete($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{product.productName}}</h5>\n                <div *ngIf=\"open\" class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li>\n                            <button type=\"button\" data-bs-dismiss=\"modal\" class=\"dropdown-item buttonText\" title=\"Cambiar de estado\" (click)=\"setStatus();\">{{status}}</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" class=\"dropdown-item buttonText\" title=\"Editar producto\"\n                                    data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#createProductModal\"\n                                    (click)=\"pagePartaker=0\">Editar producto</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" class=\"dropdown-item buttonText\" title=\"Eliminar producto\"  data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"messageValue();pagePartaker=0\">Eliminar producto</button>\n                        </li>\n                    </ul>\n                </div>\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\" data-bs-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        (click)=\"pagePartaker=0\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"imageProductDiv\">\n                                <ng-container *ngIf=\"product.productPhoto; else imagesDiv\">\n                                    <img class=\"imageProduct\" [src]=\"product.productPhoto\" alt=\"\"\n                                         id=\"detailProduct_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageProduct\" [src]=\"defaultImage\">\n                                </ng-template>\n                                <div class=\"date text\">\n                                    Fecha de compra: {{product.productPurchaseDate | date: 'dd-MM-yyyy'}}\n                                </div>\n\n                            </div>\n                            <div class=\"text\"\n                                 name=\"productQuantityAndCost\"unidades\n                                 id=\"detailProduct_productAmount\">\n                                <img class=\"icon\" src=\"./assets/amount.svg\" alt=\"\">{{product.productQuantity}}\n                                <img class=\"icon\" src=\"./assets/money.svg\" alt=\"\">{{product.productCost}}€\n                            </div>\n                            <div class=\"description-row text\"\n                                 name=\"productDescription\"\n                                 id=\"detailProduct_productDescription\">\n                                <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"\">{{product.productDescription}}\n                            </div>\n                        </div>\n                        <div class=\"paginationMemberDiv col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let user of productPartakers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-6 productMember\">\n                                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                        <p class=\"imageP\">\n                                            <img class=\"imageMember\"\n                                                 [src]=\"user.userPhoto\" alt=\"\" id=\"detailUser_photo\">\n                                        </p>\n                                        <p class=\"member\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-container>\n                                    <ng-template #userImagesDiv>\n                                        <p class=\"imageP\">\n                                            <img class=\"imageMember\" [src]=\"defaultUserImage\">\n                                        </p>\n                                        <p class=\"member\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-template>\n                                </div>\n                                <div *ngIf=\"productPartakers.length > sizePartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getLessPartakers()\"><a>\n                                    Ver menos</a></div>\n                                <div *ngIf=\"productPartakers.length < totalPartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getMorePartakers()\"><a>\n                                    Ver más</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationProduct\">\n                            <li [ngClass]=\"previousProduct\" *ngIf=\"previous\">\n                                <a class=\"previousProduct\" (click)=\"setPageProduct(-1); pagePartaker=0\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextProduct\" *ngIf=\"next\">\n                                <a class=\"nextProduct\" (click)=\"setPageProduct(1); pagePartaker=0\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, OnInit} from '@angular/core';\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MProduct} from \"../../../models/MProduct\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {MUser} from \"../../../models/MUser\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {MUserEvent} from \"../../../models/MUserEvent\";\nimport {MUserUserEvent} from \"../../../models/MUserUserEvent\";\nimport {UserUserEventService} from \"../../../services/userUserEvent.service\";\n\nexport enum PRODUCTJOIN {\n    JOIN = 'Participar', CANCEL = 'Quitar participación'\n}\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './listProducts.component.html',\n    styleUrls: ['./listProducts.component.css']\n})\n\nexport class ListProductsComponent implements OnInit {\n    size: number= 6;\n    index: number;\n    previous:string;\n    next:string;\n    pageDirection: number;\n\n    //EVENTO\n    defaultEventImage: string = \"./assets/event7.jpg\";\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    event: MEvent;\n    eventPartakers: MUser[] = [];\n    eventPartakersStored: MUser[] = [];\n    pagePartaker = 0;\n    sizePartaker = 6;\n    totalPartaker: number=0;\n    imagesPartakers: {[index:number]: any;} = {};\n    imageEvent: any;\n    moneyColor: string;\n    moneyText: string;\n    previousMember:string;\n    nextMember: string;\n\n\n    //PRODUCTOS\n    defaultImage: string = \"./assets/product3_2.jpg\";\n    productName = \"\";\n    products: MProduct[] = [];\n    imagesProducts: {[index:number]: any;} = {};\n    status: {[index: number]: any;} = {};\n    totalProductPage:number= 0;\n    productPage: number= 0;\n    selectedProduct: MProduct = new MProduct();\n    selectedStatus: string =\"\";\n\n    //GASTOS\n    userName: string;\n    userEvents: MUserEvent[] = [];\n    totalUserEventPage:number= 0;\n    userEventPage: number= 0;\n    authUserEvent: MUserEvent;\n    totalExpense: number = 0;\n    totalEventExpense: number = 0;\n    totalProductCost: number = 0;\n    debt: number = 0;\n\n    //TRANSACCIÓN\n    transactions: MUserUserEvent[] = [];\n    transactionPage: number= 0;\n    selectedTransaction: MUserUserEvent = new MUserUserEvent();\n\n    constructor(private productService: ProductService,\n                private userEventService: UserEventService,\n                private userUserEventService: UserUserEventService,\n                private userProductService: UserProductService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        if (localStorage.getItem(\"products\") != undefined){\n            this.event = JSON.parse(<string>localStorage.getItem(\"products\"));\n            this.partakerReset();\n            this.getProducts();\n            this.getPartakers(this.event.eventId);\n            this.getTotalPartakers(this.event.eventId);\n            this.getUserEvents();\n            this.getURLEvent();\n            this.paginationClass();\n            this.getAuthUserEvent();\n            this.paginationMembersClass();\n        }else{\n            this.event = new MEvent();\n        }\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.moneyColor = \"moneyColor\";\n            this.moneyText = \"moneyText\";\n        }else{\n            this.moneyColor = \"\";\n            this.moneyText= \"\";\n        }\n    }\n\n    cost(cost: number): number{\n        return Math.round(cost*100)/100;\n    }\n\n    private getURLEvent(){\n        this.imageEvent= this.sanitizer.bypassSecurityTrustUrl(this.event.eventPhoto);\n    }\n\n    private getURLPartaker(partakers: MUser[]){\n        partakers.forEach((partaker) => {\n            this.imagesPartakers[partaker.userId] = this.sanitizer.bypassSecurityTrustUrl(partaker.userPhoto);\n        });\n    }\n\n    getPartakers(eventId:number){\n        this.userEventService.getPageablePartakers(eventId,this.pagePartaker, this.sizePartaker).subscribe((response) => {\n            this.eventPartakers.push(...response);\n            this.getURLPartaker(response);\n            this.paginationMembersClass();\n        });\n    }\n\n    getTotalPartakers(eventId:number){\n        this.userEventService.countPartakers(eventId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getMorePartakers(){\n        this.pagePartaker +=1;\n        if (this.eventPartakers.length < this.eventPartakersStored.length){\n            this.eventPartakers = this.eventPartakersStored.slice(0,this.sizePartaker*(this.pagePartaker+1));\n        }else{\n            this.getPartakers(this.event.eventId);\n        }\n        this.paginationMembersClass();\n    }\n\n    getLessPartakers(){\n        if (this.eventPartakersStored.length != this.totalPartaker){\n            this.eventPartakersStored = this.eventPartakers;\n            this.eventPartakers = this.eventPartakers.slice(0,this.sizePartaker*this.pagePartaker);\n        }else{\n            this.eventPartakers = this.eventPartakersStored.slice(0, this.sizePartaker*this.pagePartaker);\n        }\n        this.pagePartaker -=1;\n        this.paginationMembersClass();\n    }\n\n    partakerReset(){\n        this.eventPartakers = [];\n        this.eventPartakersStored = [];\n        this.pagePartaker = 0;\n    }\n\n    ownerLabel(userId:number):string{\n        let value:string = \"\";\n        if (userId == this.event.eventOwner){\n            value = \"Administrador\";\n        }\n        return value;\n    }\n\n    getTotalExpense(){\n        if (this.authUserEvent != undefined){\n            this.totalExpense = this.authUserEvent.totalExpense;\n        }\n    }\n\n    getDebt(){\n        if (this.authUserEvent != undefined){\n            this.debt = this.authUserEvent.debt;\n        }\n    }\n\n    ownerBorder(userId: number):string{\n        if(userId == this.event.eventOwner){\n            return \"owner\";\n        }\n    }\n\n    //PRODUCTOS\n\n    getProducts(){\n        this.productService.getPageableProducts(this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.products = response;\n            this.getAuthUserEvent();\n            this.setSelectedProductPage();\n            this.getURLProduct(response);\n            this.totalProductPages();\n            this.getStatus(response);\n            this.sumTotalEventExpense();\n            this.sumTotalProductCost();\n            this.getTotalExpense();\n            this.getDebt();\n        });\n    }\n\n    paginationClass(){\n        if(this.productPage!=0 && this.productPage+1<this.totalProductPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-6\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-6\";\n        }else if (this.productPage==0 && this.productPage+1<this.totalProductPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.productPage!=0 && this.productPage+1==this.totalProductPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    private paginationMembersClass(){\n        if(this.eventPartakers.length > this.sizePartaker && this.eventPartakers.length < this.totalPartaker){\n            this.previousMember = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextMember = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 nextMember\";\n        }else if (this.eventPartakers.length <= this.sizePartaker && this.eventPartakers.length < this.totalPartaker){\n            this.previousMember = \"\";\n            this.nextMember = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.eventPartakers.length > this.sizePartaker && this.eventPartakers.length >= this.totalPartaker){\n            this.previousMember = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextMember = \"\";\n        }else{\n            this.previousMember = \"\";\n            this.nextMember = \"\";\n        }\n    }\n\n    private getURLProduct(products: MProduct[]){\n        products.forEach((product) => {\n            this.imagesProducts[product.productId] = this.sanitizer.bypassSecurityTrustUrl(product.productPhoto);\n         });\n    }\n\n    setProduct(){\n        this.selectedProduct = new MProduct();\n    }\n\n    setSelectedProductPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n            }\n            this.selectedProduct = this.products[this.index];\n            this.selectedStatus = this.status[this.index];\n        }\n    }\n\n    private totalProductPages() {\n        this.productService.countProducts(this.event.eventId).subscribe((response) => {\n            this.totalProductPage = Math.ceil(response/this.size);\n        });\n    }\n\n    selectProduct(index:number){\n        this.selectedProduct = this.products[index];\n        this.selectedStatus = this.status[this.selectedProduct.productId];\n        this.index = index;\n    }\n\n    setSelectedProduct(product: number) {\n        this.pageDirection = product.valueOf();\n        if ( this.products[this.index + product.valueOf()] != undefined){\n            this.selectProduct(this.index + product.valueOf());\n        }else{\n            this.setProductPage(product.valueOf());\n\n        }\n    }\n\n    setProductPage(page: number){\n        this.productPage += page;\n        this.productPagination();\n        this.paginationClass();\n    }\n\n    private productPagination(){\n        if(this.productName == \"\"){\n            this.getProducts();\n        }else{\n            this.searchProduct();\n        }\n    }\n\n    getProductNext (): boolean{\n        if (this.productPage != this.totalProductPage-1 || this.products[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getProductPrevious():boolean{\n        if (this.productPage != 0 || this.products[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    private searchProduct(){\n        this.productService.getPageableSearchProducts(this.productName, this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.products = response;\n            this.setSelectedProductPage();\n            this.searchProductTotalPages();\n            this.getURLProduct(response);\n            this.getStatus(response);\n\n        });\n    }\n\n    searchProductInput(){\n        this.productPage=0;\n        this.productPagination();\n    }\n\n    private searchProductTotalPages(){\n        this.productService.countSearchProducts(this.productName, this.event.eventId).subscribe((response) => {\n            this.totalProductPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private getStatus (mProducts: MProduct[]) {\n        mProducts.forEach((mProduct) => {\n            this.userProductService.getUserProduct(mProduct.productId, this.authenticationService.getUser().id).subscribe((response) => {\n                if (response.productId == 0 || response.userProductActive == false){\n                    this.status[mProduct.productId] = PRODUCTJOIN.JOIN;\n                }else if (response.userProductActive == true){\n                    this.status[mProduct.productId] = PRODUCTJOIN.CANCEL;\n                }\n            });\n        });\n    }\n\n    messageStatus(productId:number): string{\n        if (this.status[productId] == PRODUCTJOIN.JOIN.valueOf()){\n            return \"Solicitar participación\";\n        }else{\n            return \"Participando\";\n        }\n    }\n\n    //GASTOS\n    getUserEvents(){\n        this.userEventService.getPageableUserEvents(this.event.eventId, this.userEventPage, this.totalPartaker).subscribe((response) => {\n            this.userEvents = response;\n            this.totalUserEventPages();\n\n        });\n    }\n\n    getUserExpense(userId: number): number{\n        let expense: number = 0;\n            this.userEvents.forEach((userEvent) =>{\n           if (userEvent.userId == userId){\n               expense = userEvent.totalExpense;\n           }\n        });\n        return expense;\n    }\n\n    showExpenseButton(userId: number): boolean{\n        if (userId == this.authenticationService.getUser().id && this.event.eventOpen){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getAuthUserEvent(){\n        this.userEventService.getUserEvent(this.event.eventId, this.authenticationService.getUser().id).subscribe((userEvent) =>{\n            this.authUserEvent = userEvent;\n            this.debt = this.authUserEvent.debt;\n            this.totalExpense = this.authUserEvent.totalExpense;\n            this.sumTotalEventExpense();\n            this.sumTotalProductCost();\n        });\n    }\n\n    sumTotalEventExpense(){\n        this.userEventService.sumTotalEventExpense(this.event.eventId).subscribe((totalEventExpense)=>{\n            this.totalEventExpense = totalEventExpense;\n        });\n    }\n\n    sumTotalProductCost(){\n        this.productService.sumTotalProductCost(this.event.eventId).subscribe((totalProductCost) => {\n            this.totalProductCost = totalProductCost;\n        });\n    }\n\n    private totalUserEventPages() {\n        this.userEventService.countUserEvents(this.event.eventId).subscribe((response) => {\n            this.totalUserEventPage = Math.ceil(response/this.size);\n        });\n    }\n\n    setUserEventPage(page: number){\n        this.userEventPage += page;\n        this.getUserEvents();\n        this.paginationClass();\n    }\n\n    private userEventPagination(){\n        if(this.userName == \"\"){\n            this.getUserEvents();\n        }else{\n            this.searchUserEvent();\n        }\n    }\n\n    private searchUserEvent(){\n        this.userEventService.getPageableSearchUserEvents(this.userName, this.event.eventId, this.userEventPage, this.size).subscribe((response) => {\n            this.userEvents = response;\n            this.searchUserEventTotalPages();\n        });\n    }\n\n    searchUserEventInput(){\n        this.userEventPage=0;\n        this.userEventPagination();\n    }\n\n    private searchUserEventTotalPages(){\n        this.userEventService.countSearchUserEvents(this.userName, this.event.eventId).subscribe((response) => {\n            this.totalUserEventPage = Math.ceil(response/this.size);\n        });\n    }\n\n   /* //TRANSACCIONES\n\n    getTransactions(){\n        this.userUserEventService.getPageableUserUserEvents(this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.setSelectedTransactionPage();\n            this.totalTransactionPages();\n\n        });\n    }\n\n    getActor(actorId: number): MUser{\n        let actor: MUser = null;\n        this.eventPartakers.forEach((partaker) =>{\n            if (partaker.userId == actorId){\n               actor = partaker;\n           }\n        });\n        return actor;\n    }\n\n    colorDebt(senderId: number): string{\n        if (senderId == this.authUserEvent.userId){\n            return \"colorDebt\";\n        }else{\n            return \"\";\n        }\n    }\n\n    colorButtonDebt(senderId: number): string{\n        if (senderId == this.authUserEvent.userId){\n            return \"colorButtonDebt\";\n        }else{\n            return \"\";\n        }\n    }\n\n    setSelectedTransactionPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n            }\n            this.selectedTransaction = this.transactions[this.index];\n        }\n    }\n\n    private totalTransactionPages() {\n        this.userUserEventService.countUserUserEvents(this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    selectTransaction(index:number){\n        this.selectedTransaction = this.transactions[index];\n        this.index = index;\n    }\n\n    setSelectedTransaction(transaction: number) {\n        this.pageDirection = transaction.valueOf();\n        if ( this.transactions[this.index + transaction.valueOf()] != undefined){\n            this.selectTransaction(this.index + transaction.valueOf());\n        }else{\n            this.setTransactionPage(transaction.valueOf());\n\n        }\n    }\n\n    setTransactionPage(page: number){\n        this.transactionPage += page;\n        this.transactionPagination();\n        this.paginationClass();\n    }\n\n    private transactionPagination(){\n        if(this.transactionActorName == \"\"){\n            this.getTransactions();\n        }else{\n            this.searchTransaction();\n        }\n    }\n\n    getTransactionNext (): boolean{\n        if (this.transactionPage != this.totalTransactionPage-1 || this.transactions[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getTransactionPrevious():boolean{\n        if (this.transactionPage != 0 || this.transactions[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    private searchTransaction(){\n        this.userUserEventService.getPageableSearchUserUserEvents(this.transactionActorName, this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.setSelectedTransactionPage();\n            this.searchTransactionTotalPages();\n        });\n    }\n\n    searchTransactionInput(){\n        this.transactionPage=0;\n        this.transactionPagination();\n    }\n\n    private searchTransactionTotalPages(){\n        this.userUserEventService.countSearchUserUserEvents(this.transactionActorName, this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }*/\n}","<section class=\"section\">\n    <div class=\"row\">\n        <div class=\"col-xxl-3 col-xl-2 col-lg-3 col-md-6 col-sm-6 col-12\">\n            <div class=\"imageEventDiv\">\n                <ng-container *ngIf=\"event.eventPhoto; else imagesDiv\">\n                    <img class=\"imageEvent\" [src]=\"imageEvent\" alt=\"\"\n                         id=\"detailUserEvent_photo\">\n                </ng-container>\n                <ng-template #imagesDiv>\n                    <img class=\"imageEvent\" [src]=\"defaultEventImage\">\n                </ng-template>\n            </div>\n        </div>\n        <div class=\"col-xxl-4 col-xl-5 col-lg-5 col-md-6 col-sm-6 col-12\">\n            <h5 class=\"row modal-title title eventTitle\">\n                {{event.eventName}}\n            </h5>\n            <div class=\"row date text\">\n                <img class=\"icon\" src=\"./assets/date.svg\" alt=\"\"\n                     id=\"detailUserEvent_date\">\n                {{event.eventStart | date: 'dd-MM-yyyy HH:mm'}}<br>\n                {{event.eventEnd | date: 'dd-MM-yyyy HH:mm'}}\n            </div>\n            <div class=\"row description-row text\"\n                 name=\"eventLocation\"\n                 id=\"detailEvent_eventLocation\">\n                <img class=\"icon\" src=\"./assets/location.svg\" alt=\"\"\n                     id=\"detailUserEvent_location\">\n                {{event.eventLocation}}\n            </div>\n            <div class=\"row description-row text\"\n                     name=\"eventDescription\"\n                     id=\"detailEvent_eventDescription\">\n                <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"\"\n                     id=\"detailUserEvent_description\">\n                {{event.eventDescription}}\n            </div>\n        </div>\n        <div class=\"paginationPartakerDiv col-xxl-5 col-xl-5 col-lg-4 col-md-12 col-sm-12 col-12\">\n            <div class=\"row\">\n                <div *ngFor=\"let user of eventPartakers\" class=\"col-xxl-4 col-xl-4 col-lg-6 col-md-4 col-sm-4 col-5 partakerDiv\">\n                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                            <img class=\"imagePartaker\" [ngClass]=\"ownerBorder(user.userId)\"\n                                 [src]=\"imagesPartakers[user.userId]\" alt=\"\" id=\"detailUser_photo\">\n                        </p>\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                            {{user.userLogin}}\n                        </p>\n                    </ng-container>\n                    <ng-template #userImagesDiv>\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                            <img class=\"imagePartaker\" [ngClass]=\"ownerBorder(user.userId)\" [src]=\"defaultUserImage\">\n                        </p>\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                            {{user.userLogin}}\n                        </p>\n                    </ng-template>\n                    <app-createUserEventExpense (eventSave)=\"getAuthUserEvent()\" [userEvent]=\"authUserEvent\"></app-createUserEventExpense>\n                </div>\n                <div *ngIf=\"eventPartakers.length > sizePartaker\" [ngClass]=\"previousMember\" class=\"more\" (click)=\"getLessPartakers()\"><a>\n                    Ver menos</a></div>\n                <div *ngIf=\"eventPartakers.length < totalPartaker\" [ngClass]=\"nextMember\" class=\"more\" (click)=\"getMorePartakers()\"><a>\n                    Ver más</a></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row moneyCircles\">\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p  title=\"Dinero que he aportado al evento\" class=\"partakerExpense\">\n                    {{cost(totalExpense)}}€\n                </p>\n                <p  title=\"Dinero que he aportado al evento\" class=\"partakerTextExpense\">\n                    Dinero adelantado\n                </p>\n            </div>\n            <div class=\"moneyButton\">\n                <button *ngIf=\"event.eventOpen\" type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createUserEventExpenseModal\">Añadir</button>\n            </div>\n        </div>\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p class=\"partakerExpense\" title=\"Dinero que he gastado en el evento\">\n                    {{cost(debt)}}€\n                </p>\n                <p class=\"partakerTextExpense\" title=\"Dinero que he gastado en el evento\">\n                    Dinero gastado\n                </p>\n            </div>\n        </div>\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p  title=\"Dinero total adelantado al evento\" class=\"partakerExpense\">\n                    {{cost(totalEventExpense)}}€\n                </p>\n                <p  title=\"Dinero total adelantado al evento\" class=\"partakerTextExpense\">\n                    Dinero total adelantado\n                </p>\n            </div>\n        </div>\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p  title=\"Dinero total gastado en el evento\" class=\"partakerExpense\">\n                    {{cost(totalProductCost)}}€\n                </p>\n                <p  title=\"Dinero total gastado en el evento\" class=\"partakerTextExpense\">\n                    Dinero total gastado\n                </p>\n            </div>\n        </div>\n    </div>\n</section>\n<section>\n    <h6 class=\"subtitle modal-title\">PRODUCTOS</h6>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-7 col-xl-7 col-lg-7 col-md-7 col-sm-7 col-7 search\">\n            <form ngNativeValidate (input)=\"searchProductInput()\" #searchProductsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_productName\" name=\"productName\" placeholder=\"Buscar por nombre de producto\"\n                       [(ngModel)]=\"productName\" required #productNameForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 createDiv\">\n            <button *ngIf=\"event.eventOpen\" type=\"button\" class=\"addButton\" data-bs-toggle=\"modal\" data-bs-target=\"#createProductModal\" (click)=\"setProduct();\">Añadir</button>\n        </div>\n    </div>\n    <app-createProduct (eventSave)=\"getProducts();\" [product]=\"selectedProduct\" [eventId]=\"event.eventId\"></app-createProduct>\n\n    <app-detailProduct (eventDelete)=\"getProducts();\" (statusUpdate)=\"getProducts();\" (eventDetail)=\"setSelectedProduct($event)\" [product]=\"selectedProduct\" [previous] = \"getProductPrevious()\" [next] = \"getProductNext()\" [open]=\"event.eventOpen\" [status] =\"selectedStatus\"></app-detailProduct>\n\n    <div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4 divAligment\">\n        <ng-container *ngIf=\"products.length!= 0; else productsDiv\">\n            <div *ngFor=\"let product of products;let i=index\">\n                <div class=\"col\">\n                    <div class=\"card mb-3 color\" id=\"detailProductCard\" data-bs-toggle=\"modal\" data-bs-target=\"#detailProductModal\"\n                         (click)=\"selectProduct(i)\">\n                        <div class=\"row g-0\">\n                            <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5 divAligment\">\n                                <ng-container *ngIf=\"product.productPhoto != null; else imagesDiv\">\n                                    <img class=\"image\" [src]=\"imagesProducts[product.productId]\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"image\" [src]=\"defaultImage\">\n                                </ng-template>\n                            </div>\n                            <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7 divAligment\">\n                                <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                                    <h5 class=\"title\">{{product.productName}}</h5>\n                                    <p class=\"card-text\">\n                                        <a class=\"message\">{{messageStatus(product.productId)}}</a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #productsDiv>\n            <p class=\"text\">No existen productos</p>\n        </ng-template>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"productPage!=0\"><a class=\"page-link previous\" (click)=\"setProductPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"productPage+1<totalProductPage\"><a class=\"page-link next\" (click)=\"setProductPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>\n\n","import {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {MUserUserEvent} from \"../../models/MUserUserEvent\";\nimport {ProductService} from \"../../services/product.service\";\nimport {UserEventService} from \"../../services/userEvent.service\";\nimport {UserUserEventService} from \"../../services/userUserEvent.service\";\nimport {MEvent} from \"../../models/MEvent\";\nimport {MUser} from \"../../models/MUser\";\nimport {MUserEvent} from \"../../models/MUserEvent\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\n\n@Component({\n    selector: 'app-transactions',\n    templateUrl: './listTransactions.component.html',\n    styleUrls: ['./listTransactions.component.css']\n})\n\nexport class ListTransactionsComponent implements OnInit {\n    size: number= 6;\n    transactionPage: number = 0;\n    index: number;\n    previous:string;\n    next:string;\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    event: MEvent;\n    eventPartakers: MUser[] = [];\n    totalPartaker: number=0;\n    imagesPartakers: {[index:number]: any;} = {};\n\n    authUserEvent: MUserEvent;\n\n    transactionActorName = \"\";\n    transactions: MUserUserEvent[] = [];\n    totalTransactionPage:number= 0;\n    selectedTransaction: MUserUserEvent = new MUserUserEvent();\n\n    constructor(private productService: ProductService,\n                private userEventService: UserEventService,\n                private userUserEventService: UserUserEventService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        if (localStorage.getItem(\"transactions\") != undefined){\n            this.event = JSON.parse(<string>localStorage.getItem(\"transactions\"));\n            this.getTransactions();\n            this.getPartakers(this.event.eventId);\n            this.getAuthUserEvent();\n        }else{\n            this.event = new MEvent();\n        }\n    }\n\n    private getURLPartaker(partakers: MUser[]){\n        partakers.forEach((partaker) => {\n            this.imagesPartakers[partaker.userId] = this.sanitizer.bypassSecurityTrustUrl(partaker.userPhoto);\n        });\n    }\n\n    getPartakers(eventId:number){\n        this.userEventService.getPartakers(eventId).subscribe((response) => {\n            this.eventPartakers.push(...response);\n            this.getURLPartaker(response);\n        });\n    }\n\n    getActor(actorId: number): MUser{\n        let actor: MUser = null;\n        this.eventPartakers.forEach((partaker) =>{\n            if (partaker.userId == actorId){\n                actor = partaker;\n            }\n        });\n        return actor;\n    }\n\n    getTotalPartakers(eventId:number){\n        this.userEventService.countPartakers(eventId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getTransactions(){\n        this.userUserEventService.getPageableUserUserEventsByEvent(this.event.eventId, this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n\n        });\n    }\n    paginationClass(){\n        if(this.transactionPage!=0 && this.transactionPage+1<this.totalTransactionPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-6\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-6\";\n        }else if (this.transactionPage==0 && this.transactionPage+1<this.transactionPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.transactionPage!=0 && this.transactionPage+1==this.transactionPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    getAuthUserEvent(){\n        this.userEventService.getUserEvent(this.event.eventId, this.authenticationService.getUser().id).subscribe((userEvent) =>{\n            this.authUserEvent = userEvent;\n        });\n    }\n\n    colorDebt(senderId: number, receiverId: number): string{\n        if (senderId == this.authUserEvent.userId){\n            return \"colorDebtSender\";\n        }else if (receiverId == this.authUserEvent.userId){\n            return \"colorDebtReceiver\";\n        }else{\n            return \"\";\n        }\n    }\n\n\n\n\n    private totalTransactionPages() {\n        this.userUserEventService.countUserUserEventsByEvent(this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    setTransactionPage(page: number){\n        this.transactionPage += page;\n        this.transactionPagination();\n        this.paginationClass();\n    }\n\n    private transactionPagination(){\n        if(this.transactionActorName == \"\"){\n            this.getTransactions();\n        }else{\n            this.searchTransaction();\n        }\n    }\n\n    private searchTransaction(){\n        this.userUserEventService.getPageableSearchUserUserEventsByEvent(this.transactionActorName, this.event.eventId, this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.searchTransactionTotalPages();\n        });\n    }\n\n    searchTransactionInput(){\n        this.transactionPage=0;\n        this.transactionPagination();\n    }\n\n\n    cost(cost: number): number{\n        return Math.round(cost*100)/100;\n    }\n\n    private searchTransactionTotalPages(){\n        this.userUserEventService.countSearchUserUserEventsByEvent(this.transactionActorName, this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n}","<section>\n    <h6 class=\"title modal-title\">{{event.eventName}}</h6>\n    <p class=\"subtitle modal-title\">TRANSACCIONES</p>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-8 col-xl-9 col-lg-4 col-md-5 col-sm-6 col-6 searchTransaction\">\n            <form ngNativeValidate (input)=\"searchTransactionInput()\" #searchTransactionsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_transaction\" name=\"transaction\" placeholder=\"Buscar por nombre de participante\"\n                       [(ngModel)]=\"transactionActorName\" required #transactionActorForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row row-cols-1 row-cols-xxl-2 row-cols-xl-2 row-cols-lg-2 row-cols-md-1 row-cols-sm-1 row-cols-1 g-4 divAligment\">\n        <div *ngFor=\"let transaction of transactions;let i=index\">\n            <div class=\"col\">\n                <div class=\"card mb-2\" id=\"detailTransactionCard\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-xxl-5 col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5 divAligment\">\n                            <ng-container *ngIf=\"getActor(transaction.senderId).userPhoto; else senderImagesDiv\">\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\"\n                                         [src]=\"imagesPartakers[transaction.senderId]\" alt=\"\" id=\"detailSender_photo\">\n                                </p>\n                            </ng-container>\n                            <ng-template #senderImagesDiv>\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                                </p>\n                            </ng-template>\n                            <div class=\"card-body-xxl-7 card-body-xl-7 card-body-lg-7 card-body-md-7 card-body-sm-7 card-body-7 divAligment\">\n                                <h5 class=\"transactionTitle\">{{getActor(transaction.senderId).userLogin}}</h5>\n                            </div>\n                        </div>\n                        <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 transactionDivAligment\">\n                            <div class=\"row\">\n                                <p class=\"transactionCard-text\">\n                                    <a class=\"messageCost\" [ngClass]=\"colorDebt(transaction.senderId, transaction.receiverId)\">{{cost(transaction.cost)}}€</a>\n                                    </p>\n                            </div>\n\n\n                        </div>\n                        <div class=\"col-xxl-5 col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5 divAligment receiver\">\n                            <ng-container *ngIf=\"getActor(transaction.receiverId).userPhoto; else receiverImagesDiv\">\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\"\n                                         [src]=\"imagesPartakers[transaction.receiverId]\" alt=\"\" id=\"detailReceiver_photo\">\n                                </p>\n                            </ng-container>\n                            <ng-template #receiverImagesDiv>\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                                </p>\n                            </ng-template>\n                            <div class=\"card-body-xxl-7 card-body-xl-7 card-body-lg-7 card-body-md-8 card-body-sm-7 card-body-7 divAligment\">\n                                <h5 class=\"transactionTitle\">{{getActor(transaction.receiverId).userLogin}}</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"transactionPage!=0\"><a class=\"page-link previous\" (click)=\"setTransactionPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"transactionPage+1<totalTransactionPage\"><a class=\"page-link next\" (click)=\"setTransactionPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>\n\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {STATUS} from \"../listUsers/listUsers.component\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MGroup} from \"../../../models/MGroup\";\nimport {MUserUser} from \"../../../models/MUserUser\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\n\nexport enum MESSAGE{\n    CANCELREQUEST = '¿Cancelar solicitud?', UNFOLLOW = '¿Dejar de seguir?', ALLOWREQUEST = '¿Aceptar solicitud?', SENTREQUEST = '¿Enviar solicitud?'\n}\n\n@Component({\n    selector: 'app-detailUser',\n    templateUrl: './detailUser.component.html',\n    styleUrls: ['./detailUser.component.css']\n})\n\nexport class DetailUserComponent implements OnInit {\n\n    @Output()\n    eventMessage = new EventEmitter<number>();\n    defaultEventImage: string = \"./assets/event7.jpg\";\n    defaultGroupImage: string = \"./assets/group7_2.jpg\";\n    defaultImage: string = \"./assets/user16.jpg\";\n    previousUser: string;\n    nextUser: string;\n\n    previousFriendClass: string;\n    nextFriendClass: string;\n\n    previousGroupClass: string;\n    nextGroupClass: string;\n\n    previousEventClass: string;\n    nextEventClass: string;\n\n    mutualGroups: MGroup[] = [];\n    mutualGroupsStored: MGroup[] = [];\n    pageMutualGroups = 0;\n    sizeMutualGroups = 6;\n    totalMutualGroups: number=0;\n\n    mutualFriends: MUser[] = [];\n    mutualFriendsStored: MUser[] = [];\n    pageMutualFriends = 0;\n    sizeMutualFriends = 4;\n    totalMutualFriends: number=0;\n\n    mutualEvents: MEvent[] = [];\n    mutualEventsStored: MEvent[] = [];\n    pageMutualEvents = 0;\n    sizeMutualEvents = 4;\n    totalMutualEvents: number=0;\n\n    message:string=\"\";\n    _status:string=\"\";\n    _previous: boolean = false;\n    _next: boolean = false;\n    _user: MUser = new MUser();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    constructor(private authenticationService: AuthenticationService,\n                private userUserService: UserUserService,\n                private userEventService: UserEventService,\n                private groupUserService: GroupUserService\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationUserClass();\n        this.paginationFriendClass();\n        this.paginationEventClass();\n\n    }\n\n    get user(){\n        this.paginationFriendClass();\n        this.paginationGroupClass();\n        this.paginationEventClass();\n\n        return this._user;\n    }\n\n    @Input() set user (user: MUser) {\n        if (user != undefined) {\n            this._user = user;\n            this.mutualReset();\n            if (this.user.userId != null){\n                this.getMutualUserGroups(this.user.userId);\n                this.getMutualFriends(this.user.userId);\n                this.getMutualEvents(this.user.userId);\n\n                this.getTotalMutualFriends(this.user.userId);\n                this.getTotalMutualGroups(this.user.userId);\n                this.getTotalMutualEvents(this.user.userId);\n\n\n            }else{\n                this._user = new MUser();\n            }\n        }\n        this.paginationUserClass();\n        this.paginationFriendClass();\n        this.paginationGroupClass();\n        this.paginationEventClass();\n\n    }\n\n\n    mutualReset(){\n        this.mutualGroups = [];\n        this.mutualFriends = [];\n        this.mutualEvents = [];\n\n        this.mutualGroupsStored = [];\n        this.mutualFriendsStored = [];\n        this.mutualEventsStored = [];\n\n        this.pageMutualGroups = 0;\n        this.pageMutualFriends = 0;\n        this.pageMutualEvents = 0;\n    }\n\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationUserClass();\n    }\n\n    get status(){\n        return this._status;\n    }\n\n    @Input() set status( status: string){\n        this._status = status;\n        this.setMessage();\n    }\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationUserClass();\n\n    }\n\n    setPage(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    setMessage(){\n        if (this.status == STATUS.FOLLOW){\n            this.message = MESSAGE.UNFOLLOW;\n        }else if (this.status == STATUS.SENT){\n            this.message = MESSAGE.CANCELREQUEST;\n        }else if (this.status == STATUS.PENDING){\n            this.message = MESSAGE.ALLOWREQUEST;\n        }else if (this.status == STATUS.REQUEST){\n            this.message = MESSAGE.SENTREQUEST;\n        }\n    }\n\n    getMessageStatus(): string{\n        if (this.status == STATUS.FOLLOW){\n            return \"DEJAR DE SEGUIR\";\n        }else if (this.status == STATUS.SENT){\n            return \"CANCELAR ENVÍO DE SOLICITUD\";\n        }else if (this.status == STATUS.PENDING){\n            return \"ACEPTAR O DENEGAR SOLICITUD\";\n        }else if (this.status == STATUS.REQUEST){\n            return \"ENVIAR SOLICITUD\"\n        }\n    }\n\n    private paginationUserClass(){\n        if(this._previous && this._next){\n            this.previousUser = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextUser = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this._previous && this._next){\n            this.previousUser = \"\";\n            this.nextUser = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this._previous && !this._next){\n            this.previousUser = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextUser = \"\";\n        }else{\n            this.previousUser = \"\";\n            this.nextUser = \"\";\n        }\n    }\n\n    private paginationFriendClass(){\n        if(this.mutualFriends.length > this.sizeMutualFriends && this.mutualFriends.length < this.totalMutualFriends){\n            this.previousFriendClass = \"col-xxl-7 col-xl-7 col-lg-7 col-md-5 col-sm-5 col-6\";\n            this.nextFriendClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5\";\n        }else if (this.mutualFriends.length <= this.sizeMutualFriends && this.mutualFriends.length < this.totalMutualFriends){\n            this.previousFriendClass = \"\";\n            this.nextFriendClass = \"col-xxl-7 col-xl-7 col-lg-7 col-md-12 col-sm-12 col-6\";\n        }else if(this.mutualFriends.length > this.sizeMutualFriends && this.mutualFriends.length >= this.totalMutualFriends){\n            this.previousFriendClass = \"col-xxl-8 col-xl-8 col-lg-8 col-md-12 col-sm-12 col-6\";\n            this.nextFriendClass = \"\";\n        }else{\n            this.previousFriendClass = \"\";\n            this.nextFriendClass = \"\";\n        }\n    }\n\n    private paginationGroupClass(){\n        if(this.mutualGroups.length > this.sizeMutualGroups && this.mutualGroups.length < this.totalMutualGroups){\n            this.previousGroupClass = \"col-xxl-6 col-xl-5 col-lg-5 col-md-4 col-sm-5 col-6\";\n            this.nextGroupClass = \"col-xxl-6 col-xl-7 col-lg-7 col-md-3 col-sm-5 col-5\";\n        }else if (this.mutualGroups.length <= this.sizeMutualGroups && this.mutualGroups.length < this.totalMutualGroups){\n            this.previousGroupClass = \"\";\n            this.nextGroupClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n        }else if(this.mutualGroups.length > this.sizeMutualGroups && this.mutualGroups.length >= this.totalMutualGroups){\n            this.previousGroupClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n            this.nextGroupClass = \"\";\n        }else{\n            this.previousGroupClass = \"\";\n            this.nextGroupClass = \"\";\n        }\n    }\n\n    private paginationEventClass(){\n        if(this.mutualEvents.length > this.sizeMutualEvents && this.mutualEvents.length < this.totalMutualEvents){\n            this.previousEventClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-4 col-sm-5 col-6\";\n            this.nextEventClass = \"col-xxl-7 col-xl-7 col-lg-7 col-md-3 col-sm-5 col-5\";\n        }else if (this.mutualEvents.length <= this.sizeMutualEvents && this.mutualEvents.length < this.totalMutualEvents){\n            this.previousEventClass = \"\";\n            this.nextEventClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n        }else if(this.mutualEvents.length > this.sizeMutualEvents && this.mutualEvents.length >= this.totalMutualEvents){\n            this.previousEventClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n            this.nextEventClass = \"\";\n        }else{\n            this.previousEventClass = \"\";\n            this.nextEventClass = \"\";\n        }\n    }\n\n    onRequest($event){\n        if ($event){\n            if (this.status == STATUS.PENDING) {\n                let mUserUser: MUserUser = new MUserUser();\n                mUserUser.userId = this.user.userId;\n                mUserUser.friendId = this.authenticationService.getUser().id;\n                mUserUser.accept = true;\n                this.userUserService.editUserUser(mUserUser).subscribe();\n            }else if (this.status == STATUS.REQUEST){\n                let mUserUser: MUserUser = new MUserUser();\n                mUserUser.userId = this.authenticationService.getUser().id;\n                mUserUser.friendId = this.user.userId;\n                mUserUser.userUserActive = true;\n                mUserUser.accept = false;\n                this.userUserService.getDeletedUserUser(this.user.userId,this.authenticationService.getUser().id).subscribe((response)=>{\n                    if (response != null && !response.userUserActive){\n                        this.userUserService.editUserUser(mUserUser).subscribe();\n                    }else{\n                        this.userUserService.createUserUser(mUserUser).subscribe();\n                    }\n                });\n            }else if (this.status == STATUS.SENT || this.status == STATUS.FOLLOW){\n                this.deleteUserUser();\n            }\n        }else{\n            if (this.status == STATUS.PENDING){\n                this.deleteUserUser();\n            }\n        }\n        this.eventMessage.emit();\n    }\n\n    private deleteUserUser(){\n        this.userUserService.deleteUserUser(this.user.userId, this.authenticationService.getUser().id).subscribe();\n    }\n\n    getMutualUserGroups(userId:number){\n        this.groupUserService.getPageableMutualGroups(userId, this.authenticationService.getUser().id,this.pageMutualGroups, this.sizeMutualGroups).subscribe((response) => {\n            this.mutualGroups.push(...response);\n            this.paginationGroupClass();\n        });\n    }\n\n    getTotalMutualGroups(userId:number){\n        this.groupUserService.countMutualGroups(userId, this.authenticationService.getUser().id).subscribe((number)=>{\n            this.totalMutualGroups = number;\n        });\n    }\n\n    getMoreMutualGroups(){\n        this.pageMutualGroups +=1;\n        if (this.mutualGroups.length < this.mutualGroupsStored.length){\n            this.mutualGroups = this.mutualGroupsStored.slice(0,this.sizeMutualGroups*(this.pageMutualGroups+1));\n        }else{\n            this.getMutualUserGroups(this.user.userId);\n        }\n        this.paginationGroupClass();\n    }\n\n    getLessMutualGroups(){\n        if (this.mutualGroupsStored.length != this.totalMutualGroups){\n            this.mutualGroupsStored = this.mutualGroups;\n            this.mutualGroups = this.mutualGroups.slice(0,this.sizeMutualGroups*this.pageMutualGroups);\n        }else{\n            this.mutualGroups = this.mutualGroupsStored.slice(0, this.sizeMutualGroups*this.pageMutualGroups);\n        }\n        this.pageMutualGroups -=1;\n        this.paginationGroupClass();\n    }\n\n    getMutualFriends(userId:number){\n        this.userUserService.getPageableMutualFriends(userId, this.authenticationService.getUser().id,this.pageMutualFriends, this.sizeMutualFriends).subscribe((response) => {\n            this.mutualFriends.push(...response);\n            this.paginationFriendClass();\n        });\n    }\n\n\n    getTotalMutualFriends(userId:number){\n        this.userUserService.countMutualFriends(userId, this.authenticationService.getUser().id).subscribe((number)=>{\n            this.totalMutualFriends = number;\n        });\n    }\n\n    getMoreMutualFriends(){\n        this.pageMutualFriends +=1;\n        if (this.mutualFriends.length < this.mutualFriendsStored.length){\n            this.mutualFriends = this.mutualFriendsStored.slice(0,this.sizeMutualFriends*(this.pageMutualFriends+1));\n        }else{\n            this.getMutualFriends(this.user.userId);\n        }\n        this.paginationFriendClass();\n    }\n\n\n    getLessMutualFriends(){\n        if (this.mutualFriendsStored.length != this.totalMutualFriends){\n            this.mutualFriendsStored = this.mutualFriends;\n            this.mutualFriends = this.mutualFriends.slice(0,this.sizeMutualFriends*this.pageMutualFriends);\n        }else{\n            this.mutualFriends = this.mutualFriendsStored.slice(0, this.sizeMutualFriends*this.pageMutualFriends);\n        }\n        this.pageMutualFriends -=1;\n        this.paginationFriendClass();\n    }\n\n    getMutualEvents(userId:number){\n        this.userEventService.getPageableMutualEvents(userId, this.authenticationService.getUser().id,this.pageMutualEvents, this.sizeMutualEvents).subscribe((response) => {\n            this.mutualEvents.push(...response);\n            this.paginationEventClass();\n        });\n    }\n\n    getTotalMutualEvents(userId:number){\n        this.userEventService.countMutualEvents(userId, this.authenticationService.getUser().id).subscribe((number)=>{\n            this.totalMutualEvents = number;\n        });\n    }\n\n    getMoreMutualEvents(){\n        this.pageMutualEvents +=1;\n        if (this.mutualEvents.length < this.mutualEventsStored.length){\n            this.mutualEvents = this.mutualEventsStored.slice(0,this.sizeMutualEvents*(this.pageMutualEvents+1));\n        }else{\n            this.getMutualEvents(this.user.userId);\n        }\n        this.paginationEventClass();\n    }\n\n    getLessMutualEvents(){\n        if (this.mutualEventsStored.length != this.totalMutualEvents){\n            this.mutualEventsStored = this.mutualEvents;\n            this.mutualEvents = this.mutualEvents.slice(0,this.sizeMutualEvents*this.pageMutualEvents);\n        }else{\n            this.mutualEvents = this.mutualEventsStored.slice(0, this.sizeMutualEvents*this.pageMutualEvents);\n        }\n        this.pageMutualEvents -=1;\n        this.paginationEventClass();\n    }\n}\n\n","<div class=\"modal fade\" id=\"detailUserModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailUserLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onRequest($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n\n                <h5 class=\"modal-title title\">\n                    {{user.userLogin}}\n                </h5>\n                <div class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li>\n                            <button type=\"button\" class=\"dropdown-item buttonText\" title=\"Cambiar de estado\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\">{{getMessageStatus()}}</button>\n                        </li>\n                    </ul>\n                </div>\n\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\"  data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 userScroll\">\n                            <div class=\"imageUserDiv\">\n                                <ng-container *ngIf=\"user.userPhoto; else imagesDiv\">\n                                    <img class=\"imageUser\" [src]=\"user.userPhoto\" alt=\"foto de perfil de usuario\"\n                                         id=\"detailUser_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageUser\" [src]=\"defaultImage\" alt=\"foto de perfil de usuario por defecto\">\n                                </ng-template>\n                            </div>\n                            <p class=\"text subtitle userSubtitle\">AMIGOS COMUNES</p>\n                            <div class=\"paginationMutualDiv col-xxl-5 col-xl-5 col-lg-5 col-md-12 col-sm-12 col-5\">\n                                <div class=\"row\">\n                                    <ng-container *ngIf=\"mutualFriends.length !=0; else mutualFriendsDiv\">\n                                        <div *ngFor=\"let user of mutualFriends\" class=\"col-xxl-5 col-xl-5 col-lg-5 col-md-12 col-sm-12 col-5 userDiv\">\n                                            <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\"\n                                                         [src]=\"user.userPhoto\" alt=\"\" id=\"detailMutualUser_photo\">\n                                                </p>\n                                                <p class=\"mutual mutualUser\">\n                                                    {{user.userLogin}}\n                                                </p>\n                                            </ng-container>\n                                            <ng-template #userImagesDiv>\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\" [src]=\"defaultImage\">\n                                                </p>\n                                                <p class=\"mutual mutualUser\">\n                                                    {{user.userLogin}}\n                                                </p>\n                                            </ng-template>\n                                        </div>\n                                        <div *ngIf=\"mutualFriends.length > sizeMutualFriends\" [ngClass]=\"previousFriendClass\" class=\"more\" (click)=\"getLessMutualFriends();\"><a>\n                                            Ver menos</a></div>\n                                        <div *ngIf=\"mutualFriends.length < totalMutualFriends\" [ngClass]=\"nextFriendClass\" class=\"more\" (click)=\"getMoreMutualFriends();\"><a>\n                                            Ver más</a></div>\n                                    </ng-container>\n                                    <ng-template #mutualFriendsDiv>\n                                        <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                            <p class=\"text userText\">No hay amigos en común</p>\n                                        </div>\n                                    </ng-template>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-11 mutualBorder\">\n                                <p class=\"text subtitle\">GRUPOS COMUNES</p>\n                                <div class=\"paginationMutualDiv mutualRight col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5\">\n                                    <div class=\"row\">\n                                        <ng-container  *ngIf=\"mutualGroups.length !=0; else mutualGroupsDiv\">\n                                            <div *ngFor=\"let group of mutualGroups\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5 mutualDiv\">\n                                                <ng-container *ngIf=\"group.groupPhoto; else groupImagesDiv\">\n                                                    <p class=\"imageP\">\n                                                        <img class=\"imageMutuals\"\n                                                             [src]=\"group.groupPhoto\" alt=\"\" id=\"detailMutualGroup_photo\">\n                                                    </p>\n                                                    <p class=\"mutual\">\n                                                        {{group.groupName}}\n                                                    </p>\n                                                </ng-container>\n                                                <ng-template #groupImagesDiv>\n                                                    <p class=\"imageP\">\n                                                        <img class=\"imageMutuals\" [src]=\"defaultGroupImage\">\n                                                    </p>\n                                                    <p class=\"mutual\">\n                                                        {{group.groupName}}\n                                                    </p>\n                                                </ng-template>\n                                            </div>\n                                            <div *ngIf=\"mutualGroups.length > sizeMutualGroups\" [ngClass]=\"previousGroupClass\" class=\"moreMutual\" (click)=\"getLessMutualGroups()\"><a>\n                                                Ver menos</a></div>\n                                            <div *ngIf=\"mutualGroups.length < totalMutualGroups\" [ngClass]=\"nextGroupClass\" class=\"moreMutual\" (click)=\"getMoreMutualGroups()\"><a>\n                                                Ver más</a></div>\n                                        </ng-container>\n                                        <ng-template #mutualGroupsDiv>\n                                            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                                <p class=\"text withoutText\">No hay grupos en común</p>\n                                            </div>\n                                        </ng-template>\n                                    </div>\n                                </div>\n                            <p class=\"text subtitle\">EVENTOS COMUNES</p>\n                            <div class=\"paginationMutualDiv mutualRight col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5\">\n                                <div class=\"row\">\n                                    <ng-container  *ngIf=\"mutualEvents.length !=0; else mutualEventsDiv\">\n                                        <div *ngFor=\"let event of mutualEvents\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5 mutualDiv\">\n                                            <ng-container *ngIf=\"event.eventPhoto; else eventImagesDiv\">\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\"\n                                                         [src]=\"event.eventPhoto\" alt=\"\" id=\"detailMutualEvent_photo\">\n                                                </p>\n                                                <p class=\"mutual\">\n                                                    {{event.eventName}}\n                                                </p>\n                                            </ng-container>\n                                            <ng-template #eventImagesDiv>\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\" [src]=\"defaultEventImage\">\n                                                </p>\n                                                <p class=\"mutual\">\n                                                    {{event.eventName}}\n                                                </p>\n                                            </ng-template>\n                                        </div>\n                                        <div *ngIf=\"mutualEvents.length > sizeMutualEvents\" [ngClass]=\"previousEventClass\" class=\"moreMutual\" (click)=\"getLessMutualEvents();\"><a>\n                                            Ver menos</a></div>\n                                        <div *ngIf=\"mutualEvents.length < totalMutualEvents\" [ngClass]=\"nextEventClass\"class=\"moreMutual\" (click)=\"getMoreMutualEvents();\"><a>\n                                            Ver más</a></div>\n                                    </ng-container>\n                                    <ng-template #mutualEventsDiv>\n                                        <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                            <p class=\"text withoutText\">No hay eventos en común</p>\n                                        </div>\n                                    </ng-template>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationUser\">\n                            <li [ngClass]=\"previousUser\" *ngIf=\"previous\">\n                                <a class=\"previousUser\" (click)=\"setPage(-1);\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextUser\" *ngIf=\"next\">\n                                <a class=\"nextUser\" (click)=\"setPage(1);\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../services/user.service\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MUser} from \"../../../models/MUser\";\n\n\nexport enum STATUS {\n    REQUEST = 'Solicitar amistad', PENDING = 'Solicitud pendiente', FOLLOW = 'Siguiendo', SENT = 'Solicitud enviada'\n}\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './listUsers.component.html',\n    styleUrls: ['./listUsers.component.css']\n})\nexport class ListUsersComponent implements OnInit {\n    login = \"\";\n    users: MUser[] = [];\n    images: {[index:number]: any;} = {};\n    defaultImage = \"./assets/user16.jpg\";\n    friends: {[index: number]: any;} = {};\n    totalPage = 0;\n    page = 0;\n    private size = 6;\n    previous:string;\n    next:string;\n    selectedUsers: MUser;\n    pageDirection: number;\n    index:number;\n    status:string=\"\";\n    selectedUser: MUser = new MUser();\n\n    constructor(private userService: UserService,\n                private userUserService: UserUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getUsers();\n        this.paginationClass();\n    }\n\n    setUser(){\n        this.selectedUser = new MUser();\n    }\n\n    selectUser(index:number){\n        this.selectedUser = this.users[index];\n        this.index = index;\n        this.status = this.friends[this.selectedUser.userId];\n    }\n\n    setSelectedUserPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n                this.selectedUser = this.users[this.index];\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n                this.selectedUser = this.users[this.index];\n            }\n        }\n    }\n\n    getUsers(){\n        this.userService.getPageableUsers(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.users = response;\n            this.setSelectedUserPage();\n            this.getURL(response);\n            this.getStatus(response);\n            this.totalPages();\n        });\n    }\n\n    paginationClass(){\n        if(this.page!=0 && this.page+1<this.totalPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-2 col-6\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-2 col-6\";\n        }else if (this.page==0 && this.page+1<this.totalPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n        }else if(this.page!=0 && this.page+1==this.totalPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    setPage(page: number){\n        this.page += page;\n        this.pagination();\n        this.paginationClass();\n    }\n\n    private pagination(){\n        if(this.login == \"\"){\n            this.getUsers();\n        }else{\n            this.searchUsers();\n        }\n    }\n\n    private getURL(users: MUser[]){\n        users.forEach((user) => {\n            this.images[user.userId] = user.userPhoto;\n        });\n    }\n\n    private searchUsers(){\n        this.userService.getPageableSearchUsers(this.login, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.users = response;\n            this.getStatus(response);\n            this.searchTotalPages();\n            this.getURL(response);\n        });\n    }\n\n    searchInput(){\n        this.page=0;\n        this.pagination();\n    }\n\n    private totalPages() {\n        this.userService.countUsers(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPages(){\n        this.userService.countSearchUsers(this.login, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getNext (): boolean{\n        if (this.page != this.totalPage-1 || this.users[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getPrevious():boolean{\n        if (this.page != 0 || this.users[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    setSelectedUser(event: number) {\n        this.pageDirection = event.valueOf();\n        if ( this.users[this.index + event.valueOf()] != undefined){\n            this.selectUser(this.index + event.valueOf());\n        }else{\n            this.setPage(event.valueOf());\n\n        }\n    }\n\n    private statusValue (statusBD: boolean, friend: boolean): string {\n        let status: string;\n        if (statusBD) {\n            status = STATUS.FOLLOW;\n        } else if (friend) {\n            status = STATUS.PENDING;\n        }else if (!statusBD){\n            status = STATUS.SENT;\n        }else{\n            status = STATUS.REQUEST;\n        }\n        return status;\n    }\n\n    private getStatus (mUsers: MUser[]) {\n        mUsers.forEach((mUser) => {\n            this.userUserService.getUserUser(mUser.userId, this.authenticationService.getUser().id).subscribe((response) => {\n                if (response != null) {\n                    this.friends[mUser.userId] = this.statusValue(response.accept,false);\n                } else {\n                    this.friendStatus(mUser);\n                }\n            });\n        });\n    }\n\n    private friendStatus(mUser: MUser){\n        this.userUserService.getUserUser(this.authenticationService.getUser().id,mUser.userId).subscribe((response) => {\n                if (response != null) {\n                    this.friends[mUser.userId] = this.statusValue(response.accept, true);\n                }else{\n                    this.friends[mUser.userId] = STATUS.REQUEST;\n                }\n            });\n    }\n}","<div class=\"searchDiv col-auto text-center\">\n    <form ngNativeValidate (input)=\"searchInput()\" #searchUsersForm=\"ngForm\">\n        <input type=\"search\" id=\"friend_nameLogin\" name=\"nameLogin\" placeholder=\"Buscar por nombre de usuario\"\n               [(ngModel)]=\"login\" required #userLoginForm=\"ngModel\" aria-label=\"Search\">\n    </form>\n</div>\n<app-detailUser (eventDetail)=\"setSelectedUser($event)\" (eventMessage)=\"getUsers()\" [user]=\"selectedUser\" [previous] = \"getPrevious()\" [next] = \"getNext()\" [status]=\"status\"></app-detailUser>\n<div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4\">\n    <ng-container *ngIf=\"users.length !=0; else usersDiv\">\n        <div *ngFor=\"let user of users\">\n            <div class=\"col\">\n                <div class=\"card mb-3 color\" data-bs-toggle=\"modal\" data-bs-target=\"#detailUserModal\" (click)=\"selectUser(users.indexOf(user))\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5\">\n                            <ng-container *ngIf=\"user.userPhoto; else imagesDiv\">\n                                <img class=\"image\" [src]=\"images[user.userId]\" alt=\"foto de usuario\">\n                            </ng-container>\n                            <ng-template #imagesDiv>\n                                <img class=\"image\" [src]=\"defaultImage\" alt=\"foto por defecto\">\n                            </ng-template>\n                        </div>\n                        <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7\">\n                            <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7\">\n                                <h5 class=\"title\">{{user.userLogin}}</h5>\n                                <p class=\"card-text\">\n                                    <a class=\"message\" aria-label=\"solicitud de amistad\">{{friends[user.userId]}}</a>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #usersDiv>\n       <p class=\"text\">NO EXISTEN USUARIOS</p>\n    </ng-template>\n</div>\n<div class=\"paginationDiv\">\n    <ul class=\"row pagination\">\n        <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"page!=0\"><a class=\"page-link previous\" aria-label=\"anterior\" (click)=\"setPage(-1)\">Anterior</a>\n        </li>\n        <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"page+1<totalPage\"><a class=\"page-link next\" aria-label=\"siguiente\" (click)=\"setPage(1)\">Siguiente</a>\n        </li>\n    </ul>\n</div>","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from \"../services/authentication.service\";\n/*\nEs un servicio injectable que devuelve true si el usuario puede acceder a una ruta o false si no puede.\n */\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n\tconstructor(private router: Router) {\n\t}\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n\t\tif (localStorage.getItem('currentUser')) {\n\t\t\tif (route.url.toString() == \"products\" && localStorage.getItem(\"products\") == undefined) {\n\t\t\t\tthis.router.navigate(['/events']);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (route.url.toString() == \"transactions\" && localStorage.getItem(\"transactions\") == undefined) {\n\t\t\t\tthis.router.navigate(['/events']);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (route.url.toString() != \"products\"){\n\t\t\t\tlocalStorage.removeItem(\"products\");\n\t\t\t}\n\t\t\tif (route.url.toString() != \"transactions\"){\n\t\t\t\tlocalStorage.removeItem(\"transactions\");\n\t\t\t}\n\n\t\t\tif (route.url.toString() != \"profile\"){\n\t\t\t\tlocalStorage.removeItem(\"profile\");\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tthis.router.navigate(['/login']);\n\n\t\treturn false;\n\t}\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n\tconstructor(public authenticationService: AuthenticationService) {}\n\n  /*\n  INTERCEPTOR -> tipo de servicio implementable que permite interceptar peticiones HTTP entrantes o salientes\n  utilizando HTTPClient. Al interceptar la solicitud HTTP, podemos modificar o cambiar el valor de la solicitud.\n  */\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tif (this.authenticationService.isGuest()) {\n\t\t\treturn next.handle(request);\n\t\t}\n\t\trequest = request.clone({\n\t\t\tsetHeaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\"Access-Control-Allow-Headers\": \"Content-Type\",\n\t\t\t\"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS,DELETE,PUT\",\n\t\t\tAuthorization: this.authenticationService.getAuthorizationHeader()\n\t\t\t}\n\t\t});\n\n\t\treturn next.handle(request);\n\t}\n}\n","//USUARIO AUTENTICADO\n\nexport class AuthUser {\n  private _authHeader: string;\n  private _authenticated: boolean;\n  private userLogin: string;\n  private userPassword: string;\n  private userEmail: string;\n  private roles: string;\n  private permissions: string;\n  private userId: number;\n  private userName: string;\n  private userSurname: string;\n  private userBirthday: string;\n  private userPhoto: string;\n  private userNotify: boolean;\n\n  constructor() {\n    const user: AuthUser = JSON.parse(<string>localStorage.getItem('currentUser'));\n    if (user != null) {\n      this.userId = user.userId;\n      this.userLogin = user.userLogin;\n      this.userPassword = user.userPassword;\n      this.userEmail = user.userEmail;\n      this._authenticated = user._authenticated;\n      this._authHeader = user._authHeader;\n      this.roles = user.roles;\n      this.permissions = user.permissions;\n      this.userName = user.userName;\n      this.userSurname = user.userSurname;\n      this.userBirthday = user.userBirthday;\n      this.userPhoto = user.userPhoto;\n      this.userNotify = user.userNotify;\n    } else {\n      this._authenticated = false;\n    }\n  }\n\n  get authHeader(): string {\n    return this._authHeader;\n  }\n\n  set authHeader(value: string) {\n    this._authHeader = value;\n  }\n\n  get authenticated(): boolean {\n    return this._authenticated;\n  }\n\n  set authenticated(value: boolean) {\n    this._authenticated = value;\n  }\n\n  get email(): string {\n    return this.userEmail;\n  }\n\n  set email(value: string) {\n    this.userEmail = value;\n  }\n\n  get name(): string {\n    return this.userName;\n  }\n\n  set name(value: string) {\n    this.userName = value;\n  }\n\n  get surname(): string {\n    return this.userSurname;\n  }\n\n  set surname(value: string) {\n    this.userSurname = value;\n  }\n\n  get birthday(): string {\n    return this.userBirthday;\n  }\n\n  set birthday(value: string) {\n    this.userBirthday = value;\n  }\n\n  get photo(): string {\n    return this.userPhoto;\n  }\n\n  set photo(value: string) {\n    this.userPhoto = value;\n  }\n\n  get login(): string {\n    return this.userLogin;\n  }\n\n  set login(value: string) {\n    this.userLogin = value;\n  }\n\n  get password(): string {\n    return this.userPassword;\n  }\n\n  set password(value: string) {\n    this.userPassword = value;\n  }\n\n  get rol(): string {\n    return this.roles;\n  }\n\n  set rol(value: string) {\n    this.roles = value;\n  }\n\n  get permission(): string {\n    return this.permissions;\n  }\n\n  set permission(value: string) {\n    this.permissions = value;\n  }\n\n  get id(): number {\n    return this.userId;\n  }\n\n  set id(value: number) {\n    this.userId = value;\n  }\n\n  get notify(): boolean {\n    return this.userNotify;\n  }\n\n  set notify(value: boolean) {\n    this.userNotify = value;\n  }\n\n  //ALMACENA AL USUARIO LOGGEADO ASOCIADO A LA CLAVE currentUser EN FORMATO JSON\n  public save() {\n    localStorage.setItem('currentUser', JSON.stringify(this));\n  }\n\n  //ELIMINA EL USUARIO LOGGEADO\n  public clear() {\n    localStorage.removeItem('currentUser');\n  }\n}","export class MEvent {\n    eventId: number;\n    eventName:string;\n    eventDescription:string;\n    eventStart:string;\n    eventEnd:string;\n    eventLocation:string;\n    eventPhoto:string;\n    eventOpen:boolean;\n    eventOwner:number;\n    eventActive: boolean;\n    eventCreation: Date;\n    eventRemoval: Date;\n\n}","export class MGroup {\n    groupId: number;\n    groupName: string;\n    groupDescription: string;\n    groupPhoto: string;\n    groupCreation: Date;\n    groupRemoval: Date;\n    groupOwner: number;\n    groupActive: boolean;\n}","export class MGroupMembers {\n    groupId: number;\n    groupName: string;\n    groupPhoto: string;\n    userId: number;\n    userLogin: string;\n    userPhoto: string;\n    disabled: boolean = false;\n}","export class MProduct {\n    productId: number;\n    productName: string;\n    productDescription: string;\n    productCost: number;\n    productQuantity: number;\n    productPhoto: string;\n    eventId: number;\n    productPurchaseDate: string;\n    productActive: boolean;\n    productCreation: Date;\n    productRemoval: Date;\n\n}","export class MRetrievePassword {\n    userEmail:string;\n    tokenPassword:string;\n    newPassword: string;\n}","export class MUser {\n    userId: number;\n    userName: string;\n    userSurname: string;\n    userLogin: string;\n    userPassword: string;\n    userEmail: string;\n    userBirthday: Date;\n    userPhoto: string;\n    roles: string;\n    permissions: string;\n    userActive: boolean;\n    userCreation: Date;\n    userRemoval: Date;\n    userNotify: boolean;\n}","export class MUserEvent {\n    userId: number;\n    eventId: number;\n    totalExpense: number;\n    debt: number;\n    accept: boolean;\n    userEventActive: boolean;\n    userEventRemoval: Date;\n    userEventCreation: Date;\n}","export class MUserUser {\n    userId: number;\n    friendId: number;\n    userUserActive: boolean;\n    userUserCreation: Date;\n    userUserRemoval: Date;\n    accept: boolean;\n}","export class MUserUserEvent {\n    senderId: number;\n    receiverId: number;\n    eventId: number;\n    confirmed: boolean;\n    cost: number;\n    paid: boolean;\n    userUserEventActive: boolean;\n    userUserEventCreation: Date;\n    userUserEventRemoval: Date;\n}","export class MVerifyEmail {\n    userEmail:string;\n    tokenPassword:string;\n}\n\n\n","import {catchError} from 'rxjs/operators';\nimport {MonoTypeOperatorFunction} from 'rxjs/internal/types';\nimport {throwError} from 'rxjs';\n\nexport class APachasError extends Error {\n\tpublic readonly summary: string;\n\tpublic readonly detail: string;\n\tpublic readonly cause?: Error;\n\n\tstatic throwOnError<T>(summary: string, detail: string): MonoTypeOperatorFunction<T> {\n\t\treturn catchError(\n\t\t\t(error: Error) => throwError(new APachasError(summary, detail, error))\n\t\t);\n\t}\n\n\tconstructor(summary: string, detail: string, cause?: Error) {\n\t\tsuper(detail);\n\n\t\tthis.summary = summary;\n\t\tthis.detail = detail;\n\t\tthis.cause = cause;\n\n\t\tObject.setPrototypeOf(this, APachasError.prototype);\n\t}\n}\n","export * from './error-message.model';\nexport * from './aPachas-error.model';\nexport * from './severity.model';\n","export enum Severity {\n\tSUCCESS = 'SUCCESS',\n\tINFO = 'INFO',\n\tWARNING = 'WARNING',\n\tERROR = 'ERROR'\n}","import { ErrorHandler, Injectable } from '@angular/core';\nimport { NotificationService } from '../services/notification.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { APachasError } from '../entities';\n\n@Injectable()\nexport class ErrorNotificationHandler implements ErrorHandler {\n\tconstructor(\n\t\tprivate notificationService: NotificationService\n\t\t) {\n\t\t}\n\n\tpublic handleError(error: Error | APachasError | HttpErrorResponse): void {\n\t\tif (console) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\t\tif (error instanceof APachasError) {\n\t\t\tconsole.log('CAUSE', error.cause);\n\t\t\tthis.notificationService.error(error.detail, error.summary);\n\t\t} else if (error instanceof HttpErrorResponse) {\n\t\t\tthis.notificationService.error(error.error, error.statusText);\n\t\t}\n\t}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NotificationService} from './services/notification.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tNotificationService\n\t],\n\tdeclarations: []\n})\nexport class NotificationModule {}","import {EventEmitter, Injectable} from '@angular/core';\nimport {ErrorMessage, Severity} from '../entities';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class NotificationService {\n\tprivate readonly messageEmitter: EventEmitter<ErrorMessage>;\n\n\tconstructor() {\n\t\tthis.messageEmitter = new EventEmitter<ErrorMessage>();\n\t}\n\n\tpublic getMessages(): Observable<ErrorMessage> {\n\t\treturn this.messageEmitter;\n\t}\n\n\tpublic success(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.SUCCESS, summary: summary, detail: detail\n\t\t});\n\t}\n\n\tpublic info(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.INFO, summary: summary, detail: detail\n\t\t});\n\t}\n\n\tpublic warning(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.WARNING, summary: summary, detail: detail\n\t\t});\n\t}\n\n\tpublic error(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.ERROR, summary: summary, detail: detail\n\t\t});\n\t}\n}"," import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {AuthUser} from '../models/AuthUser';\nimport {APachasError} from '../modules/notification/entities';\nimport {UserService} from \"./user.service\";\n import {NotificationService} from \"../modules/notification/services/notification.service\";\n\n//SERVICE -> Se encarga de acceder a los datos para entregarlos a los componentes\n@Injectable({\n  providedIn: 'root'\n})\n\n//ACCEDE A LOS DATOS NECESARIOS PARA LA AUTENTICACION\nexport class AuthenticationService {\n\n\tprivate user: AuthUser = new AuthUser();\n\n\tconstructor(private  http: HttpClient,  private userService: UserService,private notificationService: NotificationService) {}\n\n  //COMPRUEBA SI LAS CREDENCIALES SON CORRECTAS\n\tcheckCredentials(login: string, password: string) {\n\n\t\tthis.user.login = login;\n\t\tthis.user.password = password;\n\n\t\treturn this.http.post<void>(`${environment.restApi}/login`, {\n\t\t  \"username\": this.user.login,\n\t\t  \"password\": this.user.password\n\t\t}, {observe:\"response\" as \"body\", responseType: 'json'}\n\t\t)\n\t\t  .pipe(\n\t\t\tAPachasError.throwOnError('Failed to login', `User or password incorrect. Please try again.`)\n\t\t  );\n\t}\n\n  //CONFIGURA AL USUARIO LOGGEADO\n\tpublic logIn(login: string, password: string, authorization: string) {\n\t\tthis.user.login = login;\n\t\tthis.user.password = password;\n\t\tthis.user.authHeader = authorization;\n\t\tthis.user.authenticated = true;\n\t\tthis.setAuthUser(login);\n\t}\n\n\t//RECOGER OTROS DATOS DEL USUARIO Y COMPROBAR SI ESTA ACTIVO PARA AUTENTICAR\n\tpublic setAuthUser(login: string){\n\t\tthis.userService.getUser(login).subscribe((response) => {\n\t\t\tif (response.userActive){\n\t\t\t\tthis.user.id = response.userId;\n\t\t\t\tthis.user.email = response.userEmail;\n\t\t\t\tif (this.user.birthday !=null){\n\t\t\t\t\tthis.user.birthday = response.userBirthday.toString();\n\t\t\t\t}\n\t\t\t\tthis.user.name = response.userName;\n\t\t\t\tthis.user.surname = response.userSurname;\n\t\t\t\tthis.user.permission = response.permissions;\n\t\t\t\tthis.user.rol = response.roles;\n\t\t\t\tthis.user.photo = response.userPhoto;\n\t\t\t\tthis.user.notify = response.userNotify;\n\t\t\t\tthis.user.save();\n\t\t\t}else{\n\t\t\t\tthis.notificationService.warning(\"Activa tu cuenta con el email que has recibido en la cuenta proporcionada\",\"Cuenta no activada\");\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/*getEditUser(): AuthUser{\n\t\tthis.userService.getUserById(this.user.id).subscribe((response) => {\n\t\t\tthis.user.email = response.userEmail;\n\t\t\tthis.user.birthday = response.userBirthday.toString();\n\t\t\tthis.user.name = response.userName;\n\t\t\tthis.user.surname = response.userSurname;\n\t\t\tthis.user.permission = response.permissions;\n\t\t\tthis.user.rol = response.roles;\n\t\t\tthis.user.photo = response.userPhoto;\n\t\t\tthis.user.login = response.userLogin;\n\t\t\tthis.user.password = response.userPassword;\n\t\t\tthis.user.save();\n\t\t\treturn this.user;\n\t\t});\n\t\treturn null;\n\t}*/\n\n\t//CIERRE DE SESION\n\tpublic logOut() {\n\t\tthis.user.clear();\n\t\tthis.user = new AuthUser();\n\t}\n\n\t//CABECERA DE LA AUTORIZACION => TOKEN\n\tpublic getAuthorizationHeader(): string {\n\t\treturn this.getUser().authHeader;\n\t}\n\n\t//DEVUELVE EL USUARIO AUTENTICADO\n\tpublic getUser(): AuthUser {\n\t\treturn this.user;\n\t}\n\n\t//COMPRUEBA SI ES UN INVITADO\n\tpublic isGuest(): boolean {\n\t\treturn !this.user.authenticated;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {MEvent} from \"../models/MEvent\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {Event} from \"./entities/Event\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EventService {\n\n    constructor(private http: HttpClient) { }\n\n    createEvent(mEvent: MEvent): Observable<number> {\n        return this.http.post<number>(`${environment.restApi}/events`,{\n            \"eventId\": mEvent.eventId,\n            \"eventName\":mEvent.eventName,\n            \"eventDescription\":mEvent.eventDescription,\n            \"eventStart\": mEvent.eventStart,\n            \"eventEnd\": mEvent.eventEnd,\n            \"eventLocation\":mEvent.eventLocation,\n            \"eventPhoto\":mEvent.eventPhoto,\n            \"eventOpen\": \"\",\n            \"eventOwner\":mEvent.eventOwner,\n            \"eventActive\": \"\",\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al crear el evento', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editEvent(mEvent: MEvent): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/events`,{\n            \"eventId\": mEvent.eventId,\n            \"eventName\":mEvent.eventName,\n            \"eventDescription\":mEvent.eventDescription,\n            \"eventStart\": mEvent.eventStart,\n            \"eventEnd\": mEvent.eventEnd,\n            \"eventLocation\":mEvent.eventLocation,\n            \"eventPhoto\":mEvent.eventPhoto,\n            \"eventOpen\":mEvent.eventOpen,\n            \"eventOwner\":mEvent.eventOwner,\n            \"eventActive\": mEvent.eventActive,\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el evento', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editOpen(eventId: number, open: boolean): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/events/open/${eventId}`, open)\n            .pipe(\n                APachasError.throwOnError('Fallo al cerrar el evento', `Por favor, inténtelo de nuevo más tarde.`)\n            );\n    }\n\n    deleteEvent(eventId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/events/${eventId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar el evento', `Por favor, inténtelo de nuevo más tarde.`)\n        );\n    }\n\n    getEvent(eventId: number):Observable<MEvent>{\n        return this.http.get<Event>(`${environment.restApi}/events/${eventId}`).pipe(\n            map(this.mapEvent.bind(this))\n        );\n    }\n\n    private mapEvent(event: Event) : MEvent {\n        return {\n            eventId: event.eventId,\n            eventName:event.eventName,\n            eventDescription:event.eventDescription,\n            eventStart: event.eventStart,\n            eventEnd: event.eventEnd,\n            eventLocation:event.eventLocation,\n            eventPhoto:event.eventPhoto,\n            eventOpen:event.eventOpen,\n            eventOwner:event.eventOwner,\n            eventActive: event.eventActive,\n            eventCreation: event.eventCreation,\n            eventRemoval: event.eventRemoval\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MGroup} from \"../models/MGroup\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroupService {\n\n    constructor(private http: HttpClient) { }\n\n    createGroup(mGroup: MGroup): Observable<number> {\n        return this.http.post<number>(`${environment.restApi}/groups`,{\n            \"groupId\":mGroup.groupId,\n            \"groupName\": mGroup.groupName,\n            \"groupDescription\": mGroup.groupDescription,\n            \"groupPhoto\": mGroup.groupPhoto,\n            \"groupCreation\":\"\",\n            \"groupRemoval\": \"\",\n            \"groupOwner\": mGroup.groupOwner,\n            \"groupActive\": true\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al crear el grupo', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editGroup(mGroup: MGroup): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/groups`,{\n            \"groupId\":mGroup.groupId,\n            \"groupName\": mGroup.groupName,\n            \"groupDescription\": mGroup.groupDescription,\n            \"groupPhoto\": mGroup.groupPhoto,\n            \"groupCreation\":\"\",\n            \"groupRemoval\": \"\",\n            \"groupOwner\": mGroup.groupOwner,\n            \"groupActive\": null\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el grupo', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    deleteGroup(groupId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/groups/${groupId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar grupo', `Por favor, inténtelo de nuevo más tarde.`)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\nimport {map} from \"rxjs/operators\";\nimport {MGroup} from \"../models/MGroup\";\nimport {Group} from \"./entities/Group\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroupUserService {\n\n    constructor(private http: HttpClient) { }\n\n    getPageableMembers(groupId: number, page:number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/groupsUsers/pageable/members/${groupId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    getMembers(groupId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/groupsUsers/${groupId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    countMembers(groupId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/members/${groupId}`).pipe(\n            APachasError.throwOnError('Fallo al contar los integrantes del grupo', `Por favor, inténtelo de nuevo más tarde.`)\n        );\n    }\n\n    createGroupUser(groupId: any, userId: number): Observable<void> {\n        return this.http.post<void>(`${environment.restApi}/groupsUsers`,{\n            \"groupId\":groupId,\n            \"userId\": userId,\n            \"groupUserCreation\": \"\",\n            \"groupUserRemoval\": \"\",\n            \"groupUserActive\": true\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir integrantes al grupo', `Por favor, inténtelo de nuevo más tarde.`)\n            );\n    }\n\n    editGroupUser(groupId: number, userIds: number[]): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/groupsUsers/${groupId}`,userIds)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar integrantes del grupo', `Por favor, inténtelo de nuevo más tarde.`)\n            );\n    }\n\n    deleteGroupUser(groupId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/groupsUsers/${groupId}/${userId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar miembro del grupo', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    getPageableSearchGroups(groupName: string, authId: number, page: number, size: number): Observable<MGroup[]>{\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/pageable/${groupName}/${authId}?page=${page}&size=${size}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    countSearchGroups(groupName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/${authId}/${groupName}`);\n    }\n\n    countGroups(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/${authId}`);\n    }\n\n    getPageableGroups(groupId: number, page: number, size: number): Observable<MGroup[]> {\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/pageable/${groupId}?page=${page}&size=${size}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    countMutualGroups(userId: number, authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/mutual/${userId}/${authId}`);\n    }\n\n    getPageableMutualGroups(userId: number, authId: number, page: number, size: number): Observable<MGroup[]>{\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/pageable/mutual/${userId}/${authId}?page=${page}&size=${size}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    getGroups(authId: number): Observable<MGroup[]>{\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/groups/${authId}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userCreation: user.userCreation,\n            userRemoval: user.userRemoval,\n            userActive: user.userActive,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapGroup(group: Group) : MGroup {\n        return {\n            groupId: group.groupId,\n            groupName: group.groupName,\n            groupDescription: group.groupDescription,\n            groupPhoto: group.groupPhoto,\n            groupCreation: group.groupCreation,\n            groupRemoval: group.groupRemoval,\n            groupOwner: group.groupOwner,\n            groupActive: group.groupActive\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MProduct} from \"../models/MProduct\";\nimport {Group} from \"./entities/Group\";\nimport {map} from \"rxjs/operators\";\nimport {Product} from \"./entities/Product\";\nimport {MEvent} from \"../models/MEvent\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    event: MEvent;\n    constructor(private http: HttpClient) { }\n\n    createProduct(mProduct: MProduct): Observable<number> {\n        return this.http.post<number>(`${environment.restApi}/products`,{\n            \"productId\": mProduct.productId,\n            \"productName\":mProduct.productName,\n            \"productDescription\":mProduct.productDescription,\n            \"productPurchaseDate\": mProduct.productPurchaseDate,\n            \"productCost\":mProduct.productCost,\n            \"productQuantity\":mProduct.productQuantity,\n            \"productPhoto\": mProduct.productPhoto,\n            \"eventId\": mProduct.eventId,\n            \"eventActive\": \"\",\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al crear el producto', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editProduct(mProduct: MProduct): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/products`,{\n            \"productId\": mProduct.productId,\n            \"productName\":mProduct.productName,\n            \"productDescription\":mProduct.productDescription,\n            \"productPurchaseDate\": mProduct.productPurchaseDate,\n            \"productCost\":mProduct.productCost,\n            \"productQuantity\":mProduct.productQuantity,\n            \"productPhoto\": mProduct.productPhoto,\n            \"eventId\": mProduct.eventId,\n            \"eventActive\": \"\",\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el producto', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n            );\n    }\n\n    deleteProduct(productId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/products/${productId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar producto', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    getPageableSearchProducts(productName: string, eventId: number, page: number, size: number): Observable<MProduct[]>{\n        return this.http.get<Product[]>(`${environment.restApi}/products/pageable/${productName}/${eventId}?page=${page}&size=${size}`).pipe(\n            map(products => products.map(this.mapProduct.bind(this)))\n        );\n    }\n\n    countSearchProducts(productName: string, eventId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/products/count/${productName}/${eventId}`);\n    }\n\n    countProducts(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/products/count/${eventId}`);\n    }\n\n    sumTotalProductCost(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/products/sum/${eventId}`);\n    }\n\n    getPageableProducts(eventId: number, page: number, size: number): Observable<MProduct[]> {\n        return this.http.get<Group[]>(`${environment.restApi}/products/pageable/${eventId}?page=${page}&size=${size}`).pipe(\n            map(products => products.map(this.mapProduct.bind(this)))\n        );\n    }\n\n    getProducts(eventId: number): Observable<MProduct[]> {\n        return this.http.get<Group[]>(`${environment.restApi}/products/${eventId}`).pipe(\n            map(products => products.map(this.mapProduct.bind(this)))\n        );\n    }\n\n    getAllProductsPartakers(eventId: number): Observable<boolean> {\n        return this.http.get<boolean>(`${environment.restApi}/products/allProductsPartakers/${eventId}`);\n    }\n\n    private mapProduct(product: Product) : MProduct {\n        return {\n            productId: product.productId,\n            productName: product.productName,\n            productDescription: product.productDescription,\n            productPhoto: product.productPhoto,\n            productQuantity: product.productQuantity,\n            productCost: product.productCost,\n            eventId: product.eventId,\n            productPurchaseDate: product.productPurchaseDate,\n            productCreation: product.productCreation,\n            productRemoval: product.productRemoval,\n            productActive: product.productActive\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {User} from \"./entities/User\";\nimport {map} from \"rxjs/operators\";\nimport {MUser} from \"../models/MUser\";\nimport {AuthUser} from \"../models/AuthUser\";\nimport {MVerifyEmail} from \"../models/MVerifyEmail\";\nimport {MRetrievePassword} from \"../models/MRetrievePassword\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getPageableUsers(authId: number, page: number, size: number): Observable<MUser[]>{\n    return this.http.get<User[]>(`${environment.restApi}/users/pageable/${authId}?page=${page}&size=${size}`).pipe(\n        map(users => users.map(this.mapUser.bind(this)))\n    );\n  }\n\n  getPageableSearchUsers(userLogin: string, authId: number, page: number, size: number): Observable<MUser[]>{\n    return this.http.get<User[]>(`${environment.restApi}/users/pageable/${userLogin}/${authId}?page=${page}&size=${size}`).pipe(\n        map(users => users.map(this.mapUser.bind(this)))\n    );\n  }\n\n  countUsers(authId: number): Observable<number> {\n    return this.http.get<number>(`${environment.restApi}/users/count/${authId}`);\n  }\n\n  countSearchUsers(userLogin: string, authId: number): Observable<number> {\n    return this.http.get<number>(`${environment.restApi}/users/count/${userLogin}/${authId}`);\n  }\n\n  getUser(userLogin: string): Observable<MUser>{\n    return this.http.get<User>(`${environment.restApi}/users/${userLogin}`).pipe(\n        map(this.mapUser.bind(this))\n    );\n  }\n\n  getUserById(userId: number): Observable<MUser>{\n    return this.http.get<User>(`${environment.restApi}/users/authUser/${userId}`).pipe(\n        map(this.mapUser.bind(this))\n    );\n  }\n\n  getToken(userEmail: string): Observable<boolean>{\n    return this.http.put<boolean>(`${environment.restApi}/users/token`,userEmail);\n  }\n\n  loginAvailable(login: string): Observable<boolean>{\n    return this.http.get<boolean>(`${environment.restApi}/users/available/${login}`);\n  }\n\n  editUser(authUser: AuthUser): Observable<void> {\n    return this.http.put<void>(`${environment.restApi}/users`,{\n      \"userId\": authUser.id,\n      \"userName\": authUser.name,\n      \"userSurname\": authUser.surname,\n      \"userLogin\": authUser.login,\n      \"userPassword\": authUser.password,\n      \"userBirthday\": authUser.birthday,\n      \"userPhoto\": authUser.photo,\n      \"roles\": \"\",\n      \"userEmail\": \"\",\n      \"permissions\": \"\",\n      \"userCreation\": \"\",\n      \"userRemoval\": \"\",\n      \"userActive\": \"\"\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al editar el usuario', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n\n  createUser(mUser: MUser): Observable<void> {\n\n    return this.http.post<void>(`${environment.restApi}/users`,{\n      \"userName\": mUser.userName,\n      \"userSurname\": mUser.userSurname,\n      \"userLogin\": mUser.userLogin,\n      \"userPassword\": mUser.userPassword,\n      \"userEmail\": mUser.userEmail,\n      \"userBirthday\": \"\",\n      \"userPhoto\": null,\n      \"roles\": \"USER\",\n      \"permissions\": \"\",\n      \"userCreation\": \"\",\n      \"userRemoval\": \"\",\n      \"userActive\": true\n    })\n      .pipe(\n        APachasError.throwOnError('Fallo en el registro', `Los datos del formulario son incorrectos o el usuario ya existe. Por favor, inténtelo de nuevo`)\n      );\n  }\n\n  sendRetrievePassword(mUser: MUser): Observable<void>{\n    return this.http.put<void>(`${environment.restApi}/users/sendRetrievePasswordEmail`, {\n      \"userEmail\": mUser.userEmail\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al enviar email', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n\n  verifyUser(mVerifyEmail: MVerifyEmail): Observable<void> {\n    return this.http.put<void>(`${environment.restApi}/users/verify`, {\n      \"userEmail\": mVerifyEmail.userEmail,\n      \"tokenPassword\": mVerifyEmail.tokenPassword\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al activar el usuario', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n\n  retrievePassword(mRetrievePassword: MRetrievePassword): Observable<void> {\n    return this.http.put<void>(`${environment.restApi}/users/retrievePassword`, {\n      \"userEmail\": mRetrievePassword.userEmail,\n      \"tokenPassword\": mRetrievePassword.tokenPassword,\n      \"newPassword\": mRetrievePassword.newPassword\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al activar el usuario', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n  private mapUser(user: User) : MUser {\n    return {\n      userId: user.userId,\n      userName: user.userName,\n      userSurname: user.userSurname,\n      userLogin: user.userLogin,\n      userPassword: user.userPassword,\n      userEmail: user.userEmail,\n      userBirthday: user.userBirthday,\n      userPhoto: user.userPhoto,\n      roles: user.roles,\n      permissions: user.permissions,\n      userActive: user.userActive,\n      userRemoval: user.userRemoval,\n      userCreation: user.userCreation,\n      userNotify: user.userNotify\n    }\n  }\n\n}\n","import {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {MEvent} from \"../models/MEvent\";\nimport {Event} from \"./entities/Event\";\nimport {map} from \"rxjs/operators\";\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {UserEvent} from \"./entities/UserEvent\";\nimport {MUserEvent} from \"../models/MUserEvent\";\nimport {AuthenticationService} from \"./authentication.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserEventService {\n\n    constructor(private http: HttpClient,\n                private authenticationService: AuthenticationService) {\n    }\n\n    countMutualEvents(userId: number, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/mutual/${userId}/${authId}`);\n    }\n\n    getNotifications(authId: number): Observable<string[]> {\n        if (authId != undefined){\n            return this.http.get<string[]>(`${environment.restApi}/usersEvents/notifications/${authId}`);\n        }\n    }\n\n    getPageableMutualEvents(userId: number, authId: number, page: number, size: number): Observable<MEvent[]> {\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/mutual/${userId}/${authId}?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageableSearchEvents(eventName: string, authId: number, page: number, size: number): Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/events/${eventName}/${authId}/?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageableSearchEventsWithFinished(eventName: string, authId: number, page: number, size: number): Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/withFinished/${eventName}/${authId}/?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    countSearchEvents(eventName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/events/${eventName}/${authId}`);\n    }\n\n    countSearchEventsWithFinished(eventName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/withFinished/${eventName}/${authId}`);\n    }\n\n    countEvents(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/events/${authId}`);\n    }\n\n    sumTotalEventExpense(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/sum/${eventId}`);\n    }\n\n    countEventsWithFinished(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/withFinished/${authId}`);\n    }\n\n    getPageableEvents(authId: number, page: number, size: number): Observable<MEvent[]> {\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/events/${authId}?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageableEventsWithFinished(authId: number, page: number, size: number): Observable<MEvent[]> {\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/withFinished/${authId}?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageablePartakers(eventId: number, page:number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersEvents/pageable/partakers/${eventId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    countPartakers(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/partakers/${eventId}`);\n    }\n\n    deleteUserEvent(eventId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/usersEvents/${eventId}/${userId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar participante del evento', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    createUserEvent(eventId: any, userId: number): Observable<void> {\n        let accept = false;\n        if (userId == this.authenticationService.getUser().id){\n            accept = true;\n        }\n        return this.http.post<void>(`${environment.restApi}/usersEvents`,{\n            \"eventId\":eventId,\n            \"userId\": userId,\n            \"accept\": accept,\n            \"debt\": 0,\n            \"totalExpense\": 0,\n            \"userEventActive\": true,\n            \"userEventCreation\": \"\",\n            \"userEventRemoval\":\"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir participantes al evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editUserEvent(eventId: number, userIds: number[]): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/usersEvents/${eventId}`,userIds)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar participantes del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editTotalExpense(mUserEvent: MUserEvent): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersEvents/totalExpense/${mUserEvent.eventId}/${mUserEvent.userId}`, mUserEvent.totalExpense)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el dinero aportado por el participante autenticado del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editDebt(eventId: number, userId: number, userDebt: number): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersEvents/debt/${eventId}/${userId}`, userDebt)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el dinero que debe el participante del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editStatus(eventId: number, authId: number): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersEvents/status/${eventId}`, authId)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el estado de los participantes del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    getPartakers(eventId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersEvents/${eventId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    getUserEvent(eventId: number, userId: number): Observable<MUserEvent>{\n        return this.http.get<UserEvent>(`${environment.restApi}/usersEvents/${eventId}/${userId}`).pipe(\n            map(this.mapUserEvent.bind(this))\n        );\n    }\n\n    getPageableUserEvents(eventId: number, page: number, size: number): Observable<MUserEvent[]>{\n        return this.http.get<UserEvent[]>(`${environment.restApi}/usersEvents/pageable/${eventId}/?page=${page}&size=${size}`).pipe(\n            map(userEvents => userEvents.map(this.mapUserEvent.bind(this)))\n        );\n    }\n\n    countUserEvents(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/${eventId}`);\n    }\n\n    getPageableSearchUserEvents(userName: string, eventId: number, page: number, size: number): Observable<MUserEvent[]>{\n        return this.http.get<UserEvent[]>(`${environment.restApi}/usersEvents/pageable/${userName}/${eventId}/?page=${page}&size=${size}`).pipe(\n            map(userEvents => userEvents.map(this.mapUserEvent.bind(this)))\n        );\n    }\n\n    countSearchUserEvents(userName: string, eventId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/${userName}/${eventId}`);\n    }\n\n    getOpenEvents(authId: number):Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/events/open/${authId}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getClosedEvents(authId: number):Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/events/closed/${authId}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n\n\n    private mapEvent(event: Event) : MEvent {\n        return {\n            eventId: event.eventId,\n            eventName:event.eventName,\n            eventDescription:event.eventDescription,\n            eventStart: event.eventStart,\n            eventEnd: event.eventEnd,\n            eventLocation:event.eventLocation,\n            eventPhoto:event.eventPhoto,\n            eventOpen:event.eventOpen,\n            eventOwner:event.eventOwner,\n            eventActive: event.eventActive,\n            eventCreation: event.eventCreation,\n            eventRemoval: event.eventRemoval\n        }\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userActive: user.userActive,\n            userRemoval: user.userRemoval,\n            userCreation: user.userCreation,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapUserEvent(userEvent: UserEvent) : MUserEvent {\n        return {\n            userId: userEvent.userId,\n            eventId: userEvent.eventId,\n            totalExpense: userEvent.totalExpense,\n            debt: userEvent.debt,\n            accept: userEvent.accept,\n            userEventActive: userEvent.userEventActive,\n            userEventRemoval: userEvent.userEventRemoval,\n            userEventCreation: userEvent.userEventCreation\n        }\n    }\n}","import {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {AuthenticationService} from \"./authentication.service\";\nimport {UserProduct} from \"./entities/UserProduct\";\nimport {MUserProduct} from \"../models/MUserProduct\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserProductService {\n\n    constructor(private http: HttpClient,\n                private authenticationService: AuthenticationService) {\n    }\n\n    getPageablePartakers(productId: number, page:number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersProducts/pageable/partakers/${productId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    getPartakers(productId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersProducts/partakers/${productId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    countPartakers(productId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersProducts/count/partakers/${productId}`);\n    }\n\n    deleteUserProduct(productId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/usersProducts/${productId}/${userId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar participante del producto', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    createUserProduct(productId: any, userId: number): Observable<void> {\n        let accept = false;\n        if (userId == this.authenticationService.getUser().id){\n            accept = true;\n        }\n        return this.http.post<void>(`${environment.restApi}/usersProducts`,{\n            \"productId\":productId,\n            \"userId\": userId,\n            \"accept\": accept,\n            \"userProductActive\": true,\n            \"userProductCreation\": \"\",\n            \"userProductRemoval\":\"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir participantes al producto', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editUserProduct(productId: number, authId: number): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/usersProducts`,{\n            \"productId\": productId,\n            \"userId\": authId,\n            \"userProductActive\":true,\n            \"userProductCreation\": \"\",\n            \"userProductRemoval\":\"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar participantes del producto', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n            );\n    }\n\n    getUserProduct(productId: number, userId: number): Observable<MUserProduct>{\n        return this.http.get<UserProduct>(`${environment.restApi}/usersProducts/${productId}/${userId}`).pipe(\n            map(this.mapUserProduct.bind(this))\n        );\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userActive: user.userActive,\n            userRemoval: user.userRemoval,\n            userCreation: user.userCreation,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapUserProduct(userProduct: UserProduct) : MUserProduct {\n        return {\n            productId: userProduct.productId,\n            userId: userProduct.userId,\n            userProductActive: userProduct.userProductActive,\n            userProductRemoval: userProduct.userProductRemoval,\n            userProductCreation: userProduct.userProductCreation\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {User} from \"./entities/User\";\nimport {MUser} from \"../models/MUser\";\nimport {UserUser} from \"./entities/UserUser\";\nimport {MUserUser} from \"../models/MUserUser\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserUserService {\n\n    constructor(private http: HttpClient) { }\n\n    getUserUser(friendId: number, userId: number): Observable<MUserUser> {\n        return this.http.get<UserUser>(`${environment.restApi}/usersUsers/${friendId}/${userId}`).pipe(\n            map(this.mapUserUser.bind(this))\n        );\n    }\n\n    getNotifications(authId: number): Observable<string[]> {\n        return this.http.get<string[]>(`${environment.restApi}/usersUsers/notifications/${authId}`);\n    }\n\n    getDeletedUserUser(friendId: number, userId: number): Observable<MUserUser> {\n        return this.http.get<UserUser>(`${environment.restApi}/usersUsers/deleted/${friendId}/${userId}`).pipe(\n            map(this.mapUserUser.bind(this))\n        );\n    }\n\n    getFriends(userId: number): Observable<MUser[]> {\n        return this.http.get<User[]>(`${environment.restApi}/usersUsers/${userId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    createUserUser(mUserUser: MUserUser): Observable<void> {\n        return this.http.post<void>(`${environment.restApi}/usersUsers`,{\n            \"friendId\":mUserUser.friendId,\n            \"userId\": mUserUser.userId,\n            \"accept\": false,\n            \"userUserCreation\": \"\",\n            \"userUserRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo en la solicitud de amistad o solicitud ya enviada', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editUserUser(mUserUser: MUserUser): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/usersUsers`,{\n            \"friendId\":mUserUser.friendId,\n            \"userId\": mUserUser.userId,\n            \"accept\": mUserUser.accept,\n            \"userUserActive\": true,\n            \"userUserCreation\": \"\",\n            \"userUserRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al aceptar la solicitud', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n            );\n    }\n\n    deleteUserUser(friendId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/usersUsers/${friendId}/${userId}`);\n    }\n\n    countMutualFriends(userId: number, authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsers/count/mutual/${userId}/${authId}`);\n    }\n\n    getPageableMutualFriends(userId: number, authId: number, page: number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersUsers/pageable/mutual/${userId}/${authId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userCreation: user.userCreation,\n            userRemoval: user.userRemoval,\n            userActive: user.userActive,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapUserUser(userUser: UserUser) : MUserUser {\n        if (userUser != null){\n            return {\n                userId: userUser.userId,\n                friendId: userUser.friendId,\n                userUserActive: userUser.userUserActive,\n                userUserCreation: userUser.userUserCreation,\n                userUserRemoval: userUser.userUserRemoval,\n                accept: userUser.accept\n            }\n        }else{\n            return null;\n        }\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {UserUserEvent} from \"./entities/UserUserEvent\";\nimport {MUserUserEvent} from \"../models/MUserUserEvent\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserUserEventService {\n\n    constructor(private http: HttpClient) { }\n\n    createUserUserEvent(eventId: any): Observable<void> {\n        return this.http.post<void>(`${environment.restApi}/usersUsersEvents`, eventId)\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir transacciones', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    getPageableUserUserEventsByEvent(eventId: number, page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byEvent/${eventId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPartakers(authId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersUsersEvents/partakers/${authId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    editPaid(transaction: MUserUserEvent, paid: boolean): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersUsersEvents/paid/${transaction.eventId}/${transaction.senderId}/${transaction.receiverId}`, paid)\n            .pipe(\n                APachasError.throwOnError('Fallo al actualizar el pago', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editConfirmed(transaction: MUserUserEvent, confirmed: boolean): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersUsersEvents/confirmed/${transaction.eventId}/${transaction.senderId}/${transaction.receiverId}`, confirmed)\n            .pipe(\n                APachasError.throwOnError('Fallo al actualizar la confirmación', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    getPageableUserUserEventsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsDebtsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/debts/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsDebtsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/debts/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsPaymentsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/payments/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsPaymentsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/payments/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsDebtsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/debts/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsDebtsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/debts/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsPaymentsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/payments/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsPaymentsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/payments/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsDebtsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/debts/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsPaymentsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/payments/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsDebtsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/debts/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsPaymentsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/payments/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    countUserUserEventsByEvent(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byEvent/${eventId}`);\n    }\n\n    countUserUserEventsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byAuthUser/${authId}`);\n    }\n\n    countUserUserEventsDebtsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/debts/byAuthUser/${authId}`);\n    }\n\n    countUserUserEventsPaymentsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/payments/byAuthUser/${authId}`);\n    }\n\n    countFinishedUserUserEventsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/finished/byAuthUser/${authId}`);\n    }\n\n    countFinishedUserUserEventsDebtsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/finished/debts/byAuthUser/${authId}`);\n    }\n\n    countFinishedUserUserEventsPaymentsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/finished/payments/byAuthUser/${authId}`);\n    }\n\n    getPageableSearchUserUserEventsByEvent(transactionActorName: string, eventId: number, page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byEvent/${transactionActorName}/${eventId}/?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableSearchUserUserEventsByAuthUser(transactionActorName: string, authId: number, page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${transactionActorName}/${authId}/?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    countSearchUserUserEventsByEvent(transactionActorName: string, eventId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byEvent/${transactionActorName}/${eventId}`);\n    }\n\n\n    countSearchUserUserEventsByAuthUser(transactionActorName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byAuthUser/${transactionActorName}/${authId}`);\n    }\n\n    private mapUserUserEvent(userUserEvent: UserUserEvent) : MUserUserEvent {\n        return {\n            senderId: userUserEvent.senderId,\n            receiverId: userUserEvent.receiverId,\n            eventId: userUserEvent.eventId,\n            confirmed: userUserEvent.confirmed,\n            cost: userUserEvent.cost,\n            paid: userUserEvent.paid,\n            userUserEventActive: userUserEvent.userUserEventActive,\n            userUserEventRemoval: userUserEvent.userUserEventRemoval,\n            userUserEventCreation: userUserEvent.userUserEventCreation\n        }\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userActive: user.userActive,\n            userRemoval: user.userRemoval,\n            userCreation: user.userCreation,\n            userNotify: user.userNotify\n        }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  restApi: 'https://apachas-api.up.railway.app'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 30546;\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"sourceRoot":"webpack:///"}