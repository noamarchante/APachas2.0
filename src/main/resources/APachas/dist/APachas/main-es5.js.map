{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/authUser/email/retrievePassword/retrievePassword.component.html","webpack:///src/app/components/authUser/email/retrievePassword/retrievePassword.component.ts","webpack:///src/app/components/authUser/email/verifyEmail/verifyEmail.component.ts","webpack:///src/app/components/authUser/email/verifyEmail/verifyEmail.component.html","webpack:///src/app/components/authUser/login/login/login.component.html","webpack:///src/app/components/authUser/login/login/login.component.ts","webpack:///src/app/components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component.html","webpack:///src/app/components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component.ts","webpack:///src/app/components/authUser/paypal/paypal.component.html","webpack:///src/app/components/authUser/paypal/paypal.component.ts","webpack:///src/app/components/authUser/profile/detailProfile/detailProfile.component.html","webpack:///src/app/components/authUser/profile/detailProfile/detailProfile.component.ts","webpack:///src/app/components/authUser/profile/editProfile/editProfile.component.html","webpack:///src/app/components/authUser/profile/editProfile/editProfile.component.ts","webpack:///src/app/components/authUser/register/register.component.html","webpack:///src/app/components/authUser/register/register.component.ts","webpack:///src/app/components/authUser/transactionHistory/transactionHistory.component.html","webpack:///src/app/components/authUser/transactionHistory/transactionHistory.component.ts","webpack:///src/app/components/confirm/messageConfirm.component.ts","webpack:///src/app/components/confirm/messageConfirm.component.html","webpack:///src/app/components/events/createEvent/createEvent.component.html","webpack:///src/app/components/events/createEvent/createEvent.component.ts","webpack:///src/app/components/events/detailEvent/detailEvent.component.html","webpack:///src/app/components/events/detailEvent/detailEvent.component.ts","webpack:///src/app/components/events/listEvents/listEvents.component.html","webpack:///src/app/components/events/listEvents/listEvents.component.ts","webpack:///src/app/components/groups/createGroup/createGroup.component.html","webpack:///src/app/components/groups/createGroup/createGroup.component.ts","webpack:///src/app/components/groups/detailGroup/detailGroup.component.html","webpack:///src/app/components/groups/detailGroup/detailGroup.component.ts","webpack:///src/app/components/groups/listGroups/listGroups.component.html","webpack:///src/app/components/groups/listGroups/listGroups.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/products/createProduct/createProduct.component.html","webpack:///src/app/components/products/createProduct/createProduct.component.ts","webpack:///src/app/components/products/createUserEventExpense/createUserEventExpense.component.html","webpack:///src/app/components/products/createUserEventExpense/createUserEventExpense.component.ts","webpack:///src/app/components/products/detailProduct/detailProduct.component.html","webpack:///src/app/components/products/detailProduct/detailProduct.component.ts","webpack:///src/app/components/products/listProducts/listProducts.component.html","webpack:///src/app/components/products/listProducts/listProducts.component.ts","webpack:///src/app/components/transactions/listTransactions.component.html","webpack:///src/app/components/transactions/listTransactions.component.ts","webpack:///src/app/components/users/detailUser/detailUser.component.html","webpack:///src/app/components/users/detailUser/detailUser.component.ts","webpack:///src/app/components/users/listUsers/listUsers.component.html","webpack:///src/app/components/users/listUsers/listUsers.component.ts","webpack:///src/app/guards/authGuard.ts","webpack:///src/app/helpers/authentication.interceptor.ts","webpack:///src/app/models/AuthUser.ts","webpack:///src/app/models/MEvent.ts","webpack:///src/app/models/MGroup.ts","webpack:///src/app/models/MGroupMembers.ts","webpack:///src/app/models/MProduct.ts","webpack:///src/app/models/MRetrievePassword.ts","webpack:///src/app/models/MUser.ts","webpack:///src/app/models/MUserEvent.ts","webpack:///src/app/models/MUserUser.ts","webpack:///src/app/models/MUserUserEvent.ts","webpack:///src/app/models/MVerifyEmail.ts","webpack:///src/app/modules/notification/entities/aPachas-error.model.ts","webpack:///src/app/modules/notification/entities/severity.model.ts","webpack:///src/app/modules/notification/handlers/error-notification.handler.ts","webpack:///src/app/modules/notification/notification.module.ts","webpack:///src/app/modules/notification/services/notification.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/group.service.ts","webpack:///src/app/services/groupUser.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/userEvent.service.ts","webpack:///src/app/services/userProduct.service.ts","webpack:///src/app/services/userUser.service.ts","webpack:///src/app/services/userUserEvent.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///node_modules/@angular/compiler-cli/src/diagnostics|sync","webpack:///node_modules/moment/locale|sync|/^/.*$"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","HomeComponent","LoginComponent","RegisterComponent","ListUsersComponent","canActivate","AuthGuard","CreateGroupComponent","ListGroupsComponent","DetailGroupComponent","DetailUserComponent","MessageConfirmComponent","ListEventsComponent","DetailEventComponent","CreateEventComponent","CreateProductComponent","ListProductsComponent","DetailProductComponent","CreateUserEventExpenseComponent","ListTransactionsComponent","DetailProfileComponent","EditProfileComponent","VerifyEmailComponent","RetrievePasswordComponent","RetrievePasswordEmailComponent","TransactionHistoryComponent","PaypalComponent","redirectTo","pathMatch","AppRoutingModule","RouterModule","useHash","anchorScrolling","AppComponent","notificationService","notificationsService","authenticationService","router","userEventService","userUserService","title","defaultImage","notifications","badge","getMessages","subscribe","message","severity","Severity","error","summary","detail","success","info","warn","getEventNotifications","getNotifications","getUser","response","forEach","eventName","push","setBadge","getUserNotifications","userLogin","length","logOut","navigateByUrl","registerLocaleData","AppModule","provide","ErrorHandler","useClass","ErrorNotificationHandler","HTTP_INTERCEPTORS","AuthenticationInterceptor","multi","LOCALE_ID","useValue","BrowserModule","FormsModule","NgSelectModule","HttpClientModule","NotificationModule","BrowserAnimationsModule","CalendarModule","DateAdapter","useFactory","adapterFactory","SimpleNotificationsModule","timeOut","preventDuplicates","pauseOnHover","clickToClose","Daterangepicker","NgxPayPalModule","userService","activatedRoute","mRetrievePassword","MRetrievePassword","password","passwordConfirm","messageColor","hidden","token","userEmail","snapshot","queryParams","tokenPassword","getToken","getMessage","newPassword","retrievePassword","goodRequest","mVerifyEmail","MVerifyEmail","verifyEmail","verifyUser","route","params","checkCredentials","login","s","logIn","headers","get","localStorage","getItem","undefined","removeItem","mUser","MUser","email","sendRetrievePassword","document","getElementById","click","closeModal","onSubmit","paidFor","product","price","description","test","paypal","Buttons","createOrder","data","actions","order","create","intent","payer","email_address","purchase_units","payee","amount","currency_code","value","item_list","items","name","sku","currency","quantity","onApprove","capture","console","log","onError","err","render","paypalElement","nativeElement","payPalConfig","clientId","advanced","commit","style","label","layout","shape","color","tagline","details","onClientAuthorization","onCancel","onClick","createOrderOnClient","colors","blue","primary","secondary","orange","red","sanitizer","eventService","imageProfile","view","CalendarView","viewDate","Date","refresh","Subject","events","activeDayIsOpen","authUser","getURLProfile","getOpenEvents","getClosedEvents","bypassSecurityTrustUrl","photo","date","event","getEvent","toNumbers","valueOf","toString","setItem","JSON","stringify","eventId","start","eventStart","end","eventEnd","closeOpenMonthViewDay","setView","imageColor","available","options","autoApply","alwaysShowCalendars","applyButtonClasses","buttonClasses","cancelClass","drops","locale","format","daysOfWeek","monthNames","minDate","maxDate","opens","showDropdowns","timePicker","singleDatePicker","getBase64","$event","reject","unsafeImg","window","URL","createObjectURL","image","reader","FileReader","readAsDataURL","onload","blob","base","result","onerror","_authUser","birthday","AuthUser","notify","getElementsByClassName","textContent","toJSON","replace","correctPassword","editUser","file","target","files","imageFormatTest","imageFormat","cancelDate","type","imageText","onEdit","getImage","changeStyle","selectedDate","applyDate","setNotify","surname","userPassword","userName","userSurname","createUser","loginAvailable","onCreate","userUserEventService","size","transactionPage","transactions","defaultUserImage","defaultEventImage","imagesPartakers","imagesEvents","searchTransactionValue","totalTransactionPage","transactionPartakers","transactionEvents","checked","paid","confirmed","getTransactions","cost","Math","round","updatePaid","updateConfirmed","editPaid","selectedTransaction","editConfirmed","transaction","senderId","receiverId","index","getByEvent","getDebts","getDebtsByEvent","getPayments","getPaymentsByEvent","getFinished","getFinishedByEvent","getFinishedDebts","getFinishedDebtsByEvent","getFinishedPayments","getFinishedPaymentsByEvent","getByDate","getDebtsByDate","getPaymentsByDate","getFinishedByDate","getFinishedDebtsByDate","getFinishedPaymentsByDate","getPageableUserUserEventsByAuthUserByEvent","totalTransactionPages","getPartakers","getEvents","getPageableUserUserEventsDebtsByAuthUser","totalTransactionDebtsPages","countUserUserEventsDebtsByAuthUser","ceil","getPageableUserUserEventsDebtsByAuthUserByEvent","getPageableUserUserEventsPaymentsByAuthUser","totalTransactionPaymentsPages","countUserUserEventsPaymentsByAuthUser","getPageableUserUserEventsPaymentsByAuthUserByEvent","getPageableNotFinishedUserUserEventsByAuthUser","totalFinishedTransactionPages","countFinishedUserUserEventsByAuthUser","getPageableNotFinishedUserUserEventsByAuthUserByEvent","getPageableNotFinishedUserUserEventsDebtsByAuthUser","totalFinishedTransactionDebtsPages","countFinishedUserUserEventsDebtsByAuthUser","getPageableNotFinishedUserUserEventsDebtsByAuthUserByEvent","getPageableNotFinishedUserUserEventsPaymentsByAuthUser","totalFinishedTransactionPaymentsPages","countFinishedUserUserEventsPaymentsByAuthUser","getPageableNotFinishedUserUserEventsPaymentsByAuthUserByEvent","getPageableUserUserEventsByAuthUserByDate","getPageableUserUserEventsDebtsByAuthUserByDate","getPageableUserUserEventsPaymentsByAuthUserByDate","getPageableNotFinishedUserUserEventsByAuthUserByDate","getPageableNotFinishedUserUserEventsDebtsByAuthUserByDate","getPageableNotFinishedUserUserEventsPaymentsByAuthUserByDate","getPageableUserUserEventsByAuthUser","countUserUserEventsByAuthUser","find","partaker","userId","getUserById","getURLPartaker","userPhoto","getURLEvent","eventPhoto","actorId","actor","eventTransaction","MEvent","previous","next","page","transactionPagination","paginationClass","toggleCheck","searchTransaction","getPageableSearchUserUserEventsByAuthUser","searchTransactionTotalPages","countSearchUserUserEventsByAuthUser","searchTransactionInput","onRequest","eventMessageConfirm","EventEmitter","_message","emit","onConfirm","groupUserService","defaultGroupImage","eventSave","eventPartakers","eventGroups","friends","groups","selectPartakers","_event","initialDate","finalDate","getGroups","eventOwner","createEvent","createUserEvent","editEvent","editUserEvent","users","getFriends","user","Object","values","includes","member","MGroupMembers","groupId","groupName","groupPhoto","selectedSelect","sort","a","b","group","getMembers","map","disabled","userSelected","groupID","userGroup","filter","u","changeSelect","removePartaker","clearPartakers","productService","userProductService","eventMessage","eventDelete","eventDetail","eventPartakersStored","pagePartaker","sizePartaker","totalPartaker","statusMessage","show","previousEvent","nextEvent","_previous","_next","_status","close","googleCalendarUrl","paginationEventClass","messageRequest","status","STATUS","messageValue","partakerReset","getTotalPartakers","addEventGoogleCalendar","deleteEvent","showButtons","sumTotalEventExpense","totalEventExpense","sumTotalProductCost","totalProductCost","getAllProductsPartakers","editOpen","createUserUserEvent","showTransactions","warning","number","getPageablePartakers","countPartakers","slice","closeEvent","setStatus","onDelete","editStatus","deleteUserEvent","startDate","RegExp","endDate","substring","parseInt","location","eventLocation","eventDescription","images","totalPage","selectedEvent","selectedStatus","pagination","pageDirection","getPageableEvents","setSelectedEventPage","getStatus","getURL","totalPages","getPageableEventsWithFinished","totalPagesWithFinished","getEventsWithFinished","searchWithFinished","search","getPageableSearchEvents","searchTotalPages","getPageableSearchEventsWithFinished","searchTotalPagesWithFinished","countEvents","countEventsWithFinished","countSearchEvents","countSearchEventsWithFinished","selectEvent","setPage","statusBD","mEvents","mEvent","getUserEvent","statusValue","accept","searchInput","setEvent","setSelectedEvent","groupService","groupMembers","_userGroup","MGroup","groupOwner","createGroup","createGroupUser","editGroup","editGroupUser","groupMembersStored","pageMember","sizeMember","totalMembers","previousUserGroup","nextUserGroup","paginationUserGroupClass","request","membersReset","getTotalMembers","deleteGroup","deleteGroupUser","getPageableMembers","countMembers","selectedUserGroup","getPageableGroups","setSelectedUserGroupPage","previousClass","nextClass","getPageableSearchGroups","countGroups","countSearchGroups","selectUserGroup","setGroup","setSelectedUserGroup","authenticated","loggedUser","_product","productId","productPurchaseDate","MProduct","_eventId","createProduct","editProduct","getUserProduct","editUserProduct","createUserProduct","productPhoto","operation","showOperation","_userEvent","userEvent","totalExpense","MUserEvent","editTotalExpense","operator","parseFloat","toFixed","calculator","statusUpdate","productPartakers","productPartakersStored","previousProduct","nextProduct","_open","paginationProductClass","open","deleteProduct","deleteUserProduct","PRODUCTJOIN","productName","products","imagesProducts","totalProductPage","productPage","selectedProduct","userEvents","totalUserEventPage","userEventPage","debt","MUserUserEvent","parse","getProducts","getUserEvents","getAuthUserEvent","paginationMembersClass","moneyColor","moneyText","imageEvent","partakers","authUserEvent","getPageableProducts","setSelectedProductPage","getURLProduct","totalProductPages","getTotalExpense","getDebt","previousMember","nextMember","countProducts","selectProduct","setProductPage","productPagination","searchProduct","getPageableSearchProducts","searchProductTotalPages","countSearchProducts","mProducts","mProduct","userProductActive","JOIN","CANCEL","getPageableUserEvents","totalUserEventPages","expense","eventOpen","countUserEvents","searchUserEvent","getPageableSearchUserEvents","searchUserEventTotalPages","userEventPagination","countSearchUserEvents","searchProductInput","setSelectedProduct","transactionActorName","getPageableUserUserEventsByEvent","countUserUserEventsByEvent","getPageableSearchUserUserEventsByEvent","countSearchUserUserEventsByEvent","MESSAGE","mutualGroups","mutualGroupsStored","pageMutualGroups","sizeMutualGroups","totalMutualGroups","mutualFriends","mutualFriendsStored","pageMutualFriends","sizeMutualFriends","totalMutualFriends","mutualEvents","mutualEventsStored","pageMutualEvents","sizeMutualEvents","totalMutualEvents","_user","paginationUserClass","paginationFriendClass","paginationGroupClass","mutualReset","getMutualUserGroups","getMutualFriends","getMutualEvents","getTotalMutualFriends","getTotalMutualGroups","getTotalMutualEvents","setMessage","UNFOLLOW","CANCELREQUEST","ALLOWREQUEST","SENTREQUEST","previousUser","nextUser","previousFriendClass","nextFriendClass","previousGroupClass","nextGroupClass","previousEventClass","nextEventClass","mUserUser","MUserUser","friendId","editUserUser","userUserActive","getDeletedUserUser","createUserUser","deleteUserUser","getPageableMutualGroups","countMutualGroups","getPageableMutualFriends","countMutualFriends","getPageableMutualEvents","countMutualEvents","selectedUser","getUsers","getPageableUsers","setSelectedUserPage","searchUsers","getPageableSearchUsers","countUsers","countSearchUsers","selectUser","friend","FOLLOW","PENDING","SENT","REQUEST","mUsers","getUserUser","friendStatus","setSelectedUser","state","url","navigate","isGuest","handle","clone","setHeaders","Authorization","getAuthorizationHeader","_authenticated","_authHeader","roles","permissions","userBirthday","userNotify","APachasError","cause","setPrototypeOf","prototype","catchError","throwError","HttpErrorResponse","statusText","NotificationService","CommonModule","messageEmitter","AuthenticationService","http","post","environment","observe","responseType","pipe","authorization","authHeader","setAuthUser","userActive","permission","rol","save","clear","EventService","put","eventActive","mapEvent","bind","eventCreation","eventRemoval","GroupService","mGroup","groupDescription","GroupUserService","mapUser","userIds","authId","mapGroup","userCreation","userRemoval","groupCreation","groupRemoval","groupActive","ProductService","productDescription","productCost","productQuantity","mapProduct","productCreation","productRemoval","productActive","UserService","UserEventService","mUserEvent","userDebt","mapUserEvent","userEventActive","userEventRemoval","userEventCreation","UserProductService","mapUserProduct","userProduct","userProductRemoval","userProductCreation","UserUserService","mapUserUser","userUser","userUserCreation","userUserRemoval","UserUserEventService","userUserEvents","mapUserUserEvent","authUserId","userUserEvent","userUserEventActive","userUserEventRemoval","userUserEventCreation","production","restApi","enableProdMode","platformBrowser","bootstrapModule","webpackEmptyContext","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/authUser/login/login/login.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {AuthGuard} from './guards/authGuard';\nimport {RegisterComponent} from \"./components/authUser/register/register.component\";\nimport {ListUsersComponent} from \"./components/users/listUsers/listUsers.component\";\nimport {CreateGroupComponent} from \"./components/groups/createGroup/createGroup.component\";\nimport {ListGroupsComponent} from \"./components/groups/listGroups/listGroups.component\";\nimport {DetailGroupComponent} from \"./components/groups/detailGroup/detailGroup.component\";\nimport {DetailUserComponent} from \"./components/users/detailUser/detailUser.component\";\nimport {MessageConfirmComponent} from \"./components/confirm/messageConfirm.component\";\nimport {ListEventsComponent} from \"./components/events/listEvents/listEvents.component\";\nimport {DetailEventComponent} from \"./components/events/detailEvent/detailEvent.component\";\nimport {CreateEventComponent} from \"./components/events/createEvent/createEvent.component\";\nimport {CreateProductComponent} from \"./components/products/createProduct/createProduct.component\";\nimport {ListProductsComponent} from \"./components/products/listProducts/listProducts.component\";\nimport {DetailProductComponent} from \"./components/products/detailProduct/detailProduct.component\";\nimport {CreateUserEventExpenseComponent} from \"./components/products/createUserEventExpense/createUserEventExpense.component\";\nimport {DetailProfileComponent} from \"./components/authUser/profile/detailProfile/detailProfile.component\";\nimport {ListTransactionsComponent} from \"./components/transactions/listTransactions.component\";\nimport {EditProfileComponent} from \"./components/authUser/profile/editProfile/editProfile.component\";\nimport {VerifyEmailComponent} from \"./components/authUser/email/verifyEmail/verifyEmail.component\";\nimport {RetrievePasswordComponent} from \"./components/authUser/email/retrievePassword/retrievePassword.component\";\nimport {RetrievePasswordEmailComponent} from \"./components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component\";\nimport {TransactionHistoryComponent} from \"./components/authUser/transactionHistory/transactionHistory.component\";\nimport {PaypalComponent} from \"./components/authUser/paypal/paypal.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'home', component: HomeComponent\n\t},\n\t{\n\t\tpath: 'login', component: LoginComponent\n\t},\n  \t{\n    \tpath: 'register', component: RegisterComponent\n  \t},\n\t{\n\t\tpath: 'users', component: ListUsersComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createGroup', component: CreateGroupComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'groups', component: ListGroupsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailGroup', component: DetailGroupComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailUser', component: DetailUserComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'messageConfirm', component: MessageConfirmComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'events', component: ListEventsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailEvent', component: DetailEventComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createEvent', component: CreateEventComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createProduct', component: CreateProductComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'products', component: ListProductsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'detailProduct', component: DetailProductComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'createUserEventExpense', component: CreateUserEventExpenseComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'transactions', component: ListTransactionsComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'profile', component: DetailProfileComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'editProfile', component: EditProfileComponent, canActivate: [AuthGuard]\n\t},\n\t{\n\t\tpath: 'verifyEmail', component: VerifyEmailComponent\n\t},\n\t{\n\t\tpath: 'retrievePassword', component: RetrievePasswordComponent\n\t},\n\t{\n\t\tpath: 'retrievePasswordEmail', component: RetrievePasswordEmailComponent\n\t},\n\t{\n\t\tpath: 'transactionHistory', component: TransactionHistoryComponent\n\t},\n\t{\n\t\tpath: 'paypal', component: PaypalComponent\n\t},\n\t{\n\t\tpath: '', redirectTo: 'home', pathMatch: 'full'\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, {\n\t\t\tuseHash: false,\n\t\t\tanchorScrolling: 'enabled'\n\t\t})\n\t],\n  \texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<header *ngIf=\"authenticationService.getUser().authenticated == true\">\n  <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand title\" aria-label=\"vuelta a la página principal\"  href=\"/home\"><img class=\"logo\" src=\"../assets/logo.png\" alt=\"logo\"></a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav w-100\">\n          <li class=\"nav-item\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"nav-link text\" aria-label=\"usuarios\" href=\"/users\">Usuarios</a>\n          </li>\n          <li class=\"nav-item\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"nav-link text\" aria-label=\"grupos\" href=\"/groups\">Grupos</a>\n          </li>\n          <li class=\"nav-item\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"nav-link text\" aria-label=\"eventos\" href=\"/events\">Eventos</a>\n          </li>\n        </ul>\n        <ul class=\"navbar-nav\">\n          <li class=\"dropdown not\">\n            <button type=\"button\" class=\"notButton nav-link  text\" id=\"navbarDropdownMenuLink2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <span [ngClass]=\"badge\" class=\"position-absolute top-0 start-100 translate-middle p-1 border border-light rounded-circle\">\n                <span class=\"visually-hidden\">Notificaciones</span>\n              </span>\n            </button>\n            <ul class=\"dropdown-menu notification-menu\" aria-labelledby=\"navbarDropdownMenuLink2\">\n              <li class=\"dropdown-item textDrop\" *ngFor=\"let notification of notifications\">\n                <p >{{notification}}</p>\n              </li>\n              <li class=\"dropdown-item textDrop\" [hidden]=\"notifications.length > 0\"><p >No hay notificaciones pendientes</p></li>\n            </ul>\n          </li>\n          <li class=\"nav-item dropdown profile\">\n            <a *ngIf=\"authenticationService.getUser().authenticated == true\" aria-label=\"desplegable\" class=\"nav-link dropdown-toggle text\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <ng-container *ngIf=\"authenticationService.getUser().photo; else imagesDiv\">\n                <img class=\"image\" [src]=\"authenticationService.getUser().photo\" alt=\"foto de usuario\">\n              </ng-container>\n              <ng-template #imagesDiv>\n                <img class=\"image\" [src]=\"defaultImage\" alt=\"foto por defecto de usuario\">\n              </ng-template>\n            </a>\n            <ul class=\"dropdown-menu profileDrop\" aria-labelledby=\"navbarDropdownMenuLink\">\n              <li>\n                <a *ngIf=\"authenticationService.getUser().authenticated == true\" aria-label=\"perfil\" class=\"dropdown-item textDrop\" href=\"/profile\">Perfil</a>\n              </li>\n              <li><a *ngIf=\"authenticationService.getUser().authenticated == true\" aria-label=\"historial de transacciones\" class=\"dropdown-item textDrop\" href=\"/transactionHistory\">Historial de transacciones</a></li>\n              <li><a *ngIf=\"authenticationService.getUser().authenticated == false\" class=\"dropdown-item textDrop\" aria-label=\"inicio de sesión\" (click)=\"logIn()\">Iniciar sesión</a></li>\n              <li><a *ngIf=\"authenticationService.getUser().authenticated == true\" class=\"dropdown-item textDrop\" aria-label=\"cierre de sesión\" (click)=\"logOut()\">Cerrar sesión</a></li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n<main class=\"container h-100\">\n  <router-outlet></router-outlet>\n</main>","import {Component, OnInit} from '@angular/core';\nimport {NotificationService} from './modules/notification/services/notification.service';\nimport {NotificationsService} from 'angular2-notifications';\nimport {Severity} from './modules/notification/entities';\nimport {AuthenticationService} from './services/authentication.service';\nimport {Router} from '@angular/router';\nimport {UserEventService} from \"./services/userEvent.service\";\nimport {UserUserService} from \"./services/userUser.service\";\n\ndeclare var paypal;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'APachas';\n  defaultImage: string = './assets/user16.jpg';\n  notifications: string[] = [];\n  badge: string =\"\";\n  constructor(\n    private notificationService: NotificationService,\n    private notificationsService: NotificationsService,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private userEventService: UserEventService,\n    private userUserService: UserUserService\n  ) {\n  }\n\n  ngOnInit() {\n    this.notificationService.getMessages().subscribe(\n      message => {\n        switch (message.severity) {\n          case Severity.ERROR:\n            this.notificationsService.error(message.summary, message.detail);\n            break;\n          case Severity.SUCCESS:\n            this.notificationsService.success(message.summary, message.detail);\n            break;\n          case Severity.INFO:\n            this.notificationsService.info(message.summary, message.detail);\n            break;\n          case Severity.WARNING:\n            this.notificationsService.warn(message.summary, message.detail);\n            break;\n        }\n      }\n    );\n    this.getEventNotifications();\n  }\n\n  getEventNotifications() {\n    this.userEventService.getNotifications(this.authenticationService.getUser().id).subscribe((response) => {\n      response.forEach((eventName) => {\n        this.notifications.push(\"Invitación a evento \" + eventName);\n      });\n      this.setBadge();\n    });\n    this.getUserNotifications();\n  }\n\n  getUserNotifications() {\n    this.userUserService.getNotifications(this.authenticationService.getUser().id).subscribe((response) => {\n      response.forEach((userLogin) => {\n        this.notifications.push(\"Solicitud de amistad de \" + userLogin);\n      });\n      this.setBadge();\n    });\n  }\n\n  setBadge(){\n    if (this.notifications.length != 0) {\n      this.badge = \"bg-danger\";\n    }else{\n      this.badge = \"\";\n    }\n  }\n\n  logOut() {\n    this.authenticationService.logOut();\n    this.router.navigateByUrl('/login');\n  }\n  logIn(){\n    this.router.navigateByUrl('/login');\n  }\n}\n","import {ErrorHandler, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {NotificationModule} from './modules/notification/notification.module';\nimport {SimpleNotificationsModule} from 'angular2-notifications';\nimport {ErrorNotificationHandler} from './modules/notification/handlers/error-notification.handler';\nimport {LoginComponent} from './components/authUser/login/login/login.component';\nimport {AuthenticationInterceptor} from './helpers/authentication.interceptor';\nimport {HomeComponent} from './components/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {RegisterComponent} from \"./components/authUser/register/register.component\";\nimport {ListUsersComponent} from \"./components/users/listUsers/listUsers.component\";\nimport {CreateGroupComponent} from \"./components/groups/createGroup/createGroup.component\";\nimport {ListGroupsComponent} from \"./components/groups/listGroups/listGroups.component\";\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DetailGroupComponent} from \"./components/groups/detailGroup/detailGroup.component\";\nimport {DetailUserComponent} from \"./components/users/detailUser/detailUser.component\";\nimport {MessageConfirmComponent} from \"./components/confirm/messageConfirm.component\";\nimport {ListEventsComponent} from \"./components/events/listEvents/listEvents.component\";\nimport {DetailEventComponent} from \"./components/events/detailEvent/detailEvent.component\";\nimport {CreateEventComponent} from \"./components/events/createEvent/createEvent.component\";\nimport {Daterangepicker} from \"ng2-daterangepicker\";\nimport {ListProductsComponent} from \"./components/products/listProducts/listProducts.component\";\nimport {CreateProductComponent} from \"./components/products/createProduct/createProduct.component\";\nimport {DetailProductComponent} from \"./components/products/detailProduct/detailProduct.component\";\nimport {CreateUserEventExpenseComponent} from \"./components/products/createUserEventExpense/createUserEventExpense.component\";\nimport {DetailProfileComponent} from \"./components/authUser/profile/detailProfile/detailProfile.component\";\nimport {ListTransactionsComponent} from \"./components/transactions/listTransactions.component\";\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport {LOCALE_ID } from '@angular/core';\nimport localeEs from '@angular/common/locales/es';\nimport {registerLocaleData} from \"@angular/common\";\nimport {EditProfileComponent} from \"./components/authUser/profile/editProfile/editProfile.component\";\nimport {VerifyEmailComponent} from \"./components/authUser/email/verifyEmail/verifyEmail.component\";\nimport {RetrievePasswordComponent} from \"./components/authUser/email/retrievePassword/retrievePassword.component\";\nimport {RetrievePasswordEmailComponent} from \"./components/authUser/login/retrievePasswordEmail/retrievePasswordEmail.component\";\nimport {TransactionHistoryComponent} from \"./components/authUser/transactionHistory/transactionHistory.component\";\nimport {NgxPayPalModule} from \"ngx-paypal\";\nimport {PaypalComponent} from \"./components/authUser/paypal/paypal.component\";\n\nregisterLocaleData(localeEs, 'es');\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ListUsersComponent,\n    CreateGroupComponent,\n    ListGroupsComponent,\n    DetailGroupComponent,\n    DetailUserComponent,\n    MessageConfirmComponent,\n    ListEventsComponent,\n    DetailEventComponent,\n    CreateEventComponent,\n    CreateProductComponent,\n    CreateUserEventExpenseComponent,\n    ListProductsComponent,\n    DetailProductComponent,\n    ListTransactionsComponent,\n    DetailProfileComponent,\n    HomeComponent,\n    EditProfileComponent,\n    VerifyEmailComponent,\n    RetrievePasswordComponent,\n    RetrievePasswordEmailComponent,\n    TransactionHistoryComponent,\n    PaypalComponent\n  ],\n    imports: [\n        AppRoutingModule,\n        BrowserModule,\n        FormsModule,\n        NgSelectModule,\n        HttpClientModule,\n        NotificationModule,\n        BrowserAnimationsModule,\n        CalendarModule.forRoot({\n            provide: DateAdapter,\n            useFactory: adapterFactory,\n        }),\n        SimpleNotificationsModule.forRoot({\n            timeOut: 10000,\n            preventDuplicates: true,\n            pauseOnHover: true,\n            clickToClose: true\n        }),\n        Daterangepicker,\n        NgxPayPalModule\n    ],\n\n  providers: [\n    {\n      provide: ErrorHandler,\n      useClass: ErrorNotificationHandler\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthenticationInterceptor, multi: true\n    },\n      {provide: LOCALE_ID, useValue: 'es'}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<section>\n    <div [hidden]=\"!hidden\" class=\"imageDiv\">\n        <img src=\"../../../assets/logo.png\">\n    </div>\n    <div [hidden]=\"!hidden\">\n        <h1 [ngClass]=\"messageColor\">{{message}}</h1>\n    </div>\n        <form [hidden]=\"hidden\" (submit)=\"retrievePassword();\" ngNativeValidate #retrievePasswordForm=\"ngForm\">\n            <div>\n                <input class=\"inputs\" type=\"password\" id=\"register_userPassword\" name=\"userPassword\" placeholder=\"Contraseña*\"\n                               [(ngModel)]=\"password\" required #userPasswordForm=\"ngModel\" minlength=\"6\">\n                <div *ngIf=\"retrievePasswordForm.submitted && userPasswordForm.invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"userPasswordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                    <div *ngIf=\"userPasswordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                    </div>\n                </div>\n            </div>\n            <div>\n                <input class=\"inputs\" type=\"password\" id=\"register_userPasswordConfirm\" name=\"userPasswordConfirm\"\n                               placeholder=\"Confirmación contraseña*\" [(ngModel)]=\"passwordConfirm\" required\n                               #userPasswordConfirmForm=\"ngModel\" minlength=\"6\">\n                <div *ngIf=\"password != passwordConfirm\" class=\"alert alert-danger\">\n                    <div>La contraseña de confirmación no coincide</div>\n                </div>\n                <div *ngIf=\"retrievePasswordForm.submitted && userPasswordConfirmForm.invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"userPasswordConfirmForm.errors.required\">La contraseña es un campo obligatorio\n                    </div>\n                    <div *ngIf=\"userPasswordConfirmForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                    </div>\n                </div>\n            </div>\n            <div class=\"buttons\">\n                <input type=\"submit\" class=\"button\" value=\"Guardar\">\n            </div>\n        </form>\n</section>\n<simple-notifications></simple-notifications>\n","import {Component, OnInit} from \"@angular/core\";\nimport {MRetrievePassword} from \"../../../../models/MRetrievePassword\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../../../services/user.service\";\n\n@Component({\n    selector: 'app-retrievePassword',\n    templateUrl: './retrievePassword.component.html',\n    styleUrls: ['./retrievePassword.component.css']\n})\nexport class RetrievePasswordComponent implements OnInit{\n    mRetrievePassword: MRetrievePassword = new MRetrievePassword();\n    password = \"\";\n    passwordConfirm = \"\";\n    message = \"ERROR EN LA RECUPERACIÓN DE LA CONTRASEÑA. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n    messageColor = \"messageColor\";\n    hidden: boolean = false;\n    token: boolean = false;\n\n    constructor(private router: Router,\n                private userService: UserService,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.mRetrievePassword.userEmail = this.activatedRoute.snapshot.queryParams[\"email\"];\n        this.mRetrievePassword.tokenPassword = this.activatedRoute.snapshot.queryParams[\"token\"];\n        this.userService.getToken(this.mRetrievePassword.userEmail).subscribe((response) =>{\n            if (!response){\n                    this.token = false;\n                    this.getMessage(false);\n            }else{\n                this.token = true;\n            }\n        });\n    }\n\n    retrievePassword(){\n        if (this.token){\n            if (this.password == this.passwordConfirm){\n                this.mRetrievePassword.newPassword = this.password;\n                this.userService.retrievePassword(this.mRetrievePassword).subscribe(() => {\n                    this.getMessage(true);\n                });\n            }\n        }else{\n            this.getMessage(false);\n        }\n    }\n\n    getMessage(goodRequest: boolean){\n        this.hidden = true;\n        if (goodRequest){\n            this.messageColor = \"\";\n            this.message = \"CONTRASEÑA CAMBIADA. Ya puedes acceder con tu nueva contraseña\";\n        }else{\n            this.messageColor = \"messageColor\";\n            this.message = \"ERROR EN LA RECUPERACIÓN DE LA CONTRASEÑA. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n        }\n    }\n}","import {AfterViewChecked, Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport {MVerifyEmail} from \"../../../../models/MVerifyEmail\";\n@Component({\n    selector: 'app-verifyEmail',\n    templateUrl: './verifyEmail.component.html',\n    styleUrls: ['./verifyEmail.component.css']\n})\nexport class VerifyEmailComponent implements OnInit{\n\n    mVerifyEmail: MVerifyEmail = new MVerifyEmail();\n\n    message = \"ERROR DE VERIFICACIÓN. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n    messageColor = \"messageColor\";\n\n    constructor(private router: Router,\n                private userService: UserService,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.mVerifyEmail.userEmail = this.activatedRoute.snapshot.queryParams[\"email\"];\n        this.mVerifyEmail.tokenPassword = this.activatedRoute.snapshot.queryParams[\"token\"];\n        this.userService.getToken(this.mVerifyEmail.userEmail).subscribe((response) =>{\n            if (response){\n                this.verifyEmail();\n            }else{\n                this.getMessage(false);\n            }\n        });\n    }\n\n    verifyEmail(){\n        this.userService.verifyUser(this.mVerifyEmail).subscribe(()=>{\n            this.getMessage(true);\n        });\n    }\n\n    private getMessage(goodRequest: boolean){\n        if (goodRequest){\n            this.message = \"Tu cuenta ha sido verificada\";\n            this.messageColor = \"\";\n        }else{\n            this.message = \"ERROR DE VERIFICACIÓN. Inténtelo de nuevo mas tarde o solicite un nuevo enlace\";\n            this.messageColor = \"messageColor\";\n        }\n    }\n\n}","<div class=\"imageDiv\">\n    <img src=\"../../../assets/logo.png\">\n</div>\n<div>\n    <h1 [ngClass]=\"messageColor\">{{message}}</h1>\n</div>\n","<section>\n    <div class=\"container\">\n        <div class=\"user signinBx\">\n            <div class=\"imgBx\"><img src=\"../../../../../assets/LoginMoney.jpg\" alt=\"Imagen decorativa de billetes para login\"></div>\n            <div class=\"formBx\">\n                <form (submit)=\"logIn()\" ngNativeValidate #loginForm=\"ngForm\">\n                    <h2>Iniciar sesión en <a href=\"\"><br>¡A pachas!</a></h2>\n                    <div>\n                        <input type=\"text\" id=\"login_userLogin\" name=\"userLogin\" placeholder=\"Nombre de usuario\"\n                               pattern=\"[a-zA-ZñÑ0-9_-]{1,100}\" title=\"Must be an alphanumeric\"\n                               [(ngModel)]=\"login\" required #usernameForm=\"ngModel\">\n                        <div *ngIf=\"loginForm.submitted && usernameForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"usernameForm.errors.required\">Username is required.</div>\n                            <div *ngIf=\"usernameForm.errors.pattern\">Username can only contain letters, numbers or\n                                underscore and should\n                                have a length between 1 and 100.\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"password\" id=\"login_userPassword\" name=\"userPassword\" placeholder=\"Contraseña\"\n                               [(ngModel)]=\"password\" required #passwordForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && passwordForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"passwordForm.errors.required\">Password is required.</div>\n                            <div *ngIf=\"passwordForm.errors.minlength\">Password can't be shorter than 6 characters.\n                            </div>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Iniciar sesión\">\n                    <p class=\"signup\">¿has olvidado tu contraseña? <a href=\"\" data-bs-toggle=\"modal\" data-bs-target=\"#retrievePasswordEmailModal\"> Recupérala</a></p>\n                    <p class=\"signup\">¿no tienes una cuenta? <a href=\"register\"> Regístrate</a></p>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</section>\n<app-retrievePasswordEmail></app-retrievePasswordEmail>\n\n<simple-notifications></simple-notifications>\n","/*\nCOMPONENT -> Bloque de código re-utilizable: CSS + HTML + TypeScript\n */\nimport {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../../../services/authentication.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NotificationService} from \"../../../../modules/notification/services/notification.service\";\nimport {UserService} from \"../../../../services/user.service\";\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit, AfterViewChecked {\n\n  login: string;\n  password: string;\n  private return = '';\n\n\tconstructor(private authenticationService: AuthenticationService,\n\t\t\t\tprivate userService: UserService,\n\t\t\t\tprivate route: ActivatedRoute,\n\t\t\t\tprivate router: Router,\n\t\t\t\tprivate notificationService: NotificationService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.route.queryParams\n\t\t  .subscribe(params => this.return = params['return'] || '');\n\n\t}\n\n\tlogIn() {\n\t\tthis.authenticationService.checkCredentials(this.login, this.password).subscribe(( s:any) =>{\n\t\t\tthis.authenticationService.logIn(this.login, this.password, s.headers.get(\"Authorization\"));\n\t\t\tthis.router.navigateByUrl(this.return);\n\t\t});\n\t}\n\n\n\tngAfterViewChecked(): void {\n\t\tif (localStorage.getItem(\"profile\") != undefined){\n\t\t\tthis.notificationService.success(\"Usuario editado\", \"Se ha editado el usuario correctamente.\");\n\t\t\tlocalStorage.removeItem(\"profile\");\n\t\t}\n\t}\n}","<div class=\"modal fade\" id=\"retrievePasswordEmailModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"retrievePasswordEmailLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button id=\"closeButton\" type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #retrievePasswordEmailForm=\"ngForm\">\n                     <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                <input class=\"inputs\" type=\"email\" id=\"register_userEmail\" name=\"userEmail\" placeholder=\"Correo electrónico*\"\n                                       [(ngModel)]=\"email\" required #userEmailForm=\"ngModel\" minlength=\"6\">\n                                <div *ngIf=\"retrievePasswordEmailForm.submitted && userEmailForm.invalid\" class=\"alert alert-danger\">\n                                    <div *ngIf=\"userEmailForm.errors.required\">El correo electrónico es un campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"userEmailForm.errors.pattern\">El correo electrónico solo puede contener letras,\n                                        @, . y debe estar comprendido entre 1 y 100 caracteres\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"buttons\">\n                                <button type=\"button\" id=\"closeButton1\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                    Cerrar\n                                </button>\n                            </div>\n                            <div class=\"buttons\">\n                                <input type=\"submit\" class=\"button\" value=\"Enviar\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../../services/user.service\";\nimport {MUser} from \"../../../../models/MUser\";\nimport {NotificationService} from \"../../../../modules/notification/services/notification.service\";\n\n\n@Component({\n    selector: 'app-retrievePasswordEmail',\n    templateUrl: './retrievePasswordEmail.component.html',\n    styleUrls: ['./retrievePasswordEmail.component.css']\n})\nexport class RetrievePasswordEmailComponent implements OnInit {\n\n    mUser: MUser= new MUser();\n    title: string = \"RECUPERAR CONTRASEÑA\";\n    email: string = \"\";\n\n\n    constructor(private userService: UserService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(){\n        this.mUser.userEmail = this.email;\n        this.userService.sendRetrievePassword(this.mUser).subscribe(()=>{\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.info(\"Revisa tu correo electrónico para establecer una nueva contraseña\", \"Revisa tu correo electrónico\");\n            this.closeModal();\n        });\n    }\n\n    closeModal(){\n        this.email = \"\";\n        this.mUser = new MUser();\n    }\n}","<!--<ngx-paypal [config]=\"payPalConfig\"></ngx-paypal>-->\n\n<div *ngIf=\"!paidFor\">\n\n    <h1>Buy this Couch - ${{ product.price }} OBO</h1>\n\n    <p>{{ product.description }}</p>\n\n\n</div>\n\n<div *ngIf=paidFor>\n    <h1>Yay, you bought a sweet couch!</h1>\n\n    <img src=\"assets/giphy.gif\">\n</div>\n\n\n<div [hidden]=\"paidFor\" #paypal></div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport { IPayPalConfig, ICreateOrderRequest } from 'ngx-paypal';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\n\ndeclare var paypal;\n\n@Component({\n    selector: 'app-paypal',\n    templateUrl: './paypal.component.html',\n    styleUrls: ['./paypal.component.css']\n})\nexport class PaypalComponent implements OnInit {\n\n    public payPalConfig: any;\n\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    @ViewChild('paypal', { static: true }) paypalElement: ElementRef;\n\n    ngOnInit(): void {\n      //  this.initConfig();\n        //this.initConfigB();\n        this.test();\n    }\n    paidFor = false;\n    product = {\n        price: 777.77,\n        description: 'used couch, decent condition'\n    };\n    test() {\n        paypal\n        .Buttons({\n            createOrder: (data, actions) => {\n                return actions.order.create({\n                    // advanced: {\n                    //     commit: 'true'\n                    // },\n                    //\n                    // style: {\n                    //     label: 'paypal',\n                    //     layout: 'horizontal',\n                    //     shape: 'rect',\n                    //     color: 'silver',\n                    //     tagline: false\n                    // },\n                    intent: 'CAPTURE',\n                    payer: {\n                        email_address: \"sb-clc3816042471@personal.example.com\",\n                    },\n                    purchase_units: [\n                        {\n                            payee:{\n                                email_address: \"sb-jypul16089008@business.example.com\"\n                            },\n                            amount: {\n                                currency_code: 'EUR',\n                                value: '5.00'\n                            },\n                            item_list: {\n                            items: [\n                                {\n                                    name: \"hat\",\n                                    sku: \"1\",\n                                    price: \"5.00\",\n                                    currency: 'EUR',\n                                    quantity: \"1\",\n                                    description: \"Brown hat.\"\n\n                                }]}\n                        }\n                    ]\n                });\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture();\n                this.paidFor = true;\n                console.log(order);\n            },\n            onError: err => {\n                console.log(err);\n            }\n        })\n        .render(this.paypalElement.nativeElement);\n\n\n    }\n    /*\n\n    P\n    sb-clc3816042471@personal.example.com\n    rO>0F7Ge\n    - TA2FJTAJMAWQU\n\n    B\n    sb-tioio15365415@business.example.com\n    ?BRnDf#1\n    - 7822BDYPJ54BG\n\n    P\n    sb-nn8cv16042503@personal.example.com\n    Xj6=@w7P\n    - HSL8KPUXAEHDU\n\n    B\n    sb-jypul16089008@business.example.com\n    -C9=6Jb2\n    - ZU6K2LR9KUYE6\n\n    */\n\n    private initConfigB(): void {\n        this.payPalConfig = {\n            createOrder: data =>\n                <ICreateOrderRequest>{\n                    intent: \"CAPTURE\",\n                    // Pagador\n                    payer: {\n                        email_address: \"sb-clc3816042471@personal.example.com\",\n                    },\n\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: \"EUR\",\n                                value: \"9.99\"\n                            },\n                            payee:{\n                                email_address: \"sb-jypul16089008@business.example.com\"\n                            },\n                            items: [\n                            ]\n                        }\n                    ]\n                },\n            currency: 'EUR',\n            clientId: 'ATf1-QPk20tqgmCXMEH_rTkdpYDJjOoUSHsoP4ROOevzgsYVLnvurgPeAGh8PAynWpSe0NKJiTolOThs',\n            advanced: {\n                commit: 'true'\n            },\n\n            style: {\n                label: 'paypal',\n                layout: 'horizontal',\n                shape: 'rect',\n                color: 'silver',\n                tagline: false\n            },\n            onApprove: (data, actions) => {\n                console.log(\n                    \"onApprove - transaction was approved, but not authorized\",\n                    data,\n                    actions\n                );\n                actions.order.get().then(details => {\n                    console.log(\n                        \"onApprove - you can get full order details inside onApprove: \",\n                        details\n                    );\n                });\n            },\n            onClientAuthorization: data => {\n                console.log(\n                    \"onClientAuthorization - you should probably inform your server about completed transaction at this point\",\n                    data\n                );\n            },\n            onCancel: (data, actions) => {\n                console.log(\"OnCancel\", data, actions);\n            },\n            onError: err => {\n                console.log(\"OnError\", err);\n            },\n            onClick: (data, actions) => {\n                console.log(\"onClick\", data, actions);\n            }\n        };\n    }\n\n    private initConfig(): void {\n        this.payPalConfig = {\n            currency: 'EUR',\n            clientId: 'ATf1-QPk20tqgmCXMEH_rTkdpYDJjOoUSHsoP4ROOevzgsYVLnvurgPeAGh8PAynWpSe0NKJiTolOThs',\n            advanced: {\n                commit: 'true'\n            },\n\n            style: {\n                label: 'paypal',\n                layout: 'horizontal',\n                shape: 'rect',\n                color: 'silver',\n                tagline: false\n            },\n\n\n            createOrderOnClient: (data) => <ICreateOrderRequest>{\n                description: \"Holaa\",\n                // Pagador\n                payer: {\n                     email_address: \"sb-clc3816042471@personal.example.com\",\n                },\n                // Al que se paga\n                // payee:{\n                //     email_address: \"sb-nn8cv16042503@personal.example.com\",\n                // },\n                intent: 'CAPTURE',\n                purchase_units: [\n                    {\n                        payee:{\n                            email_address: \"sb-nn8cv16042503@personal.example.com\"\n                        },\n                        amount: {\n                            currency_code: 'EUR',\n                            value: '9.99'\n                        },\n                        items: [\n                            // {\n                            //     name: 'Enterprise Subscription',\n                            //     quantity: '1',\n                            //     category: 'DIGITAL_GOODS',\n                            //     unit_amount: {\n                            //         currency_code: 'EUR',\n                            //         value: '9.99',\n                            //     },\n                            // }\n                        ]\n                    }\n                ]\n            },\n\n            onApprove: (data, actions) => {\n                console.log('onApprove - transaction was approved, but not authorized', data, actions);\n                actions.order.get().then(details => {\n                    console.log('onApprove - you can get full order details inside onApprove: ', details);\n                });\n            },\n            onClientAuthorization: (data) => {\n                console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n                //this.showSuccess = true;\n            },\n            onCancel: (data, actions) => {\n                console.log('OnCancel', data, actions);\n            },\n            onError: err => {\n                console.log('OnError', err);\n            },\n            onClick: (data, actions) => {\n                console.log('onClick', data, actions);\n            },\n        };\n    }\n}","<section class=\"section\">\n    <div class=\"row\">\n        <div class=\"col-xxl-4 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 imageCol\">\n\n            <div class=\"row\">\n                <div class=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 imageDiv\">\n                    <ng-container *ngIf=\"authUser.photo; else imagesDiv\">\n                        <img class=\"image\" [src]=\"imageProfile\" alt=\"\"\n                             id=\"detailProfile_photo\">\n                    </ng-container>\n                    <ng-template #imagesDiv>\n                        <img class=\"image\" [src]=\"defaultImage\">\n                    </ng-template>\n                </div>\n                <div class=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 titleclass\">\n                    <button type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#editProfileModal\">Editar perfil</button>\n\n                </div>\n            </div>\n\n        </div>\n\n\n        <div class=\"col-xxl-8 col-xl-12 col-lg-12 col-md-12 col-sm-10 col-10 calendarDiv\">\n            <div class=\"row text-center\">\n                <!--BOTONES ANTERIOR HOY SIGUIENTE -->\n                <div class=\"col-md-4\">\n                    <div class=\"btn-group\">\n                        <div class=\"btn btn-primary\"\n                             mwlCalendarPreviousView\n                             [view]=\"view\"\n                             [(viewDate)]=\"viewDate\"\n                             (viewDateChange)=\"closeOpenMonthViewDay()\">\n                            Anterior\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             mwlCalendarToday\n                             [(viewDate)]=\"viewDate\">\n                            Hoy\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             mwlCalendarNextView\n                             [view]=\"view\"\n                             [(viewDate)]=\"viewDate\"\n                             (viewDateChange)=\"closeOpenMonthViewDay()\">\n                            Siguiente\n                        </div>\n                    </div>\n                </div>\n                <!-- FECHA ACTUAL -->\n                <div class=\"col-md-4\">\n                    <h3 class=\"todayDate\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'es' }}</h3>\n                </div>\n                <!-- BOTONES MES SEMANA DIA -->\n                <div class=\"col-md-4\">\n                    <div class=\"btn-group\">\n                        <div class=\"btn btn-primary\"\n                             (click)=\"setView(CalendarView.Month)\"\n                             [class.active]=\"view === CalendarView.Month\">\n                            Mes\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             (click)=\"setView(CalendarView.Week)\"\n                             [class.active]=\"view === CalendarView.Week\">\n                            Semana\n                        </div>\n                        <div class=\"btn btn-primary\"\n                             (click)=\"setView(CalendarView.Day)\"\n                             [class.active]=\"view === CalendarView.Day\">\n                            Día\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--VISTAS DEL CALENDARIO -->\n            <div [ngSwitch]=\"view\">\n                <!-- VISTA MENSUAL DEL CALENDARIO -->\n                <mwl-calendar-month-view\n                        *ngSwitchCase=\"CalendarView.Month\"\n                        [viewDate]=\"viewDate\"\n                        [events]=\"events\"\n                        [weekStartsOn]=\"1\"\n                        [refresh]=\"refresh\"\n                        [activeDayIsOpen]=\"activeDayIsOpen\"\n                        (dayClicked)=\"dayClicked($event.day)\"\n                        (eventClicked)=\"handleEvent( $event.event)\">\n                </mwl-calendar-month-view>\n                <!-- VISTA SEMANAL DEL CALENDARIO -->\n                <mwl-calendar-week-view\n                        *ngSwitchCase=\"CalendarView.Week\"\n                        [viewDate]=\"viewDate\"\n                        [weekStartsOn]=\"1\"\n                        [events]=\"events\"\n                        [refresh]=\"refresh\"\n                        (eventClicked)=\"handleEvent( $event.event)\">\n                </mwl-calendar-week-view>\n                <!-- VISTA DIARIA DEL CALENDARIO -->\n                <mwl-calendar-day-view\n                        *ngSwitchCase=\"CalendarView.Day\"\n                        [viewDate]=\"viewDate\"\n                        [events]=\"events\"\n                        [refresh]=\"refresh\"\n                        (eventClicked)=\"handleEvent( $event.event)\">\n                </mwl-calendar-day-view>\n            </div>\n        </div>\n    </div>\n    <app-editProfile [authUser] = \"authUser\"></app-editProfile>\n</section>\n\n","import {Component, OnInit,ChangeDetectionStrategy, ViewChild, TemplateRef,} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport {AuthUser} from \"../../../../models/AuthUser\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours,} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport {CalendarEvent, CalendarView,} from 'angular-calendar';\nimport {UserEventService} from \"../../../../services/userEvent.service\";\nimport {EventService} from \"../../../../services/event.service\";\nimport {toNumbers} from \"@angular/compiler-cli/src/diagnostics/typescript_version\";\n\nconst colors: any = {\n    blue: {\n        primary: '#007eff',\n        secondary: '',\n    },\n    orange: {\n        primary: '#ff9e34',\n        secondary: '',\n    },\n    red: {\n        primary: '#d92e2e',\n        secondary: '',\n    }\n};\n\n@Component({\n    selector: 'app-profile',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './detailProfile.component.html',\n    styleUrls: ['./detailProfile.component.css']\n})\nexport class DetailProfileComponent implements OnInit {\n    authUser: AuthUser;\n    imageProfile: any = null;\n    defaultImage: string = \"./assets/user16.jpg\";\n\n    @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n\n    view: CalendarView = CalendarView.Month;\n\n    CalendarView = CalendarView;\n\n    viewDate: Date = new Date();\n\n    refresh = new Subject<void>();\n\n    events: CalendarEvent[] = [];\n\n    activeDayIsOpen: boolean = false;\n\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer,\n                private userEventService: UserEventService,\n                private eventService: EventService) {\n    }\n\n    ngOnInit() {\n        this.authUser = this.authenticationService.getUser();\n        this.getURLProfile();\n        this.getOpenEvents();\n        this.getClosedEvents();\n\n    }\n\n    private getURLProfile() {\n        this.imageProfile = this.sanitizer.bypassSecurityTrustUrl(this.authUser.photo);\n    }\n\n    //mostras eventos\n    dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n        if (isSameMonth(date, this.viewDate)) {\n            if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\n                this.activeDayIsOpen = false;\n            } else {\n                this.activeDayIsOpen = true;\n            }\n            this.viewDate = date;\n        }\n    }\n\n    //evento seleccionado\n    handleEvent(event: CalendarEvent): void {\n       this.eventService.getEvent(toNumbers(event.id.valueOf().toString())[0]).subscribe((response) =>{\n            localStorage.setItem(\"products\",  JSON.stringify(response));\n            this.router.navigateByUrl(\"/products\");\n        });\n    }\n\n    //añade los eventos a las distintas vistas\n    addEvent(): void {\n        this.events = [\n            ...this.events\n        ];\n    }\n\n    //cambia de vista\n    setView(view: CalendarView) {\n        this.view = view;\n    }\n\n    //estable si se muestran los detalles de los eventos del dia al cambiar de dia seleccionado\n    closeOpenMonthViewDay() {\n        this.activeDayIsOpen = false;\n    }\n\n    //coger los eventos abiertos de un usuario\n    getOpenEvents(){\n        this.userEventService.getOpenEvents(this.authUser.id).subscribe((response)=>{\n            response.forEach((event) =>{\n                this.events.push({\n                    id: event.eventId,\n                    start: addHours(new Date(event.eventStart),2),\n                    end: addHours(new Date(event.eventEnd),2),\n                    title: event.eventName,\n                    color: colors.blue,\n                });\n            });\n        });\n\n    }\n\n    //coger los eventos cerrados de un usuario\n    getClosedEvents(){\n        this.userEventService.getClosedEvents(this.authUser.id).subscribe((response) => {\n            response.forEach((event) => {\n                this.events.push({\n                    id: event.eventId,\n                    start: addHours(new Date(event.eventStart),2),\n                    end: addHours(new Date(event.eventEnd),2),\n                    title: event.eventName,\n                    color: colors.orange,\n                });\n            })\n        });\n    }\n\n\n\n}\n","<div class=\"modal fade\" id=\"editProfileModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"editProfileLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onEdit();\" ngNativeValidate #editProfileForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row imageRow\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 file-input imageDiv\">\n                                        <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                               type=\"file\"\n                                               id=\"editProfile_userPhoto\" name=\"userPhoto\">\n                                        <label title=\"Cambiar imagen de usuario\" for=\"editProfile_userPhoto\"\n                                               (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                            <ng-container *ngIf=\"authUser.photo; else imagesDiv\">\n                                                <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"authUser.photo\" alt=\"\"\n                                                     id=\"editProfile_photo\">\n                                            </ng-container>\n                                            <ng-template #imagesDiv>\n                                                <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"defaultImage\">\n                                            </ng-template>\n                                            <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                        </label>\n                                        <div *ngIf=\"imageFormat == false\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row secondDiv\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 passwordDiv\">\n                                        <div>\n                                            <input type=\"password\" class=\"inputs\" id=\"editProfile_password\" autocomplete=\"current-password\" name=\"current-password\" placeholder=\"Contraseña Actual\"\n                                                   [(ngModel)]=\"password\" #passwordForm=\"ngModel\" minlength=\"6\">\n                                            <div *ngIf=\"password != authUser.password && password !=''\" class=\"alert alert-danger\">\n                                                <div>La contraseña no es correcta</div>\n                                            </div>\n                                            <div *ngIf=\"editProfileForm.submitted && passwordForm.invalid\" class=\"alert alert-danger\">\n                                                <div *ngIf=\"passwordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                                                <div *ngIf=\"passwordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                                    caracteres\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div class=\"row secondDiv\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <div>\n                                            <input type=\"password\" class=\"inputs\" id=\"editProfile_newPassword\" autocomplete=\"new-password\" name=\"new-password\" placeholder=\"Nueva contraseña\"\n                                                   [(ngModel)]=\"newPassword\" #passwordForm=\"ngModel\" minlength=\"6\">\n                                            <div *ngIf=\"editProfileForm.submitted && passwordForm.invalid\" class=\"alert alert-danger\">\n                                                <div *ngIf=\"passwordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                                                <div *ngIf=\"passwordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                                    caracteres\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row secondDiv\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"password\" class=\"inputs\" id=\"editProfile_userPasswordConfirm\" autocomplete=\"new-password\" name=\"new-password\"\n                                               placeholder=\"Confirmación contraseña\" [(ngModel)]=\"passwordConfirm\"\n                                               #userPasswordConfirmForm=\"ngModel\" minlength=\"6\">\n                                        <div *ngIf=\"newPassword != passwordConfirm\" class=\"alert alert-danger\">\n                                            <div>La contraseña de confirmación no coincide</div>\n                                        </div>\n                                        <div *ngIf=\"editProfileForm.submitted && userPasswordConfirmForm.invalid\" class=\"alert alert-danger\">\n                                            <div *ngIf=\"userPasswordConfirmForm.errors.required\">La contraseña es un campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userPasswordConfirmForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                                caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"editProfile_userName\" name=\"userName\"\n                                               class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"authUser.name\" required\n                                               #userNameForm=\"ngModel\">\n                                        <div *ngIf=\"editProfileForm.onSubmit(undefined) && userNameForm.invalid  || userNameForm.invalid && userNameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userNameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"editProfile_userSurname\" name=\"userSurname\"\n                                               class=\"inputs\" placeholder=\"Apellidos*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"authUser.surname\" required\n                                               #userSurnameForm=\"ngModel\">\n                                        <div *ngIf=\"editProfileForm.onSubmit(undefined) && userSurnameForm.invalid  || userSurnameForm.invalid && userSurnameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userSurnameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userSurnameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"editProfile_login\" name=\"login\"\n                                               class=\"inputs\" placeholder=\"Login*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"login\" required\n                                               #loginForm=\"ngModel\" autocomplete=\"username\">\n                                        <div *ngIf=\"!available\" class=\"alert alert-danger\">\n                                            <div>Login no disponible</div>\n                                        </div>\n                                        <div *ngIf=\"editProfileForm.onSubmit(undefined) && loginForm.invalid  || loginForm.invalid && loginForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"loginForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"loginForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <div class=\"daterangerpicker\"\n                                             daterangepicker\n                                             [options]=\"options\"\n                                             (selected)=\"selectedDate($event)\"\n                                             (applyDaterangepicker)=\"applyDate()\"\n                                             (cancelDaterangepicker)=\"cancelDate()\">\n                                            <div class=\"d-flex justify-content-between h-100\">\n                                            <span *ngIf=\"birthday != undefined\" class=\"ps-2 align-self-center\">\n                                                            {{birthday | date:'dd/MM/YYYY'}}\n                                            </span>\n                                                <span *ngIf=\"birthday == undefined\" class=\"placeholder align-self-center\">\n                                                            Fecha*\n                                            </span>\n                                                <div class=\"align-self-center\">\n                                                    <span *ngIf=\"birthday != undefined\" class=\"cancel\" (click)=\"cancelDate()\">×</span>\n                                                    <span class=\"ng-arrow-wrapper\">\n                                                     <span class=\"btn ng-arrow\"><i class=\"bi bi-calendar\"></i></span>\n                                                </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <div class=\"form-check form-switch\">\n                                            <input name=\"notify\" class=\"form-check-input check\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" [checked]=\"authUser.notify\" (click)=\"setNotify()\">\n                                            <label class=\"form-check-label text check\" for=\"flexSwitchCheckDefault\">Notificaciones email</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"buttons\">\n                                <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                    Cerrar\n                                </button>\n                            </div>\n                            <div class=\"buttons\">\n                                <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../../modules/notification/services/notification.service\";\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport {AuthUser} from \"../../../../models/AuthUser\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n    selector: 'app-editProfile',\n    templateUrl: './editProfile.component.html',\n    styleUrls: ['./editProfile.component.css']\n})\nexport class EditProfileComponent implements OnInit, AfterViewChecked {\n    defaultImage = \"./assets/user16.jpg\";\n    imageFormat: boolean;\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"EDITAR USUARIO\";\n    _authUser: AuthUser;\n    birthday: Date;\n    password = \"\";\n    newPassword = \"\";\n    passwordConfirm = \"\";\n    login = \"\";\n    available: boolean = true;\n\n    public options: any = {\n        autoApply: false,\n        alwaysShowCalendars: true,\n        applyButtonClasses: \"btn-primary applyDate\",\n        buttonClasses: \"btn btn-sm\",\n        cancelClass: \"btn-default cancelDate\",\n        drops: \"up\",\n        locale: {\n            format: 'DD/MM/yyyy',\n            \"firstDay\": 1,\n            daysOfWeek: [\n                \"D\",\n                \"L\",\n                \"M\",\n                \"X\",\n                \"J\",\n                \"V\",\n                \"S\"\n            ],\n            monthNames: [\n                \"Enero\",\n                \"Febrero\",\n                \"Marzo\",\n                \"Abril\",\n                \"Mayo\",\n                \"Junio\",\n                \"Julio\",\n                \"Agosto\",\n                \"Septiembre\",\n                \"Octubre\",\n                \"Noviembre\",\n                \"Diciembre\"\n            ]\n        },\n        minDate: undefined,\n        maxDate: new Date(),\n        opens: 'left',\n        showDropdowns: true,\n        timePicker: false,\n        singleDatePicker: true\n    };\n\n\n    constructor(private sanitizer: DomSanitizer,\n                private authenticationService: AuthenticationService,\n                private userService: UserService,\n                private router: Router,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    get authUser(){\n        return this._authUser;\n    }\n\n    @Input() set authUser(authUser: AuthUser){\n        if (authUser.id != undefined){\n            this._authUser = authUser;\n            if (this.authUser.birthday != null){\n                this.birthday = new Date(this.authUser.birthday);\n            }else{\n                this.birthday = null;\n            }\n            this.login = authUser.login;\n        }else{\n            this._authUser = new AuthUser();\n            this.birthday = null;\n        }\n    }\n\n    setNotify(){\n        this.authUser.notify = !this.authUser.notify;\n    }\n\n    ngAfterViewChecked() {\n        document.getElementsByClassName(\"applyDate\")[0].textContent =\"Aplicar\";\n        document.getElementsByClassName(\"cancelDate\")[0].textContent = \"Cancelar\";\n    }\n\n    public applyDate(): void {\n        this.authUser.birthday= new Date(this.birthday.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n    }\n\n    public selectedDate(value: any): void {\n        this.birthday = new Date(value.start);\n    }\n\n    public cancelDate(): void {\n        this.birthday = undefined;\n    }\n\n    onEdit(){\n        if (this.correctPassword()){\n            this.authUser.login = this.login;\n            this.userService.editUser(this.authUser).subscribe(() => {\n                this.closeModal();\n                document.getElementById(\"closeButton\").click();\n                localStorage.setItem(\"profile\", JSON.stringify(true));\n                this.authenticationService.logOut();\n                this.router.navigateByUrl(\"/login\");\n            });\n        }\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.authUser.photo = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    correctPassword(): boolean{\n        if(this.password != \"\" && this.password != null) {\n            if (this.password == this.authUser.password) {\n                if (this.newPassword == this.passwordConfirm && this.newPassword != \"\" && this.newPassword != null && this.passwordConfirm != \"\" && this.passwordConfirm != null) {\n                    this.authUser.password = this.newPassword;\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }else{\n            return true;\n        }\n    }\n\n    closeModal(){\n        this.imageFormat = null;\n        this.authUser = new AuthUser();\n        this.cancelDate();\n        this.password = \"\";\n        this.newPassword = \"\";\n        this.passwordConfirm = \"\";\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n\n}","<section>\n    <div class=\"container\">\n        <div class=\"user signupBx\">\n            <div class=\"formBx\">\n                <form (submit)=\"onCreate()\" ngNativeValidate #loginForm=\"ngForm\">\n                    <h2>Crear una cuenta en <a href=\"home\">¡A pachas!</a></h2>\n                    <div>\n                        <input type=\"text\" id=\"register_userName\" name=\"userName\" placeholder=\"Nombre*\"\n                               pattern=\"[a-zA-ZñÑ]{1,100}\" title=\"Must be an alpha\"\n                               [(ngModel)]=\"name\" required #usernameForm=\"ngModel\">\n                        <div *ngIf=\"!available\" class=\"alert alert-danger\">\n                            <div>Login no disponible</div>\n                        </div>\n                        <div *ngIf=\"loginForm.submitted && usernameForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"usernameForm.errors.required\">El nombre es un campo obligatorio</div>\n                            <div *ngIf=\"usernameForm.errors.pattern\">El nombre solo puede contener letras y debe estar\n                                comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"text\" id=\"register_userSurname\" name=\"userSurname\" placeholder=\"Apellidos*\"\n                               [(ngModel)]=\"surname\" pattern=\"[a-zA-Zñáéíóú ]{1,100}\" title=\"Must be an alpha\" required\n                               #userSurnameForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && userSurnameForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userSurnameForm.errors.required\">El apellido es un campo obligatorio</div>\n                            <div *ngIf=\"userSurnameForm.errors.pattern\">El apellido solo puede contener letras, espacios\n                                y debe estar comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"text\" id=\"register_userLogin\" name=\"userLogin\" placeholder=\"Nombre de usuario*\"\n                               [(ngModel)]=\"login\" required #userLoginForm=\"ngModel\" minlength=\"6\" maxlength=\"13\"\n                               pattern=\"[a-zA-ZñÑ0-9_-]{1,100}\" title=\"Must be an alphanumeric\">\n                        <div *ngIf=\"loginForm.submitted && userLoginForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userLoginForm.errors.required\">El nombre de usuario es un campo obligatorio\n                            </div>\n                            <div *ngIf=\"userLoginForm.errors.pattern\">El nombre de usuario solo puede contener letras,\n                                número, _ y debe estar comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"password\" id=\"register_userPassword\" name=\"userPassword\" placeholder=\"Contraseña*\"\n                               [(ngModel)]=\"password\" required #userPasswordForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && userPasswordForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userPasswordForm.errors.required\">La contraseña es un campo obligatorio</div>\n                            <div *ngIf=\"userPasswordForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"password\" id=\"register_userPasswordConfirm\" name=\"userPasswordConfirm\"\n                               placeholder=\"Confirmación contraseña*\" [(ngModel)]=\"passwordConfirm\" required\n                               #userPasswordConfirmForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"password != passwordConfirm\" class=\"alert alert-danger\">\n                            <div>La contraseña de confirmación no coincide</div>\n                        </div>\n                        <div *ngIf=\"loginForm.submitted && userPasswordConfirmForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userPasswordConfirmForm.errors.required\">La contraseña es un campo obligatorio\n                            </div>\n                            <div *ngIf=\"userPasswordConfirmForm.errors.minLenght\">La contraseña no debe tener menos de 6\n                                caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <input type=\"email\" id=\"register_userEmail\" name=\"userEmail\" placeholder=\"Correo electrónico*\"\n                               [(ngModel)]=\"email\" required #userEmailForm=\"ngModel\" minlength=\"6\">\n                        <div *ngIf=\"loginForm.submitted && userEmailForm.invalid\" class=\"alert alert-danger\">\n                            <div *ngIf=\"userEmailForm.errors.required\">El correo electrónico es un campo obligatorio\n                            </div>\n                            <div *ngIf=\"userEmailForm.errors.pattern\">El correo electrónico solo puede contener letras,\n                                @, . y debe estar comprendido entre 1 y 100 caracteres\n                            </div>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Registrar\">\n                    <p class=\"signin\">¿tienes una cuenta? <a href=\"login\"> Inicia sesión</a></p>\n                </form>\n            </div>\n            <div class=\"imgBx\"><img src=\"../../../../assets/RegisterMoney.jpg\" alt=\"Imagen de tarjetas decorativa registro\"></div>\n        </div>\n    </div>\n</section>\n<simple-notifications></simple-notifications>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from \"../../../services/user.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n  private mUser: MUser = new MUser();\n  name = \"\";\n  surname = \"\";\n  login = \"\";\n  password = \"\";\n  passwordConfirm = \"\";\n  email = \"\";\n  available: boolean = true;\n  private return = 'login';\n\n  constructor(private router: Router,\n              private userService: UserService,\n              private notificationService: NotificationService) {\n  }\n  ngOnInit() {}\n  onCreate(){\n    this.mUser.userLogin = this.login;\n    this.mUser.userPassword = this.password;\n    this.mUser.userName = this.name;\n    this.mUser.userEmail = this.email;\n    this.mUser.userSurname = this.surname;\n    if(this.password == this.passwordConfirm) {\n      this.userService.createUser(this.mUser).subscribe(()=>{\n        this.notificationService.info(\"Revisa tu correo electrónico y verifica tu cuenta para poder acceder a A Pachas\", \"Pendiente de verificación\");\n      });\n    }\n  }\n\n  loginAvailable(){\n    this.userService.loginAvailable(this.login).subscribe((response) => {\n      if (!response) {\n        this.available = false;\n      }else{\n        this.available = true;\n      }\n    });\n  }\n}\n","<section>\n    <h6 class=\"title modal-title\">HISTORIAL DE TRANSACCIONES</h6>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 searchTransaction\">\n            <form ngNativeValidate (input)=\"searchTransactionInput()\" #searchTransactionsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_transaction\" name=\"transaction\" placeholder=\"Buscar por nombre de usuario o evento\"\n                       [(ngModel)]=\"searchTransactionValue\" required #searchTransactionValueForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 dropd\">\n            <div class=\"dropdown dropAlign\">\n                <a class=\"btn btn-neutral dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <i class=\"zmdi zmdi-more-vert iSize\"></i>\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(0)\" (click)=\"toggleCheck(0)\">Ordenar por nombre de evento</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(1)\" (click)=\"toggleCheck(1)\">Mostrar deudas</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(2)\" (click)=\"toggleCheck(2)\">Mostrar pagos</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(3)\" (click)=\"toggleCheck(3)\">Mostrar transacciones pendientes</p>\n                    </li>\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter(4)\" (click)=\"toggleCheck(4)\">Ordenar por más reciente</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div *ngIf=\"checked[0]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(0)}}</p>\n        </div>\n        <div *ngIf=\"checked[1]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(1)}}</p>\n        </div>\n        <div *ngIf=\"checked[2]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(2)}}</p>\n        </div>\n        <div *ngIf=\"checked[3]\" class=\"col-2\">\n            <p class=\"tag\">{{checkedFilter(3)}}</p>\n        </div>\n        <div *ngIf=\"checked[4]\" class=\"col-3\">\n            <p class=\"tag\">{{checkedFilter(4)}}</p>\n        </div>\n\n    </div>\n    <app-messageConfirm (eventMessageConfirm)=\"onRequest($event)\" [message]=message></app-messageConfirm>\n    <div class=\"row row-cols-1 row-cols-xxl-2 row-cols-xl-2 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-3 divAligment\">\n            <table class=\"table table-hover\">\n                <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\" class=\"transactionTitle\">Evento</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Emisor</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Receptor</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Costo</th>\n                    <th scope=\"col\" class=\"transactionTitle\">Estado</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let transaction of transactions;let i=index\">\n                    <td>\n                        <ng-container *ngIf=\"getEventTransaction(transaction.eventId).eventPhoto != null; else eventImagesDiv\">\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\"\n                                     [src]=\"imagesEvents[transaction.eventId]\" alt=\"\" id=\"detailEvent_photo\">\n                            </p>\n                        </ng-container>\n                        <ng-template #eventImagesDiv>\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\" [src]=\"defaultEventImage\">\n                            </p>\n                        </ng-template>\n                        <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                            <h5 class=\"text\">{{getEventTransaction(transaction.eventId).eventName}}</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"getActor(transaction.senderId).userPhoto != null; else senderImagesDiv\">\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\"\n                                 [src]=\"imagesPartakers[transaction.senderId]\" alt=\"\" id=\"detailSender_photo\">\n                            </p>\n                        </ng-container>\n                        <ng-template #senderImagesDiv>\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                            </p>\n                        </ng-template>\n                        <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                            <h5 class=\"text\">{{getActor(transaction.senderId).userLogin}}</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"getActor(transaction.receiverId).userPhoto != null; else receiverImagesDiv\">\n                        <p class=\"imageP\">\n                            <img class=\"imageTransaction\"\n                                 [src]=\"imagesPartakers[transaction.receiverId]\" alt=\"\" id=\"detailReceiver_photo\">\n                        </p>\n                        </ng-container>\n                        <ng-template #receiverImagesDiv>\n                            <p class=\"imageP\">\n                                <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                            </p>\n                        </ng-template>\n                        <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                            <h5 class=\"text\">{{getActor(transaction.receiverId).userLogin}}</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <p class=\"text cost info\" [ngClass]=\"costColor(transaction)\">{{cost(transaction.cost)}}€</p>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"getStatus(transaction) != 'Pagar' && getStatus(transaction) != 'Confirmar'; else statusDiv\">\n                            <p class=\"text status\">{{getStatus(transaction)}}</p>\n                        </ng-container>\n                        <ng-template #statusDiv>\n                            <button class=\"text status button\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\" (click)=\"messageValue(transaction)\">{{getStatus(transaction)}}</button>\n                        </ng-template>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"transactionPage!=0\"><a class=\"page-link previous\" (click)=\"setTransactionPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"transactionPage+1<totalTransactionPage\"><a class=\"page-link next\" (click)=\"setTransactionPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>\n\n","import {Component, OnInit} from \"@angular/core\";\nimport {MUser} from \"../../../models/MUser\";\nimport {UserUserEventService} from \"../../../services/userUserEvent.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MUserUserEvent} from \"../../../models/MUserUserEvent\";\nimport {EventService} from \"../../../services/event.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {UserService} from \"../../../services/user.service\";\n\n@Component({\n    selector: 'app-transactionHistory',\n    templateUrl: './transactionHistory.component.html',\n    styleUrls: ['./transactionHistory.component.css']\n})\n\nexport class TransactionHistoryComponent implements OnInit {\n    size: number= 6;\n    transactionPage: number = 0;\n    index: number;\n    previous:string;\n    next:string;\n    transactions: MUserUserEvent[] = [];\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultEventImage: string = \"./assets/event7.jpg\";\n    imagesPartakers: {[index:number]: any;} = {};\n    imagesEvents: {[index:number]: any;} = {};\n    searchTransactionValue = \"\";\n    totalTransactionPage:number= 0;\n    transactionPartakers: MUser[] = [];\n    transactionEvents: MEvent[] = [];\n    checked: boolean[] = [false,false,false,false, false];\n    message: string = \"\";\n    selectedTransaction: MUserUserEvent;\n    paid:boolean = false;\n    confirmed: boolean = false;\n\n    constructor(private userUserEventService: UserUserEventService,\n                private userService: UserService,\n                private eventService: EventService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getTransactions();\n    }\n    cost(cost: number): number{\n        return Math.round(cost*100)/100;\n    }\n\n    onRequest($event){\n        if ($event.valueOf() && this.paid){\n            this.updatePaid();\n        }else if ($event.valueOf() && this.confirmed){\n            this.updateConfirmed();\n        }\n    }\n\n    updatePaid(){\n        this.userUserEventService.editPaid(this.selectedTransaction, true).subscribe(()=>{\n            this.getTransactions();\n            this.selectedTransaction = null;\n            this.paid = false;\n        });\n    }\n\n    updateConfirmed(){\n        this.userUserEventService.editConfirmed(this.selectedTransaction, true).subscribe(()=>{\n            this.getTransactions();\n            this.selectedTransaction = null;\n            this.confirmed = false;\n        });\n    }\n\n    messageValue(transaction: MUserUserEvent){\n        this.selectedTransaction = transaction;\n        if (transaction.senderId == this.authenticationService.getUser().id){\n            this.message = \"¿Estás seguro de que quieres confirmar que has pagado?\"\n            this.paid = true;\n        }else if (transaction.receiverId == this.authenticationService.getUser().id){\n            this.message = \"¿Estás seguro de que quieres confirmar que has recibido el pago?\"\n            this.confirmed = true;\n        }else{\n            this.message = \"\";\n        }\n    }\n\n    toggleCheck(index: number){\n        if (index != -1){\n\n            if ((index == 0 && !this.checked[4]) || (index == 4 && !this.checked[0]) || (index == 1 && !this.checked[2]) || (index == 2 && !this.checked[1]) || index == 3) {\n                this.searchTransactionValue = \"\";\n                this.transactionPage = 0;\n                this.checked[index] = !this.checked[index];\n            }\n        }\n            if (this.checked[0] && !this.checked[1] && !this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 0 0 1\n                this.getByEvent();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 0 1 0\n                this.getDebts();\n            } else if (this.checked[0] && this.checked[1] && !this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 0 1 1\n                this.getDebtsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 1 0 0\n                this.getPayments();\n            } else if (this.checked[0] && !this.checked[1] && this.checked[2] && !this.checked[3] && !this.checked[4]) { // 0 0 1 0 1\n                this.getPaymentsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 0 0\n                this.getFinished();\n            } else if (this.checked[0] && !this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 0 1\n                this.getFinishedByEvent();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 1 0\n                this.getFinishedDebts();\n            } else if (this.checked[0] && this.checked[1] && !this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 0 1 1\n                this.getFinishedDebtsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 1 0 0\n                this.getFinishedPayments();\n            } else if (this.checked[0] && !this.checked[1] && this.checked[2] && this.checked[3] && !this.checked[4]) { // 0 1 1 0 1\n                this.getFinishedPaymentsByEvent();\n            } else if (!this.checked[0] && !this.checked[1] && !this.checked[2] && !this.checked[3] && this.checked[4]) { // 1 0 0 0 0\n                this.getByDate();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && !this.checked[3] && this.checked[4]) { // 1 0 0 1 0\n                this.getDebtsByDate();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && !this.checked[3] && this.checked[4]) { // 1 0 1 0 0\n                this.getPaymentsByDate();\n            } else if (!this.checked[0] && !this.checked[1] && !this.checked[2] && this.checked[3] && this.checked[4]) { // 1 1 0 0 0\n                this.getFinishedByDate();\n            } else if (!this.checked[0] && this.checked[1] && !this.checked[2] && this.checked[3] && this.checked[4]) { // 1 1 0 1 0\n                this.getFinishedDebtsByDate();\n            } else if (!this.checked[0] && !this.checked[1] && this.checked[2] && this.checked[3] && this.checked[4]) { // 1 1 1 0 0\n                this.getFinishedPaymentsByDate();\n            } else {\n                this.getTransactions();\n            }\n    }\n\n    getByEvent(){\n        this.userUserEventService.getPageableUserUserEventsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getDebts(){\n        this.userUserEventService.getPageableUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n    totalTransactionDebtsPages(){\n        this.userUserEventService.countUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getDebtsByEvent(){\n        this.userUserEventService.getPageableUserUserEventsDebtsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getPayments(){\n        this.userUserEventService.getPageableUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalTransactionPaymentsPages(){\n        this.userUserEventService.countUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getPaymentsByEvent(){\n        this.userUserEventService.getPageableUserUserEventsPaymentsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinished() {\n        this.userUserEventService.getPageableNotFinishedUserUserEventsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalFinishedTransactionPages(){\n        this.userUserEventService.countFinishedUserUserEventsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getFinishedByEvent(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedDebts(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalFinishedTransactionDebtsPages(){\n        this.userUserEventService.countFinishedUserUserEventsDebtsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getFinishedDebtsByEvent(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsDebtsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedPayments(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    totalFinishedTransactionPaymentsPages(){\n        this.userUserEventService.countFinishedUserUserEventsPaymentsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getFinishedPaymentsByEvent(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsPaymentsByAuthUserByEvent(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getByDate(){\n        this.userUserEventService.getPageableUserUserEventsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n\n    getDebtsByDate(){\n        this.userUserEventService.getPageableUserUserEventsDebtsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getPaymentsByDate(){\n        this.userUserEventService.getPageableUserUserEventsPaymentsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedByDate(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedDebtsByDate(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsDebtsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionDebtsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    getFinishedPaymentsByDate(){\n        this.userUserEventService.getPageableNotFinishedUserUserEventsPaymentsByAuthUserByDate(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalFinishedTransactionPaymentsPages();\n            this.getPartakers();\n            this.getEvents();\n        });\n    }\n\n    checkFilter(index: number):string{\n        if (this.checked[index]){\n            return \"checkFilter\"\n        }else{\n            return \"\";\n        }\n    }\n\n    checkedFilter(index: number): string{\n        if (index == 0){\n            return \"Ordenar por evento\";\n        }else if (index == 1){\n            return \"Deudas\";\n        }else if (index == 2){\n            return \"Pagos\";\n        }else if (index == 3){\n            return \"Pendientes\";\n        }else if (index == 4){\n            return \"Ordenar por más reciente\";\n        }\n\n    }\n\n    costColor(transaction: MUserUserEvent): string {\n        if (this.authenticationService.getUser().id == transaction.senderId){\n            return \"costColor\";\n        }else{\n            return \"\";\n        }\n    }\n\n    getStatus(transaction: MUserUserEvent): string{\n        let message: string = \"\";\n        if (this.authenticationService.getUser().id == transaction.senderId){\n            if (transaction.paid){\n                if (transaction.confirmed){\n                    message = \"Pagado\";\n                }else{\n                    message = \"Pendiente de confirmación\";\n                }\n            }else{\n                message = \"Pagar\";\n            }\n        }else{\n            if (transaction.paid){\n                if (transaction.confirmed){\n                    message = \"Recibido\";\n                }else{\n                    message = \"Confirmar\";\n                }\n            }else{\n                message = \"Pendiente de cobro\";\n            }\n        }\n        return message;\n    }\n\n    getTransactions(){\n        this.userUserEventService.getPageableUserUserEventsByAuthUser(this.authenticationService.getUser().id,this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n            this.getPartakers();\n            this.getEvents();\n\n        });\n    }\n\n    private totalTransactionPages() {\n        this.userUserEventService.countUserUserEventsByAuthUser(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getPartakers(){\n        this.transactions.forEach((transaction)=>{\n            if (this.transactionPartakers.find(partaker => partaker.userId === transaction.senderId) == undefined){\n                this.getUser(transaction.senderId);\n            }\n            if (this.transactionPartakers.find(partaker => partaker.userId === transaction.receiverId) == undefined){\n                this.getUser(transaction.receiverId);\n            }\n        });\n    }\n\n    private getUser(id: number) {\n        this.userService.getUserById(id).subscribe((response) => {\n            this.transactionPartakers.push(response);\n            this.getURLPartaker(response);\n        });\n    }\n\n    private getURLPartaker(partaker: MUser){\n        this.imagesPartakers[partaker.userId] = this.sanitizer.bypassSecurityTrustUrl(partaker.userPhoto);\n    }\n\n    getEvents(){\n        this.transactions.forEach((transaction)=>{\n            if (this.transactionEvents.find(event => event.eventId === transaction.eventId) == undefined){\n                this.getEvent(transaction.eventId);\n            }\n        });\n    }\n\n    private getEvent(id: number){\n        this.eventService.getEvent(id).subscribe((response) => {\n            this.transactionEvents.push(response);\n            this.getURLEvent(response);\n        });\n    }\n\n    private getURLEvent(event: MEvent){\n        if (event.eventPhoto != null){\n            this.imagesEvents[event.eventId] = this.sanitizer.bypassSecurityTrustUrl(event.eventPhoto);\n        }\n    }\n\n    getActor(actorId: number): MUser{\n        let actor: MUser = new MUser();\n        this.transactionPartakers.forEach((partaker) =>{\n            if (partaker.userId == actorId){\n                actor = partaker;\n            }\n        });\n        return actor;\n    }\n\n    getEventTransaction(eventId: number): MEvent{\n        let eventTransaction: MEvent = new MEvent();\n        this.transactionEvents.forEach((event) =>{\n            if (event.eventId == eventId){\n                eventTransaction = event;\n            }\n        });\n        return eventTransaction;\n    }\n\n    paginationClass(){\n        if(this.transactionPage!=0 && this.transactionPage+1<this.totalTransactionPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3\";\n        }else if (this.transactionPage==0 && this.transactionPage+1<this.transactionPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n        }else if(this.transactionPage!=0 && this.transactionPage+1==this.transactionPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    setTransactionPage(page: number){\n        this.transactionPage += page;\n        this.transactionPagination();\n        this.paginationClass();\n    }\n\n    private transactionPagination(){\n        if(this.searchTransactionValue == \"\"){\n            this.toggleCheck(-1);\n        }else{\n            this.searchTransaction();\n        }\n    }\n\n    private searchTransaction(){\n        this.userUserEventService.getPageableSearchUserUserEventsByAuthUser(this.searchTransactionValue, this.authenticationService.getUser().id, this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.searchTransactionTotalPages();\n        });\n    }\n\n    searchTransactionInput(){\n        this.transactionPage=0;\n        this.transactionPagination();\n    }\n\n    private searchTransactionTotalPages(){\n        this.userUserEventService.countSearchUserUserEventsByAuthUser(this.searchTransactionValue, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n}","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-messageConfirm',\n    templateUrl: './messageConfirm.component.html',\n    styleUrls: ['./messageConfirm.component.css']\n})\nexport class MessageConfirmComponent implements OnInit {\n\n    @Output()\n    eventMessageConfirm = new EventEmitter<boolean>();\n\n    _message: string = \"\";\n\n    constructor() {\n    }\n\n    ngOnInit() {}\n\n    get message(){\n        return this._message;\n    }\n\n    @Input() set message(message: string){\n        if (message!= undefined){\n            this._message = message;\n        }\n    }\n\n    onConfirm(value: boolean){\n        this.eventMessageConfirm.emit(value);\n    }\n}","<div class=\"modal fade\" id=\"messageConfirmModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"messageConfirmLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{_message}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 buttons\">\n                            <button type=\"button\" id=\"cancelButton\" data-bs-dismiss=\"modal\" class=\"button close\" (click)=\"onConfirm(false);\">\n                                    Denegar\n                            </button>\n                        </div>\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 buttons\">\n                            <button type=\"button\" id=\"acceptButton\"  data-bs-dismiss=\"modal\" class=\"button\" (click)=\"onConfirm(true);\">\n                                    Aceptar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","<div class=\"modal fade\" id=\"createEventModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createEventLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #createEventForm=\"ngForm\">\n                     <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 file-input imageDiv\">\n                                    <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                               type=\"file\"\n                                               id=\"createEvent_eventPhoto\" name=\"eventPhoto\">\n                                    <label title=\"Cambiar imagen de evento\" for=\"createEvent_eventPhoto\"\n                                               (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                        <ng-container *ngIf=\"event.eventPhoto; else imagesDiv\">\n                                            <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"event.eventPhoto\" alt=\"foto de evento\"\n                                                     id=\"createEvent_photo\">\n                                        </ng-container>\n                                        <ng-template #imagesDiv>\n                                            <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"defaultImage\" alt=\"foto de evento por defecto\">\n                                        </ng-template>\n                                        <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                    </label>\n                                    <div *ngIf=\"imageFormat == false\"\n                                             class=\"alert alert-danger\">\n                                        <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                        </div>\n                                    </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"createEvent_eventName\" name=\"eventName\"\n                                                   class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                                   pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                   title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                                   [(ngModel)]=\"event.eventName\" required\n                                                   #eventNameForm=\"ngModel\">\n                                        <div *ngIf=\"createEventForm.onSubmit(undefined) && eventNameForm.invalid  || eventNameForm.invalid && eventNameForm.value != null\"\n                                                 class=\"alert alert-danger\">\n                                            <div *ngIf=\"eventNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"eventNameForm.errors.pattern\">Máximo 40 caracteres\n                                                    alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <textarea class=\"text-area inputs\" name=\"eventDescription\" rows=\"4\"\n                                                      cols=\"50\"\n                                                      id=\"createEvent_eventDescription\" minlength=\"0\"\n                                                      maxlength=\"100\"\n                                                      name=\"eventDescription\" placeholder=\"Descripción\"\n                                                      pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                      title=\"Puede contener letras y números, máximo 100 caracteres\"\n                                                      [(ngModel)]=\"event.eventDescription\"\n                                                      #eventDescriptionForm=\"ngModel\">\n                                        </textarea>\n                                        <div *ngIf=\"createEventForm.submitted && eventDescriptionForm.invalid  || eventDescriptionForm.invalid && eventDescriptionForm.value!= null\"\n                                                 class=\"alert alert-danger\">\n                                            <div *ngIf=\"eventDescriptionForm.errors.pattern\">Puede contener letras y\n                                                    números, máximo 100 caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row secondDiv\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                               <div class=\"daterangerpicker\"\n                                                 daterangepicker\n                                                 [options]=\"options\"\n                                                 (selected)=\"selectedDate($event)\"\n                                                 (applyDaterangepicker)=\"applyDate()\"\n                                                 (cancelDaterangepicker)=\"cancelDate()\">\n                                    <div class=\"d-flex justify-content-between h-100\">\n                                        <span *ngIf=\"initialDate != undefined\" class=\"ps-2 align-self-center\">\n                                                        {{initialDate | date:'dd/MM/YYYY HH:mm'}} {{finalDate | date:'dd/MM/YYYY HH:mm'}}\n                                        </span>\n                                        <span *ngIf=\"initialDate == undefined\" class=\"placeholder align-self-center\">\n                                                        Fecha y Hora*\n                                        </span>\n                                        <div class=\"align-self-center\">\n                                            <span *ngIf=\"initialDate != undefined\" class=\"cancel\" (click)=\"cancelDate()\">×</span>\n                                            <span class=\"ng-arrow-wrapper\">\n                                                 <span class=\"btn ng-arrow\"><i class=\"bi bi-calendar\"></i></span>\n                                            </span>\n                                        </div>\n                                    </div>\n                               </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                               <input type=\"text\" id=\"createEvent_eventLocation\" name=\"Location\"\n                                                   class=\"inputs\" placeholder=\"Localización\" minlength=\"1\" maxlength=\"40\"\n                                                   pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                   title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                                   [(ngModel)]=\"event.eventLocation\" required\n                                                   #eventLocationForm=\"ngModel\">\n                               <div *ngIf=\"createEventForm.onSubmit(undefined) && eventLocationForm.invalid  || eventLocationForm.invalid && eventLocationForm.value != null\"\n                                                 class=\"alert alert-danger\">\n                                    <div *ngIf=\"eventLocationForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"eventLocationForm.errors.pattern\">Máximo 40 caracteres\n                                                    alfanuméricos\n                                    </div>\n                               </div>\n                            </div>\n                        </div>\n                        <div class=\"row selectRow\">\n                            <ng-select name=\"groups\"\n                                               [items]=\"selectPartakers\"\n                                               bindValue=\"userId\"\n                                               groupBy=\"groupId\"\n                                               placeholder=\"Participantes\"\n                                               (change)=\"changeSelect($event)\"\n                                               (remove)=\"removePartaker($event)\"\n                                               (clear)=\"clearPartakers()\"\n                                               [multiple]=\"true\"\n                                               [closeOnSelect]=\"false\"\n                                               [selectableGroup]=\"true\"\n                                               [selectableGroupAsModel]=\"false\"\n                                               [(ngModel)]=\"eventPartakers\">\n                                <ng-template class=\"text\" ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                                    <div class=\"ng-value\" *ngFor=\"let item of items\">\n                                        <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario\"\n                                                        [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                        class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-container>\n                                        <ng-template #userPhotoDiv>\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario por defecto\"\n                                                        [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                        class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-template>\n                                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\"\n                                                      aria-hidden=\"true\">×</span>\n                                    </div>\n                                </ng-template>\n                                <ng-template ng-option-tmp let-item=\"item\">\n                                    <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                        <span class=\"ng-value-label\" id=\"{{item.groupId + '-'+ item.userId}}\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario de grupo\"\n                                                        [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                        class=\"selectedText listSelect\">{{item.userLogin}}</p></span>\n                                    </ng-container>\n                                    <ng-template #userPhotoDiv>\n                                        <span class=\"ng-value-label\" id=\"{{item.groupId + '-'+item.userId}}\" title=\"{{item.userLogin}}\"><img alt=\"foto de usuario de grupo por defecto\"\n                                                        [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                        class=\"selectedText listSelect\">{{item.userLogin}} </p></span>\n                                    </ng-template>\n                                </ng-template>\n                                <ng-template ng-optgroup-tmp let-item=\"item\">\n                                    <ng-container *ngIf=\"getPartakersByGroupId(item.groupId).groupPhoto; else groupPhotoDiv\">\n                                        <span class=\"ng-value-label\" title=\"{{getPartakersByGroupId(item.groupId).groupName}}\"><img alt=\"foto de grupo\"\n                                                        [src]=\"getPartakersByGroupId(item.groupId).groupPhoto\" class=\"imageSelect\"><p\n                                                        class=\"selectedText listSelect\">{{getPartakersByGroupId(item.groupId).groupName}}</p></span>\n                                    </ng-container>\n                                    <ng-template #groupPhotoDiv>\n                                        <span class=\"ng-value-label\" title=\"{{getPartakersByGroupId(item.groupId).groupName}}\"><img alt=\"foto de grupo por defecto\"\n                                                        [src]=\"defaultGroupImage\" class=\"imageSelect\" *ngIf=\"item.groupId !=0\"><p\n                                                        class=\"selectedText listSelect\">{{getPartakersByGroupId(item.groupId).groupName}} </p></span>\n                                        <span (click)=\"unselectGroup(item.groupId)\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n                                                <path fill-rule=\"evenodd\" d=\"M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z\"/>\n                                                <path fill-rule=\"evenodd\" d=\"M2.146 2.146a.5.5 0 0 0 0 .708l11 11a.5.5 0 0 0 .708-.708l-11-11a.5.5 0 0 0-.708 0Z\"/>\n                                            </svg>\n                                        </span>\n                                    </ng-template>\n                                </ng-template>\n                            </ng-select>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"buttons\">\n                                <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                    Cerrar\n                                </button>\n                            </div>\n                            <div class=\"buttons\">\n                                <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {EventService} from \"../../../services/event.service\";\nimport {MGroup} from \"../../../models/MGroup\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {MGroupMembers} from \"../../../models/MGroupMembers\";\n\n@Component({\n    selector: 'app-createEvent',\n    templateUrl: './createEvent.component.html',\n    styleUrls: ['./createEvent.component.css']\n})\nexport class CreateEventComponent implements OnInit, AfterViewChecked {\n\n    defaultImage = \"./assets/event7.jpg\";\n    defaultUserImage = \"./assets/user16.jpg\";\n    defaultGroupImage = \"./assets/group7_2.jpg\";\n\n    friends: MUser[];\n    groups: MGroup[];\n    selectPartakers: MGroupMembers[];\n\n    imageFormat: boolean;\n    eventPartakers: number[];\n    eventGroups: number[];\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"CREAR EVENTO\";\n    _event: MEvent;\n\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n    public initialDate;\n    public finalDate;\n    public options: any = {\n        autoApply: false,\n        alwaysShowCalendars: true,\n        applyButtonClasses: \"btn-primary applyDate\",\n        buttonClasses: \"btn btn-sm\",\n        cancelClass: \"btn-default cancelDate\",\n        drops: \"up\",\n        locale: {\n            format: 'DD/MM/yyyy HH:mm',\n            \"firstDay\": 1,\n            daysOfWeek: [\n            \"D\",\n            \"L\",\n            \"M\",\n            \"X\",\n            \"J\",\n            \"V\",\n            \"S\"\n            ],\n            monthNames: [\n                \"Enero\",\n                \"Febrero\",\n                \"Marzo\",\n                \"Abril\",\n                \"Mayo\",\n                \"Junio\",\n                \"Julio\",\n                \"Agosto\",\n                \"Septiembre\",\n                \"Octubre\",\n                \"Noviembre\",\n                \"Diciembre\"\n            ]\n        },\n        minDate: new Date(),\n        maxDate: undefined,\n        opens: 'left',\n        showDropdowns: true,\n        timePicker: true\n    };\n\n    constructor(private eventService: EventService,\n                private groupUserService: GroupUserService,\n                private userEventService: UserEventService,\n                private userUserService: UserUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.eventPartakers = [];\n        this.eventGroups = [];\n        this.friends = [];\n        this.groups = [];\n        this.selectPartakers = [];\n    }\n\n    ngAfterViewChecked() {\n        document.getElementsByClassName(\"applyDate\")[0].textContent =\"Aplicar\";\n        document.getElementsByClassName(\"cancelDate\")[0].textContent = \"Cancelar\";\n    }\n\n    get event(){\n        return this._event;\n    }\n\n    @Input() set event(event: MEvent){\n        if (event.eventId != undefined){\n            this._event = event;\n            this.title = \"Editar evento\";\n            this.initialDate = this.event.eventStart;\n            this.finalDate = this.event.eventEnd;\n            this.getPartakers();\n        }else{\n            this._event = new MEvent();\n            this.title = \"Crear evento\";\n            this.initialDate = null;\n            this.finalDate = null;\n        }\n\n        this.eventPartakers = [];\n        this.eventGroups = [];\n        this.selectPartakers = [];\n        this.getGroups();\n    }\n\n    public applyDate(): void {\n        this.event.eventStart =new Date(this.initialDate.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n        this.event.eventEnd = new Date(this.finalDate.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n    }\n\n    public selectedDate(value: any): void {\n        this.initialDate = new Date(value.start);\n        this.finalDate = new Date(value.end);\n    }\n\n    public cancelDate(): void {\n        this.initialDate = undefined;\n        this.finalDate = undefined;\n    }\n\n    onCreate(){\n        this.event.eventOwner = this.authenticationService.getUser().id;\n        this.eventPartakers.push(this.authenticationService.getUser().id);\n        this.eventService.createEvent(this.event).subscribe((response) => {\n            this.eventPartakers.forEach((id)=> {\n                this.userEventService.createUserEvent(response,id).subscribe(() =>{\n                    this.eventSave.emit();\n                });\n            });\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Nuevo evento creado\", \"Se ha creado el evento correctamente.\");\n        });\n\n\n    }\n\n    onEdit(){\n        this.eventPartakers.push(this.authenticationService.getUser().id);\n        this.eventService.editEvent(this.event).subscribe(() => {\n            this.userEventService.editUserEvent(this.event.eventId, this.eventPartakers).subscribe();\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Evento editado\", \"Se ha editado el evento correctamente.\");\n        });\n    }\n\n    onSubmit(){\n        if (this.event.eventId != undefined){\n            this.onEdit();\n        }else{\n            this.onCreate();\n        }\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.event.eventPhoto = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    closeModal(){\n        this.event = new MEvent();\n        this.eventPartakers = [];\n        this.eventGroups = [];\n        this.imageFormat = null;\n        this.cancelDate();\n    }\n\n\n    private getFriends(users: number[]){\n        this.userUserService.getFriends(this.authenticationService.getUser().id).subscribe((response) => {\n            this.friends = response;\n            response.forEach(user=>{\n                if (!Object.values(users).includes(user.userId)){\n                    let member: MGroupMembers = new MGroupMembers();\n                    member.groupId = 0;\n                    member.groupName = \"Otros\";\n                    member.groupPhoto = null;\n                    member.userId = user.userId;\n                    member.userLogin = user.userLogin;\n                    member.userPhoto = user.userPhoto;\n                    this.selectPartakers.push(member);\n                    this.selectPartakers = [... this.selectPartakers];\n                }\n            });\n            this.selectedSelect();\n            this.selectPartakers = this.selectPartakers.sort((a, b) => {\n\n                if (a.groupName > b.groupName) {\n                    return -1;\n                } else {\n                    if (a.groupName == b.groupName) {\n                        if (a.userLogin > b.userLogin) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                    } else {\n                        return 1;\n                    }\n                }\n            })\n        });\n    }\n\n    private getGroups(){\n        let users: number[] = [];\n        this.groupUserService.getGroups(this.authenticationService.getUser().id).subscribe((response) => {\n            this.groups = response;\n            this.groups.forEach(group => {\n                this.groupUserService.getMembers(group.groupId).subscribe((response) =>{\n                    response.forEach(user=>{\n                        let member: MGroupMembers = new MGroupMembers();\n                        if (response.length > 1 && user.userId != this.authenticationService.getUser().id){\n                            member.groupId = group.groupId;\n                            member.groupName = group.groupName;\n                            member.groupPhoto = group.groupPhoto;\n                            member.userId = user.userId;\n                            member.userLogin = user.userLogin;\n                            member.userPhoto = user.userPhoto;\n                            users.push(user.userId);\n                            this.selectPartakers.push(member);\n\n                            this.selectPartakers = [... this.selectPartakers];\n                        }\n                        return;\n                    });\n                });\n                return;\n            });\n            this.getFriends(users);\n        });\n    }\n\n    private getPartakers(){\n        this.userEventService.getPartakers(this.event.eventId).subscribe((response) =>{\n            response.forEach((user)=>{\n                if(user.userId != this.event.eventOwner){\n                    this.eventPartakers.push(user.userId);\n                }\n            });\n            this.eventPartakers = [... this.eventPartakers];\n        });\n\n    }\n\n    private selectedSelect(){\n        this.eventPartakers.forEach(partaker => {\n            this.selectPartakers.map(user => {\n                if (partaker == user.userId){\n                    user.disabled = true;\n                }\n            });\n        });\n        this.selectPartakers = [... this.selectPartakers];\n    }\n\n    public getPartakersByGroupId(id: number): MGroupMembers {\n        return this.selectPartakers.find(group => group.groupId === id);\n    }\n\n    public changeSelect(event) {\n            event.forEach(userSelected => {\n                this.selectPartakers.map(user => {\n                    if (user.userId == userSelected.userId) {\n                        user.disabled = true;\n                    }\n                });\n                this.selectPartakers = [... this.selectPartakers];\n        });\n    }\n\n    public removePartaker(event) {\n            this.selectPartakers.map(user => {\n                if (user.userId == event.value.userId) {\n                    user.disabled = false;\n                }\n            });\n        this.selectPartakers = [... this.selectPartakers];\n    }\n\n    public clearPartakers() {\n        this.eventPartakers = [];\n        this.selectPartakers.map(user => {\n            if (user.disabled == true){\n                user.disabled = false;\n            }\n        });\n        this.selectPartakers = [... this.selectPartakers];\n    }\n\n    public unselectGroup(groupID): void {\n        let userGroup = [];\n        this.selectPartakers.map(user => {\n            if (user.groupId == groupID && this.eventPartakers.includes(user.userId)) {\n                userGroup.push(user.userId);\n                this.eventPartakers = this.eventPartakers.filter(u => u != user.userId);\n            }\n        });\n\n        this.selectPartakers.map(user => {\n            if (userGroup.includes(user.userId)) {\n                user.disabled = false;\n            }\n        });\n\n        this.selectPartakers = [... this.selectPartakers];\n        this.eventPartakers = [... this.eventPartakers];\n    }\n}","<div class=\"modal fade\" id=\"detailEventModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailEventLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onRequest($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{event.eventName}}</h5>\n                <div class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" aria-label=\"opciones\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li><button type=\"button\" *ngIf=\"showButtons() && event.eventOpen\" class=\"dropdown-item buttonText\" title=\"Editar evento\"\n                                    data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#createEventModal\"\n                                    (click)=\"pagePartaker=0\">Editar evento</button></li>\n                        <li><button type=\"button\" *ngIf=\"showButtons()\" class=\"dropdown-item buttonText\" title=\"Eliminar evento\" data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"showDeleteEvent();pagePartaker=0\">Eliminar evento</button></li>\n                        <li><button *ngIf=\"showSetStatus() && event.eventOpen\" type=\"button\" class=\"dropdown-item buttonText\" title=\"Cambiar de estado\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\" (click)=\"messageValue();\">{{statusMessage}}</button></li>\n                        <li><a [href]=\"googleCalendarUrl\" aria-label=\"añadir a google calendar\" target=\"_blank\" type=\"button\" class=\"dropdown-item buttonText\" title=\"googleCalendar\">Añadir a Google Calendar</a></li>\n                        <li><button *ngIf=\"showButtons() && event.eventOpen\" type=\"button\" id=\"close\" class=\"dropdown-item buttonText\" title=\"\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\" (click)=\"closeMessage()\">Finalizar evento</button></li>\n                        <li><button *ngIf=\"show\" (click)=\"showDetailsAndProducts()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"dropdown-item buttonText\" title=\"Gestion evento\">Gestión del evento</button></li>\n                        <li><button *ngIf=\"show && !event.eventOpen\" (click)=\"showTransactions()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"dropdown-item buttonText\" title=\"Transacciones\">Transacciones</button></li>\n                    </ul>\n                </div>\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\" data-bs-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        (click)=\"pagePartaker=0\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"imageEventDiv\">\n                                <ng-container *ngIf=\"event.eventPhoto; else imagesDiv\">\n                                    <img class=\"imageEvent\" [src]=\"event.eventPhoto\" alt=\"foto de evento\"\n                                         id=\"detailUserEvent_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageEvent\" [src]=\"defaultImage\" alt=\"foto de evento por defecto\">\n                                </ng-template>\n                                <div class=\"date text\">\n                                    <img class=\"icon\" src=\"./assets/date.svg\" alt=\"icono de fecha\"\n                                            id=\"detailUserEvent_date\">{{event.eventStart | date: 'dd-MM-yyyy HH:mm'}}\n                                    <p class=\"finalDate\">{{event.eventEnd | date: 'dd-MM-yyyy HH:mm'}}</p></div>\n                                <div class=\"description-row text\"\n                                     name=\"eventLocation\"\n                                     id=\"detailEvent_eventLocation\">\n                                    <img class=\"icon\" src=\"./assets/location.svg\" alt=\"icono de Localizacion\"\n                                         id=\"detailUserEvent_location\">\n                                    {{event.eventLocation}}\n                                </div>\n                                <div class=\"description-row text\"\n                                     name=\"eventDescription\"\n                                     id=\"detailEvent_eventDescription\">\n                                    <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"icono de comentario\"\n                                         id=\"detailUserEvent_description\">{{event.eventDescription}}\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"paginationPartakerDiv col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let user of eventPartakers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-6 members\">\n                                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imagePartaker\" [ngClass]=\"ownerBorder(user.userId)\"\n                                                 [src]=\"user.userPhoto\" alt=\"foto de usuario\" id=\"detailUser_photo\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-container>\n                                    <ng-template #userImagesDiv>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imagePartaker\" alt=\"imagen de usuario por defecto\" [ngClass]=\"ownerBorder(user.userId)\" [src]=\"defaultUserImage\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-template>\n                                </div>\n                                <div *ngIf=\"eventPartakers.length > sizePartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getLessPartakers()\"><a aria-label=\"ver menos\">\n                                    Ver menos</a></div>\n                                <div *ngIf=\"eventPartakers.length < totalPartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getMorePartakers()\"><a aria-label=\"ver mas\">\n                                    Ver más</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationEvent\">\n                            <li [ngClass]=\"previousEvent\" *ngIf=\"previous\">\n                                <a class=\"previousEvent\" (click)=\"setPageEvent(-1); pagePartaker=0\" aria-label=\"anterior\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextEvent\" *ngIf=\"next\">\n                                <a class=\"nextEvent\" (click)=\"setPageEvent(1); pagePartaker=0\" aria-label=\"siguiente\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {EventService} from \"../../../services/event.service\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {STATUS} from \"../../users/listUsers/listUsers.component\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {Router} from \"@angular/router\";\nimport {UserUserEventService} from \"../../../services/userUserEvent.service\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\n\n@Component({\n    selector: 'app-detailEvent',\n    templateUrl: './detailEvent.component.html',\n    styleUrls: ['./detailEvent.component.css']\n})\nexport class DetailEventComponent implements OnInit {\n\n    @Output()\n    eventMessage = new EventEmitter<number>();\n\n    @Output()\n    eventDelete = new EventEmitter<boolean>();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultImage: string = \"./assets/event7.jpg\";\n\n    eventPartakers: MUser[] = [];\n    eventPartakersStored: MUser[] = [];\n    pagePartaker = 0;\n    sizePartaker = 6;\n    totalPartaker: number=0;\n    message: string = \"¿Estás seguro de que quieres salir del evento?\";\n    statusMessage: string = \"\";\n    show: boolean = true;\n\n    previousEvent: string=\"\";\n    nextEvent: string=\"\";\n\n    _previous: boolean = false;\n    _next: boolean = false;\n    _event: MEvent = new MEvent();\n    _status: string =\"\";\n    messageRequest: boolean;\n    close: boolean = false;\n\n    googleCalendarUrl: string = \"\";\n\n    constructor(private eventService: EventService,\n                private productService: ProductService,\n                private userEventService: UserEventService,\n                private userProductService: UserProductService,\n                private userUserEventService: UserUserEventService,\n                private authenticationService: AuthenticationService,\n                private notificationService: NotificationService,\n                private router: Router\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationEventClass();\n    }\n\n    showDetailsAndProducts(){\n        localStorage.setItem(\"products\", JSON.stringify(this.event));\n        this.router.navigateByUrl(\"/products\");\n    }\n\n    showTransactions(){\n        localStorage.setItem(\"transactions\", JSON.stringify(this.event));\n        this.router.navigateByUrl(\"/transactions\");\n    }\n\n    messageValue() {\n        this.messageRequest = true;\n        if (this.status == STATUS.PENDING){\n            this.message = \"¿Quieres aceptar la solicitud para participar en el evento?\";\n        }\n    }\n\n    showDeleteEvent(){\n        this.messageRequest = false;\n        if (this.authenticationService.getUser().id == this.event.eventOwner) {\n            this.message = \"¿Estás seguro de que deseas eliminar el evento? Una vez realizada está acción no se podrá deshacer.\";\n        }\n    }\n\n    showSetStatus(): boolean{\n        if (this.authenticationService.getUser().id != this.event.eventOwner) {\n            this.messageValue();\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    closeMessage(){\n        this.close = true;\n        this.message = \"¿Estás seguro de que deseas cerrar el evento? Una vez realizada está acción no se podrá deshacer.\"\n    }\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationEventClass();\n    }\n\n    get status(){\n        return this._status;\n    }\n\n    @Input() set status( status: string){\n        if (status != undefined){\n            this._status = status;\n            if (status == STATUS.PENDING){\n                this.statusMessage = \"Aceptar o denegar solicitud\";\n                this.show = false;\n            }else{\n                this.statusMessage = \"Salir del evento\";\n                this.show = true;\n            }\n        }\n    }\n\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationEventClass();\n    }\n\n\n    get event(){\n        return this._event;\n    }\n\n    @Input() set event (event: MEvent) {\n        if (event != undefined) {\n            this._event = event;\n            this.partakerReset();\n            if (this.event.eventId != null){\n                this.getPartakers(this.event.eventId);\n                this.getTotalPartakers(this.event.eventId);\n                this.addEventGoogleCalendar(this.event);\n            }else{\n                this._event = new MEvent();\n            }\n        }\n        this.eventPartakers = [];\n        this.eventPartakersStored = [];\n        this.paginationEventClass();\n    }\n\n    onDelete($event){\n        if($event.valueOf()){\n            this.eventService.deleteEvent(this.event.eventId).subscribe(()=>{\n                this.eventDelete.emit();\n                this.notificationService.success(\"Evento eliminado\", \"Se ha eliminado el evento correctamente.\");\n            });\n        }\n    }\n\n    showButtons(): boolean{\n        if (this.event.eventOwner == this.authenticationService.getUser().id){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    showButtonStatus(): boolean{\n       if (this.showButtons() && this.status == STATUS.PENDING){\n           return true;\n       }else{\n           return false;\n       }\n    }\n\n    closeEvent(){\n        this.userEventService.sumTotalEventExpense(this.event.eventId).subscribe((totalEventExpense) =>{\n            this.productService.sumTotalProductCost(this.event.eventId).subscribe((totalProductCost) =>{\n                if (totalProductCost == totalEventExpense){\n                    this.productService.getAllProductsPartakers(this.event.eventId).subscribe((response) => {\n                       if (response){\n                           this.eventService.editOpen(this.event.eventId, false).subscribe(() => {\n                               this.userUserEventService.createUserUserEvent(this.event.eventId).subscribe(()=>{\n                                   this.showTransactions();\n                               });\n                           });\n                       }else{\n                           this.notificationService.warning(\"Comprueba que todos los productos tienen al menos un participante.\", \"No es pposible finalizar el evento\");\n                       }\n                    });\n                }else{\n                    this.notificationService.warning(\"Comprueba que el dinero adelantado para el evento es igual al dinero gastado por el evento.\", \"No es posible finalizar el evento\");\n                }\n            });\n        });\n    }\n\n    ownerLabel(userId:number):string{\n        let value:string = \"\";\n        if (userId == this.event.eventOwner){\n            value = \"Administrador\";\n        }\n        return value;\n    }\n\n    ownerBorder(userId: number):string{\n        if(userId == this.event.eventOwner){\n            return \"owner\";\n        }\n    }\n\n    setPageEvent(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    getPartakers(eventId:number){\n        this.userEventService.getPageablePartakers(eventId,this.pagePartaker, this.sizePartaker).subscribe((response) => {\n            this.eventPartakers.push(...response);\n        });\n    }\n\n    getTotalPartakers(eventId:number){\n        this.userEventService.countPartakers(eventId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getMorePartakers(){\n        this.pagePartaker +=1;\n        if (this.eventPartakers.length < this.eventPartakersStored.length){\n            this.eventPartakers = this.eventPartakersStored.slice(0,this.sizePartaker*(this.pagePartaker+1));\n        }else{\n            this.getPartakers(this.event.eventId);\n        }\n    }\n\n    getLessPartakers(){\n        if (this.eventPartakersStored.length != this.totalPartaker){\n            this.eventPartakersStored = this.eventPartakers;\n            this.eventPartakers = this.eventPartakers.slice(0,this.sizePartaker*this.pagePartaker);\n        }else{\n            this.eventPartakers = this.eventPartakersStored.slice(0, this.sizePartaker*this.pagePartaker);\n        }\n        this.pagePartaker -=1;\n    }\n\n    partakerReset(){\n        this.eventPartakers = [];\n        this.eventPartakersStored = [];\n        this.pagePartaker = 0;\n    }\n\n    private paginationEventClass(){\n        if(this._previous && this._next){\n            this.previousEvent = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n                this.nextEvent = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this._previous && this._next){\n            this.previousEvent = \"\";\n            this.nextEvent = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this._previous && !this._next){\n            this.previousEvent = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextEvent = \"\";\n        }else{\n            this.previousEvent = \"\";\n            this.nextEvent = \"\";\n        }\n    }\n\n\n    onRequest($event){\n        if (this.close && $event.valueOf()){\n            this.closeEvent();\n            this.close = false;\n        }else{\n            if (this.messageRequest){\n                this.setStatus($event);\n                this.eventMessage.emit();\n            }else if (!this.messageRequest) {\n                this.onDelete($event);\n            }\n        }\n    }\n\n    setStatus($event){\n        if ($event.valueOf() && this.status == STATUS.PENDING){\n            this.userEventService.editStatus(this.event.eventId, this.authenticationService.getUser().id).subscribe();\n        }else{\n\n            this.userEventService.deleteUserEvent(this.event.eventId, this.authenticationService.getUser().id).subscribe();\n        }\n    }\n\n\n    addEventGoogleCalendar(event: MEvent){\n        let startDate: string = this.event.eventStart.replace(new RegExp(' ', 'g'), 'T').replace(new RegExp(':', 'g'), '').replace(new RegExp('-', 'g'), '');\n        let endDate: string = this.event.eventEnd.replace(new RegExp(' ', 'g'), 'T').replace(new RegExp(':', 'g'), '').replace(new RegExp('-', 'g'), '');\n        let date: string = startDate.substring(0,9) + (parseInt(startDate.substring(9))+20000).toString() + \"/\" + endDate.substring(0,9) + (parseInt(endDate.substring(9))+20000).toString();\n        let title: string = this.event.eventName.replace(new RegExp(' ', 'g'), '+');\n        let location: string = this.event.eventLocation.replace(new RegExp(' ', 'g'), '+');\n        let description: string = this.event.eventDescription.replace(new RegExp(' ', 'g'), '+');\n        this.googleCalendarUrl = \"https://calendar.google.com/calendar/u/0/r/eventedit?text=\" + title + \"&dates=\" + date + \"&details=\" + description + \"&location=\" + location + \"&sf=true&output=xml\";\n    }\n}","<section>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-7 col-xl-7 col-lg-7 col-md-8 col-sm-9 col-10\">\n            <form ngNativeValidate (input)=\"searchInput()\" #searchEventsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_eventName\" name=\"eventName\" placeholder=\"Buscar por nombre de evento\"\n                           [(ngModel)]=\"eventName\" required #eventNameForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 dropd\">\n            <div class=\"dropdown dropAlign\">\n                <a class=\"btn btn-neutral dropdown-toggle\" aria-label=\"filtros\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <i class=\"zmdi zmdi-more-vert iSize\"></i>\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                    <li>\n                        <p class=\"filterSearch\" [ngClass]=\"checkFilter()\" (click)=\"toggleCheck()\">Eventos finalizados</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-2 col-sm-2 col-5 createFirstDiv\">\n            <button type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createEventModal\" (click)=\"setEvent();\">Añadir</button>\n        </div>\n    </div>\n    <div *ngIf=\"checked\" class=\"row\">\n        <p class=\"tag\">Finalizados</p>\n    </div>\n\n    <app-createEvent (eventSave)=\"getEvents();\" [event]=\"selectedEvent\"></app-createEvent>\n    <app-detailEvent (eventDelete)=\"getEvents();\" (eventDetail)=\"setSelectedEvent($event)\" (eventMessage)=\"getEvents()\" [event]=\"selectedEvent\" [previous] = \"getPrevious()\" [next] = \"getNext()\" [status] =\"selectedStatus\"></app-detailEvent>\n\n    <div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4 divAligment\">\n        <ng-container *ngIf=\"events.length != 0; else eventsDiv\">\n            <div *ngFor=\"let event of events;let i=index\">\n                <div class=\"col\">\n                    <div class=\"card mb-3 color\" id=\"detailEventCard\" data-bs-toggle=\"modal\" data-bs-target=\"#detailEventModal\"\n                         (click)=\"selectEvent(i)\">\n                        <div class=\"row g-0\">\n                            <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5 divAligment\">\n                                <ng-container *ngIf=\"event.eventPhoto != null; else imagesDiv\">\n                                    <img class=\"image\" alt=\"imagen de evento\" [src]=\"images[event.eventId]\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"image\" alt=\"imagen de evento por defecto\" [src]=\"defaultImage\">\n                                </ng-template>\n                            </div>\n                            <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7 divAligment\">\n                                <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                                    <h5 class=\"title\">{{event.eventName}}</h5>\n                                    <p class=\"card-text\">\n                                        <a class=\"message\" aria-label=\"estado\">{{status[event.eventId]}}</a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #eventsDiv>\n            <p class=\"text\">NO EXISTEN EVENTOS</p>\n        </ng-template>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"page!=0\"><a aria-label=\"anterior\" class=\"page-link previous\" (click)=\"setPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"page+1<totalPage\"><a aria-label=\"siguiente\" class=\"page-link next\" (click)=\"setPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>","import {Component, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {STATUS} from \"../../users/listUsers/listUsers.component\";\n\n@Component({\n    selector: 'app-events',\n    templateUrl: './listEvents.component.html',\n    styleUrls: ['./listEvents.component.css']\n})\nexport class ListEventsComponent implements OnInit {\n    eventName = \"\";\n    events: MEvent[] = [];\n    images: {[index:number]: any;} = {};\n    status: {[index: number]: any;} = {};\n    defaultImage: string = \"./assets/event7.jpg\";\n    totalPage:number= 0;\n    page: number= 0;\n    selectedEvent: MEvent = new MEvent();\n    selectedStatus: string =\"\";\n    size: number= 6;\n    index: number;\n    previous:string;\n    next:string;\n    pageDirection: number;\n    checked: boolean;\n\n    constructor(private userEventService: UserEventService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getEvents();\n        this.paginationClass();\n        this.checked = false;\n    }\n\n    toggleCheck(){\n        this.page = 0;\n        this.checked = !this.checked;\n        this.pagination();\n    }\n\n    checkFilter():string{\n        if (this.checked){\n            return \"checkFilter\"\n        }else{\n            return \"\";\n        }\n    }\n\n    setEvent(){\n        this.selectedEvent = new MEvent();\n    }\n\n    selectEvent(index:number){\n        this.selectedEvent = this.events[index];\n        this.selectedStatus = this.status[this.selectedEvent.eventId];\n        this.index = index;\n    }\n\n    setSelectedEventPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n            }\n            this.selectedEvent = this.events[this.index];\n            this.selectedStatus = this.status[this.index];\n        }\n    }\n\n    getEvents(){\n        this.userEventService.getPageableEvents(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.getURL(response);\n            this.totalPages();\n        });\n    }\n\n    getEventsWithFinished(){\n        this.userEventService.getPageableEventsWithFinished(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.getURL(response);\n            this.totalPagesWithFinished();\n        });\n    }\n\n    paginationClass(){\n        if(this.page!=0 && this.page+1<this.totalPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\";\n        }else if (this.page==0 && this.page+1<this.totalPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 cpl-12\";\n        }else if(this.page!=0 && this.page+1==this.totalPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    setPage(page: number){\n        this.page += page;\n        this.pagination();\n        this.paginationClass();\n    }\n\n    private pagination(){\n        if (this.checked){\n            if(this.eventName == \"\"){\n                this.getEventsWithFinished();\n            }else{\n                this.searchWithFinished();\n            }\n        }else{\n            if(this.eventName == \"\"){\n                this.getEvents();\n            }else{\n                this.search();\n            }\n        }\n    }\n\n    private getURL(events: MEvent[]){\n        events.forEach((event) => {\n            this.images[event.eventId] = this.sanitizer.bypassSecurityTrustUrl(event.eventPhoto);\n        });\n    }\n\n    private search(){\n        this.userEventService.getPageableSearchEvents(this.eventName, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.searchTotalPages();\n            this.getURL(response);\n        });\n    }\n\n    private searchWithFinished(){\n        this.userEventService.getPageableSearchEventsWithFinished(this.eventName, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.events = response;\n            this.setSelectedEventPage();\n            this.getStatus(response);\n            this.searchTotalPagesWithFinished();\n            this.getURL(response);\n        });\n    }\n\n    searchInput(){\n        this.page=0;\n        this.pagination();\n    }\n\n    private totalPages() {\n        this.userEventService.countEvents(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private totalPagesWithFinished(){\n        this.userEventService.countEventsWithFinished(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPages(){\n        this.userEventService.countSearchEvents(this.eventName, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPagesWithFinished(){\n        this.userEventService.countSearchEventsWithFinished(this.eventName, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getNext (): boolean{\n        if (this.page != this.totalPage-1 || this.events[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getPrevious():boolean{\n        if (this.page != 0 || this.events[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    setSelectedEvent(event: number) {\n        this.pageDirection = event.valueOf();\n        if ( this.events[this.index + event.valueOf()] != undefined){\n            this.selectEvent(this.index + event.valueOf());\n        }else{\n            this.setPage(event.valueOf());\n\n        }\n    }\n\n    private statusValue (statusBD: boolean): string {\n        let status: string;\n        if (statusBD) {\n            status = STATUS.FOLLOW;\n        }else if (!statusBD){\n            status = STATUS.PENDING;\n        }else{\n            status = STATUS.REQUEST;\n        }\n        return status;\n    }\n\n    private getStatus (mEvents: MEvent[]) {\n        mEvents.forEach((mEvent) => {\n            this.userEventService.getUserEvent(mEvent.eventId, this.authenticationService.getUser().id).subscribe((response) => {\n                this.status[mEvent.eventId] = this.statusValue(response.accept);\n            });\n        });\n    }\n}","<div class=\"modal fade\" id=\"createGroupModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createGroupLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n         <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #createUserGroupForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 file-input imageDiv\">\n                                <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                       type=\"file\"\n                                       id=\"createUserGroup_userGroupPhoto\" name=\"userGroupPhoto\">\n                                <label title=\"Cambiar imagen de grupo\" for=\"createUserGroup_userGroupPhoto\"\n                                       (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                    <ng-container *ngIf=\"userGroup.groupPhoto; else imagesDiv\">\n                                        <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"userGroup.groupPhoto\" alt=\"imagen de grupo\"\n                                             id=\"createUserGroup_photo\">\n                                    </ng-container>\n                                    <ng-template #imagesDiv>\n                                        <img class=\"image imageColor2\" alt=\"imagen de grupo por defecto\" [ngClass]=\"imageColor\" [src]=\"defaultImage\">\n                                    </ng-template>\n                                    <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                </label>\n                                <div *ngIf=\"imageFormat == false\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"createUserGroup_userGroupName\" name=\"userGroupName\"\n                                               class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"userGroup.groupName\" required\n                                               #userGroupNameForm=\"ngModel\" value=\"gggg\">\n                                        <div *ngIf=\"createUserGroupForm.onSubmit(undefined) && userGroupNameForm.invalid  || userGroupNameForm.invalid && userGroupNameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userGroupNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"userGroupNameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <textarea class=\"text-area inputs\" name=\"userGroupDescription\" rows=\"4\"\n                                                  cols=\"50\"\n                                                  id=\"createUserGroup_userGroupDescription\" minlength=\"0\"\n                                                  maxlength=\"100\"\n                                                  name=\"userGroupDescription\" placeholder=\"Descripción\"\n                                                  pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                  title=\"Puede contener letras y números, máximo 100 caracteres\"\n                                                  [(ngModel)]=\"userGroup.groupDescription\"\n                                                  #userGroupDescriptionForm=\"ngModel\">\n                                        </textarea>\n                                        <div *ngIf=\"createUserGroupForm.submitted && userGroupDescriptionForm.invalid  || userGroupDescriptionForm.invalid && userGroupDescriptionForm.value!= null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"userGroupDescriptionForm.errors.pattern\">Puede contener letras y\n                                                números, máximo 100 caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <div class=\"row\">\n                            <ng-select class=\"text\" id=\"createUserGroup_userGroupMembers\" name=\"userGroupMembers\"\n                                       [items]=\"friends\"\n                                       [multiple]=\"true\"\n                                       [closeOnSelect]=\"false\"\n                                       [hideSelected]=\"true\"\n                                       bindLabel=\"userLogin\"\n                                       bindValue=\"userId\"\n                                       placeholder=\"Participantes\"\n                                       [(ngModel)]=\"groupMembers\">\n                                <ng-template class=\"text\" ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                                    <div class=\"ng-value\" *ngFor=\"let item of items \">\n                                        <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario\"\n                                                    [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                    class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-container>\n                                        <ng-template #userPhotoDiv>\n                                            <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario por defecto\"\n                                                    [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                    class=\"selectedText\">{{item.userLogin}}</p></span>\n                                        </ng-template>\n                                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\"\n                                              aria-hidden=\"true\">×</span>\n                                    </div>\n                                </ng-template>\n                                <ng-template ng-option-tmp let-item=\"item\">\n                                    <ng-container *ngIf=\"item.userPhoto; else userPhotoDiv\">\n                                        <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario\"\n                                                [src]=\"item.userPhoto\" class=\"imageSelect\"><p\n                                                class=\"selectedText listSelect\">{{item.userLogin}}</p></span>\n                                    </ng-container>\n                                    <ng-template #userPhotoDiv>\n                                        <span class=\"ng-value-label\" title=\"{{item.userLogin}}\"><img alt=\"usuario por defecto\"\n                                                [src]=\"defaultUserImage\" class=\"imageSelect\"><p\n                                                class=\"selectedText listSelect\">{{item.userLogin}} </p></span>\n                                    </ng-template>\n                                </ng-template>\n                            </ng-select>\n\n                    </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"buttons\">\n                            <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                Cerrar\n                            </button>\n                        </div>\n                        <div class=\"buttons\">\n                            <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {GroupService} from \"../../../services/group.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MGroup} from \"../../../models/MGroup\";\n\n@Component({\n    selector: 'app-createGroup',\n    templateUrl: './createGroup.component.html',\n    styleUrls: ['./createGroup.component.css']\n})\nexport class CreateGroupComponent implements OnInit {\n\n    defaultImage = \"./assets/group7_2.jpg\";\n    defaultUserImage = \"./assets/user16.jpg\";\n    friends: MUser[];\n    imageFormat: boolean;\n    groupMembers: number[];\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"CREAR GRUPO\";\n    _userGroup: MGroup;\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n\n    constructor(private groupService: GroupService,\n                private groupUserService: GroupUserService,\n                private userUserService: UserUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.groupMembers = [];\n        this.friends = [];\n    }\n\n    get userGroup(){\n        return this._userGroup;\n    }\n\n    @Input() set userGroup(userGroup: MGroup){\n        if (userGroup.groupId != undefined){\n            this._userGroup = userGroup;\n            this.title = \"Editar grupo\";\n            this.getMembers();\n        }else{\n            this._userGroup = new MGroup();\n            this.title = \"Crear grupo\";\n        }\n        this.groupMembers = [];\n        this.getFriends();\n    }\n\n    onSubmit(){\n        if (this.userGroup.groupId != undefined){\n            this.onEdit();\n        }else{\n            this.onCreate();\n        }\n    }\n\n    onCreate() {\n            this.userGroup.groupOwner = this.authenticationService.getUser().id;\n            this.groupMembers.push(this.authenticationService.getUser().id);\n            this.groupService.createGroup(this.userGroup).subscribe((response) => {\n                this.groupMembers.forEach((id)=> {\n                    this.groupUserService.createGroupUser(response,id).subscribe(() =>{\n                        this.eventSave.emit();\n                    });\n                });\n                this.closeModal();\n                document.getElementById(\"closeButton\").click();\n                this.notificationService.success(\"Nuevo grupo creado\", \"Se ha creado el grupo correctamente.\");\n            });\n    }\n\n    onEdit(){\n        this.groupMembers.push(this.authenticationService.getUser().id);\n        this.groupService.editGroup(this.userGroup).subscribe(() => {\n            this.groupUserService.editGroupUser(this.userGroup.groupId, this.groupMembers).subscribe();\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Grupo editado\", \"Se ha editado el grupo correctamente.\");\n        });\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.userGroup.groupPhoto = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    closeModal(){\n        this.userGroup = new MGroup();\n        this.groupMembers = [];\n        this.imageFormat = null;\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n\n    private getFriends(){\n        this.userUserService.getFriends(this.authenticationService.getUser().id).subscribe((response) => {\n            this.friends = response;\n        });\n    }\n\n    private getMembers(){\n        this.groupUserService.getMembers(this.userGroup.groupId).subscribe((response) =>{\n            response.forEach((user)=>{\n                if(user.userId != this.userGroup.groupOwner){\n                    this.groupMembers.push(user.userId);\n                }\n            });\n            this.groupMembers = [... this.groupMembers];\n        });\n\n    }\n}","<div class=\"modal fade\" id=\"detailGroupModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailGroupLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onDelete($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{userGroup.groupName}}</h5>\n                <div class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" aria-label=\"opciones en grupo\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li><button type=\"button\" *ngIf=\"showButtons()\" class=\"dropdown-item buttonText\" title=\"Editar grupo\"\n                                    data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#createGroupModal\"\n                                    (click)=\"pageMember=0\">Editar</button></li>\n                        <li><button type=\"button\" *ngIf=\"showButtons()\" class=\"dropdown-item buttonText\" title=\"Eliminar grupo\"  data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"messageValue(false);pageMember=0\">Eliminar</button></li>\n                        <li><button type=\"button\" *ngIf=\"!showButtons()\" class=\"dropdown-item buttonText\" title=\"Salir del grupo\"  data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"messageValue(true);pageMember=0\">Salir del grupo</button></li>\n                    </ul>\n                </div>\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\" data-bs-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        (click)=\"pageMember=0\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"imageGroupDiv\">\n                                <ng-container *ngIf=\"userGroup.groupPhoto; else imagesDiv\">\n                                    <img class=\"imageGroup\" [src]=\"userGroup.groupPhoto\" alt=\"imagen de grupo\"\n                                         id=\"detailUserGroup_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageGroup\" [src]=\"defaultImage\" alt=\"imagen de grupo por defecto\">\n                                </ng-template>\n                            </div>\n                            <!--<div class=\"date text\">\n                                    Creación: {{userGroup.groupCreation | date: 'dd-MM-yyyy'}}</div>-->\n                            <div *ngIf=\"userGroup.groupDescription!='' && userGroup.groupDescription!= null\" class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 description-row text\"\n                                 name=\"userGroupDescription\"\n                                 id=\"detailUserGroup_userGroupDescription\">\n                                <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"icono de descripcion\">{{userGroup.groupDescription}}\n                            </div>\n                        </div>\n\n                        <div class=\"paginationMemberDiv col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let user of groupMembers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-6 members\">\n                                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imageMember\" [ngClass]=\"ownerBorder(user.userId)\"\n                                               [src]=\"user.userPhoto\" alt=\"imagen miembro de grupo\" id=\"detailUser_photo\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"member\">\n                                          {{user.userLogin}}\n                                        </p>\n                                    </ng-container>\n                                    <ng-template #userImagesDiv>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                                            <img class=\"imageMember\" alt=\"imagen miembro de grupo por defecto\" [ngClass]=\"ownerBorder(user.userId)\" [src]=\"defaultUserImage\">\n                                        </p>\n                                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"member\">\n                                          {{user.userLogin}}\n                                        </p>\n                                    </ng-template>\n                                </div>\n                                <div *ngIf=\"groupMembers.length > sizeMember\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getLessMembers()\"><a aria-label=\"ver menos\">\n                                    Ver menos</a></div>\n                                <div *ngIf=\"groupMembers.length < totalMembers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getMoreMembers()\"><a aria-label=\"ver mas\">\n                                    Ver más</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationUserGroup\">\n                            <li [ngClass]=\"previousUserGroup\" *ngIf=\"previous\">\n                                <a class=\"previousUserGroup\" aria-label=\"anterior\" (click)=\"setPageUserGroup(-1); pageMember=0\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextUserGroup\" *ngIf=\"next\">\n                                <a class=\"nextUserGroup\" aria-label=\"siguiente\" (click)=\"setPageUserGroup(1); pageMember=0\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {GroupService} from \"../../../services/group.service\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MGroup} from \"../../../models/MGroup\";\n\n@Component({\n    selector: 'app-detailGroup',\n    templateUrl: './detailGroup.component.html',\n    styleUrls: ['./detailGroup.component.css']\n})\nexport class DetailGroupComponent implements OnInit {\n\n    @Output()\n    eventDelete = new EventEmitter<boolean>();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultImage: string = \"./assets/group7_2.jpg\";\n\n    groupMembers: MUser[] = [];\n    groupMembersStored: MUser[] = [];\n    pageMember = 0;\n    sizeMember = 6;\n    totalMembers: number=0;\n    message: string = \"\";\n    delete: string = \"\";\n\n    previousUserGroup: string=\"\";\n    nextUserGroup: string=\"\";\n\n    _previous: boolean = false;\n    _next: boolean = false;\n    _userGroup: MGroup = new MGroup();\n\n    constructor(private groupService: GroupService,\n                private groupUserService: GroupUserService,\n                private authenticationService: AuthenticationService,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationUserGroupClass();\n    }\n\n    messageValue(request: boolean){\n        if (!request && this.authenticationService.getUser().id == this.userGroup.groupOwner){\n            this.message = \"¿Estás seguro de que deseas eliminar el grupo?\";\n        }else{\n            this.message = \"¿Estás seguro de que quieres salir del grupo?\";\n        }\n    }\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationUserGroupClass();\n    }\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationUserGroupClass();\n    }\n\n\n    get userGroup(){\n        return this._userGroup;\n    }\n\n    @Input() set userGroup (userGroup: MGroup) {\n        if (userGroup != undefined) {\n            this._userGroup = userGroup;\n            this.membersReset();\n            if (this.authenticationService.getUser().id == this.userGroup.groupOwner){\n                this.delete = \"Eliminar\";\n            }else{\n                this.delete = \"Salir\";\n            }\n            if (this.userGroup.groupId != null){\n                this.getMembers(this.userGroup.groupId);\n                this.getTotalMembers(this.userGroup.groupId);\n            }else{\n                this._userGroup = new MGroup();\n            }\n        }\n        this.groupMembers = [];\n        this.groupMembersStored = [];\n        this.paginationUserGroupClass();\n    }\n\n    onDelete($event){\n        if($event.valueOf()){\n            if (this.userGroup.groupOwner == this.authenticationService.getUser().id){\n                this.groupService.deleteGroup(this.userGroup.groupId).subscribe(()=>{\n                        this.eventDelete.emit();\n                        this.notificationService.success(\"Grupo eliminado\", \"Se ha eliminado el grupo correctamente.\");\n\n                    }\n                );\n            }else{\n                this.groupUserService.deleteGroupUser(this.userGroup.groupId, this.authenticationService.getUser().id).subscribe(() => {\n                    this.eventDelete.emit();\n                    this.notificationService.success(\"Eliminado del grupo\", \"Ya no eres miembro de este grupo.\");\n                });\n            }\n        }\n    }\n\n    showButtons(): boolean{\n        if (this.userGroup.groupOwner == this.authenticationService.getUser().id){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    ownerLabel(userId:number):string{\n        let value:string = \"\";\n        if (userId == this.userGroup.groupOwner){\n            value = \"Administrador\";\n        }\n        return value;\n    }\n\n    ownerBorder(userId: number):string{\n        if(userId == this.userGroup.groupOwner){\n            return \"owner\";\n        }\n    }\n\n    setPageUserGroup(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    getMembers(groupId:number){\n        this.groupUserService.getPageableMembers(groupId,this.pageMember, this.sizeMember).subscribe((response) => {\n            this.groupMembers.push(...response);\n        });\n    }\n\n    getTotalMembers(groupId:number){\n        this.groupUserService.countMembers(groupId).subscribe((number)=>{\n            this.totalMembers = number;\n        });\n    }\n\n    getMoreMembers(){\n        this.pageMember +=1;\n        if (this.groupMembers.length < this.groupMembersStored.length){\n            this.groupMembers = this.groupMembersStored.slice(0,this.sizeMember*(this.pageMember+1));\n        }else{\n            this.getMembers(this.userGroup.groupId);\n        }\n    }\n\n    getLessMembers(){\n        if (this.groupMembersStored.length != this.totalMembers){\n            this.groupMembersStored = this.groupMembers;\n            this.groupMembers = this.groupMembers.slice(0,this.sizeMember*this.pageMember);\n        }else{\n            this.groupMembers = this.groupMembersStored.slice(0, this.sizeMember*this.pageMember);\n        }\n        this.pageMember -=1;\n    }\n\n    membersReset(){\n        this.groupMembers = [];\n        this.groupMembersStored = [];\n        this.pageMember = 0;\n    }\n\n\n    private paginationUserGroupClass(){\n        if(this.previous && this.next){\n            this.previousUserGroup = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextUserGroup = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this.previous && this.next){\n            this.previousUserGroup = \"\";\n            this.nextUserGroup = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.previous && !this.next){\n            this.previousUserGroup = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextUserGroup = \"\";\n        }else{\n            this.previousUserGroup = \"\";\n            this.nextUserGroup = \"\";\n        }\n    }\n}","<div class=\"searchDiv row\">\n    <div class=\"col-xxl-7 col-xl-7 col-lg-7 col-md-8 col-sm-9 col-10\">\n        <form ngNativeValidate (input)=\"searchInput()\" #searchGroupsForm=\"ngForm\">\n            <input type=\"search\" id=\"groups_groupName\" name=\"groupName\" placeholder=\"Buscar por nombre de grupo\"\n                   [(ngModel)]=\"groupName\" required #userGroupNameForm=\"ngModel\" aria-label=\"Search\">\n        </form>\n    </div>\n    <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-12 createDiv\">\n        <button type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createGroupModal\" (click)=\"setGroup();\">Añadir</button>\n    </div>\n</div>\n<app-createGroup (eventSave)=\"getGroups();\" [userGroup]=\"this.selectedUserGroup\"></app-createGroup>\n<app-detailGroup (eventDelete)=\"getGroups();\" (eventDetail)=\"setSelectedUserGroup($event)\" [userGroup]=\"selectedUserGroup\" [previous] = \"getPrevious()\" [next] = \"getNext()\"></app-detailGroup>\n<div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4 divAligment\">\n    <ng-container *ngIf=\"groups.length !=0; else groupsDiv\">\n        <div *ngFor=\"let group of groups;let i=index\">\n            <div class=\"col\">\n                <div class=\"card mb-3 color\" id=\"detailGroupCard\" data-bs-toggle=\"modal\" data-bs-target=\"#detailGroupModal\"\n                     (click)=\"selectUserGroup(i)\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5 divAligment\">\n                            <ng-container *ngIf=\"group.groupPhoto != null; else imagesDiv\">\n                                <img class=\"image\" [src]=\"images[group.groupId]\" alt=\"imagen de grupo\">\n                            </ng-container>\n                            <ng-template #imagesDiv>\n                                <img class=\"image\" [src]=\"defaultImage\" alt=\"imagen de grupo por defecto\">\n                            </ng-template>\n                        </div>\n                        <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7 divAligment\">\n                            <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                                <h5 class=\"title\">{{group.groupName}}</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #groupsDiv>\n        <p class=\"text\">No existen grupos</p>\n    </ng-template>\n\n</div>\n<div class=\"paginationDiv\">\n    <ul class=\"row pagination\">\n        <li class=\"page-product\" [ngClass]=\"previousClass\" *ngIf=\"page!=0\"><a class=\"page-link previous\" aria-label=\"anterior\" (click)=\"setPage(-1)\">Anterior</a>\n        </li>\n        <li class=\"page-product\" [ngClass]=\"nextClass\" *ngIf=\"page+1<totalPage\"><a class=\"page-link next\" aria-label=\"siguiente\" (click)=\"setPage(1)\">Siguiente</a>\n        </li>\n    </ul>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MGroup} from \"../../../models/MGroup\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\n\n@Component({\n    selector: 'app-groups',\n    templateUrl: './listGroups.component.html',\n    styleUrls: ['./listGroups.component.css']\n})\nexport class ListGroupsComponent implements OnInit {\n    groupName = \"\";\n    groups: MGroup[] = [];\n    images: {[index:number]: any;} = {};\n    defaultImage = \"./assets/group7_2.jpg\";\n    totalPage:number= 0;\n    page: number= 0;\n    selectedUserGroup: MGroup = new MGroup();\n    size: number= 6;\n    index: number;\n    previousClass:string;\n    nextClass:string;\n    pageDirection: number;\n\n    constructor(private groupUserService: GroupUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getGroups();\n        this.paginationClass();\n    }\n\n    setGroup(){\n        this.selectedUserGroup = new MGroup();\n    }\n\n    selectUserGroup(index:number){\n        this.selectedUserGroup = this.groups[index];\n        this.index = index;\n    }\n\n    setSelectedUserGroupPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n                this.selectedUserGroup = this.groups[this.index];\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n                this.selectedUserGroup = this.groups[this.index];\n            }\n        }\n    }\n\n    getGroups(){\n        this.groupUserService.getPageableGroups(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.groups = response;\n            this.setSelectedUserGroupPage();\n            this.getURL(response);\n            this.totalPages();\n        });\n    }\n\n    paginationClass(){\n        if(this.page!=0 && this.page+1<this.totalPage){\n            this.previousClass = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-6\";\n            this.nextClass = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-6\";\n        }else if (this.page==0 && this.page+1<this.totalPage){\n            this.previousClass = \"\";\n            this.nextClass = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n        }else if(this.page!=0 && this.page+1==this.totalPage){\n            this.previousClass = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n            this.nextClass = \"\";\n        }else{\n            this.previousClass = \"\";\n            this.nextClass = \"\";\n        }\n    }\n\n    setPage(page: number){\n        this.page += page;\n        this.pagination();\n        this.paginationClass();\n    }\n\n    private pagination(){\n        if(this.groupName == \"\"){\n            this.getGroups();\n        }else{\n            this.search();\n        }\n    }\n\n    private getURL(groups: MGroup[]){\n        groups.forEach((group) => {\n            this.images[group.groupId] = this.sanitizer.bypassSecurityTrustUrl(group.groupPhoto);\n        });\n    }\n\n    private search(){\n        this.groupUserService.getPageableSearchGroups(this.groupName, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.groups = response;\n            this.setSelectedUserGroupPage();\n            this.searchTotalPages();\n            this.getURL(response);\n        });\n    }\n\n    searchInput(){\n        this.page=0;\n        this.pagination();\n    }\n\n    private totalPages() {\n        this.groupUserService.countGroups(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPages(){\n        this.groupUserService.countSearchGroups(this.groupName, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getNext (): boolean{\n        if (this.page != this.totalPage-1 || this.groups[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getPrevious():boolean{\n        if (this.page != 0 || this.groups[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    setSelectedUserGroup(event: number) {\n        this.pageDirection = event.valueOf();\n        if ( this.groups[this.index + event.valueOf()] != undefined){\n                this.selectUserGroup(this.index + event.valueOf());\n        }else{\n            this.setPage(event.valueOf());\n\n        }\n    }\n}","<div>\n  <h2 class=\"title\" *ngIf=\"loggedUser != null\">Bienvenid@ {{loggedUser}}</h2>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  loggedUser: string;\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  ngOnInit() {\n    if (this.authenticationService.getUser().authenticated) {\n      this.loggedUser = this.authenticationService.getUser().login;\n    }\n  }\n}\n","<div class=\"modal fade\" id=\"createProductModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createProductLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{title}}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onSubmit();\" ngNativeValidate #createProductForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 file-input imageDiv\">\n                                <input (change)=\"getImage($event)\" accept=\"image/png,image/jpeg\" class=\"file\"\n                                       type=\"file\"\n                                       id=\"createProduct_productPhoto\" name=\"productPhoto\">\n                                <label title=\"Cambiar imagen de producto\" for=\"createProduct_productPhoto\"\n                                       (mouseover)=\"changeStyle($event)\" (mouseout)=\"changeStyle($event)\">\n                                    <ng-container *ngIf=\"product.productPhoto; else imagesDiv\">\n                                        <img class=\"image\" [ngClass]=\"imageColor\" [src]=\"product.productPhoto\" alt=\"\"\n                                             id=\"createProduct_photo\">\n                                    </ng-container>\n                                    <ng-template #imagesDiv>\n                                        <img class=\"image imageColor2\" [ngClass]=\"imageColor\" [src]=\"defaultImage\">\n                                    </ng-template>\n                                    <p class=\"imageText2\" [ngClass]=\"imageText\"></p>\n                                </label>\n                                <div *ngIf=\"imageFormat == false\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"imageFormat == false\">Sólo JPG o PNG\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"row name-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <input type=\"text\" id=\"createProduct_productName\" name=\"productName\"\n                                               class=\"inputs\" placeholder=\"Nombre*\" minlength=\"1\" maxlength=\"40\"\n                                               pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                               title=\"Puede contener letras, máximo 40 caracteres. Campo obligatorio\"\n                                               [(ngModel)]=\"product.productName\" required\n                                               #productNameForm=\"ngModel\" value=\"gggg\">\n                                        <div *ngIf=\"createProductForm.onSubmit(undefined) && productNameForm.invalid  || productNameForm.invalid && productNameForm.value != null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"productNameForm.errors.required\">Campo obligatorio\n                                            </div>\n                                            <div *ngIf=\"productNameForm.errors.pattern\">Máximo 40 caracteres\n                                                alfanuméricos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row description-row\">\n                                    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                                        <textarea class=\"text-area inputs\" name=\"productDescription\" rows=\"4\"\n                                                  cols=\"50\"\n                                                  id=\"createProduct_productDescription\" minlength=\"0\"\n                                                  maxlength=\"100\"\n                                                  name=\"productDescription\" placeholder=\"Descripción\"\n                                                  pattern=\"^[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]([ ]?[a-zA-ZáéíóúüñÁÉÍÓÚÜÑ1-9,.'-]+)*\"\n                                                  title=\"Puede contener letras y números, máximo 100 caracteres\"\n                                                  [(ngModel)]=\"product.productDescription\"\n                                                  #productDescriptionForm=\"ngModel\">\n                                        </textarea>\n                                        <div *ngIf=\"createProductForm.submitted && productDescriptionForm.invalid  || productDescriptionForm.invalid && productDescriptionForm.value!= null\"\n                                             class=\"alert alert-danger\">\n                                            <div *ngIf=\"productDescriptionForm.errors.pattern\">Puede contener letras y\n                                                números, máximo 100 caracteres\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div class=\"daterangerpicker\"\n                                     daterangepicker\n                                     [options]=\"options\"\n                                     (selected)=\"selectedDate($event)\"\n                                     (applyDaterangepicker)=\"applyDate()\"\n                                     (cancelDaterangepicker)=\"cancelDate()\">\n                                    <div class=\"d-flex justify-content-between h-100\">\n                                        <span *ngIf=\"productPurchaseDate != undefined\" class=\"ps-2 align-self-center\">\n                                                        {{productPurchaseDate | date:'dd/MM/YYYY'}}\n                                        </span>\n                                        <span *ngIf=\"productPurchaseDate == undefined\" class=\"placeholder align-self-center\">\n                                                        Fecha*\n                                        </span>\n                                        <div class=\"align-self-center\">\n                                            <span *ngIf=\"productPurchaseDate != undefined\" class=\"cancel\" (click)=\"cancelDate()\">×</span>\n                                            <span class=\"ng-arrow-wrapper\">\n                                                 <span class=\"btn ng-arrow\"><i class=\"bi bi-calendar\"></i></span>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3\">\n                                <input type=\"number\" class=\"text-area inputs\" name=\"productQuantity\"\n                                       id=\"createProduct_productQuantity\" min=\"1\"\n                                       name=\"productQuantity\" placeholder=\"nº*\"\n                                       pattern=\"[1-9]*\" required\n                                       title=\"Puede contener un número\"\n                                       [(ngModel)]=\"product.productQuantity\"\n                                       #productQuantityForm=\"ngModel\">\n                                <div *ngIf=\"createProductForm.onSubmit(undefined) && productQuantityForm.invalid  || productQuantityForm.invalid && productQuantityForm.value != null\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"productQuantityForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"productQuantityForm.errors.pattern\">Número entero\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3\">\n                                <input type=\"number\" class=\"text-area inputs\" name=\"productCost\"\n                                       id=\"createProduct_productCost\" min=\"0.01\" required\n                                       name=\"productCost\" placeholder=\"Precio*\" step=\"0.01\"\n                                       pattern=\"^\\d*(\\.\\d{0,2})?$\"\n                                       title=\"Puede contener un número\"\n                                       [(ngModel)]=\"product.productCost\"\n                                       #productCostForm=\"ngModel\">\n                                <div *ngIf=\"createProductForm.onSubmit(undefined) && productCostForm.invalid  || productCostForm.invalid && productCostForm.value != null\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"productCostForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"productCostForm.errors.pattern\"> Número positivo con máximo dos decimales\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"buttons\">\n                            <button type=\"button\" id=\"closeProductButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                Cerrar\n                            </button>\n                        </div>\n                        <div class=\"buttons\">\n                            <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MProduct} from \"../../../models/MProduct\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {PRODUCTJOIN} from \"../listProducts/listProducts.component\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\n\n@Component({\n    selector: 'app-createProduct',\n    templateUrl: './createProduct.component.html',\n    styleUrls: ['./createProduct.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n\n    defaultImage = \"./assets/product3.jpg\";\n    imageFormat: boolean;\n    imageColor:string=\"\";\n    imageText: string;\n    title: string = \"CREAR PRODUCTO\";\n    _product: MProduct;\n    _eventId: number;\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n    public productPurchaseDate;\n\n    public options: any = {\n        autoApply: false,\n        alwaysShowCalendars: true,\n        applyButtonClasses: \"btn-primary applyDate\",\n        buttonClasses: \"btn btn-sm\",\n        cancelClass: \"btn-default cancelDate\",\n        drops: \"up\",\n        locale: {\n            format: 'DD/MM/yyyy',\n            \"firstDay\": 1,\n            daysOfWeek: [\n                \"D\",\n                \"L\",\n                \"M\",\n                \"X\",\n                \"J\",\n                \"V\",\n                \"S\"\n            ],\n            monthNames: [\n                \"Enero\",\n                \"Febrero\",\n                \"Marzo\",\n                \"Abril\",\n                \"Mayo\",\n                \"Junio\",\n                \"Julio\",\n                \"Agosto\",\n                \"Septiembre\",\n                \"Octubre\",\n                \"Noviembre\",\n                \"Diciembre\"\n            ]\n        },\n        minDate: undefined,\n        maxDate: new Date(),\n        opens: 'left',\n        showDropdowns: true,\n        timePicker: false,\n        singleDatePicker: true\n    };\n\n\n    constructor(private productService: ProductService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService,\n                private userProductService: UserProductService,\n                private authenticationService: AuthenticationService\n    ) {\n    }\n\n    ngOnInit() {}\n\n    get product(){\n        return this._product;\n    }\n\n    @Input() set product(product: MProduct){\n        if (product.productId != undefined){\n            this._product = product;\n            this.productPurchaseDate = this.product.productPurchaseDate;\n            this.title = \"Editar producto\";\n        }else{\n            this._product = new MProduct();\n            this.title = \"Crear producto\";\n            this.productPurchaseDate = null;\n        }\n    }\n\n    get eventId(){\n        return this._eventId;\n    }\n\n    @Input() set eventId(eventId: number){\n        if (eventId!= undefined){\n            this._eventId = eventId;\n        }else{\n            this._eventId = 0;\n        }\n    }\n\n    public applyDate(): void {\n        this.product.productPurchaseDate = new Date(this.productPurchaseDate.valueOf()).toJSON().replace(\"T\", \" \").replace(\"Z\", \"\");\n    }\n\n    public selectedDate(value: any): void {\n        this.productPurchaseDate = new Date(value.start);\n    }\n\n    public cancelDate(): void {\n        this.productPurchaseDate = undefined;\n    }\n\n    onSubmit(){\n        if (this.product.productId != undefined){\n            this.onEdit();\n        }else{\n            this.onCreate();\n        }\n    }\n\n    onCreate() {\n        this.product.eventId = this.eventId;\n        this.productService.createProduct(this.product).subscribe((response) => {\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeProductButton\").click();\n            this.notificationService.success(\"Nuevo producto creado\", \"Se ha creado el producto correctamente.\");\n        });\n    }\n\n    onEdit(){\n        this.productService.editProduct(this.product).subscribe(() => {\n            this.userProductService.getUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe((response)=>{\n                    if (response.productId != 0){\n                        this.userProductService.editUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                    }else{\n                        this.userProductService.createUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                    }\n                });\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeProductButton\").click();\n            this.notificationService.success(\"Producto editado\", \"Se ha editado el producto correctamente.\");\n        });\n    }\n\n    getImage(event): any {\n        const file = event.target.files[0];\n        if (this.imageFormatTest(file)){\n            this.getBase64(file).then((image: any) => {\n                this.product.productPhoto = image.base;\n            });\n            this.imageFormat = true;\n        }else{\n            this.imageFormat = false;\n        }\n    }\n\n    closeModal(){\n        this.product = new MProduct();\n        this.imageFormat = null;\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.imageColor = \"imageColor\";\n            this.imageText = \"imageText\";\n        }else{\n            this.imageColor = \"\";\n            this.imageText= \"\";\n        }\n    }\n\n    private imageFormatTest(file:any): boolean{\n        if(file.type.toString() == \"image/jpeg\" || file.type.toString() == \"image/png\"){\n            return true;\n        }\n        return false;\n    }\n\n    private getBase64 = async ($event: any) => new Promise((resolve, reject) => {\n        try {\n            const unsafeImg = window.URL.createObjectURL($event);\n            const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n            const reader = new FileReader();\n            reader.readAsDataURL($event);\n\n            reader.onload = () => {\n                resolve({\n                    blob: $event,\n                    image,\n                    base: reader.result\n                });\n            };\n            reader.onerror = error => {\n                resolve({\n                    blob: $event.blob,\n                    image,\n                    base: null\n                });\n            };\n        } catch (e) {\n            return null;\n        }\n    });\n}","<div class=\"modal fade\" id=\"createUserEventExpenseModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"createUserEventExpenseLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">DINERO ADELANTADO</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onEdit()\"  ngNativeValidate #createUserEventExpenseForm=\"ngForm\">\n                    <div class=\"col container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                <p class=\"text\">{{showOperation}}</p>\n                                <input type=\"text\" class=\"text-area inputs\" name=\"totalExpense\"\n                                       id=\"createUserEventExpense_totalExpense\" required\n                                       name=\"totalExpense\" placeholder=\"Precio*\"\n                                       pattern=\"^\\d*(\\.\\d{0,2})?$\"\n                                       title=\"Dinero adelantado para el evento\"\n                                       [(ngModel)]=\"userEvent.totalExpense\"\n                                       #totalExpenseForm=\"ngModel\">\n                                <div *ngIf=\"createUserEventExpenseForm.onSubmit(undefined) && totalExpenseForm.invalid || totalExpenseForm.invalid && totalExpenseForm.value != null\"\n                                     class=\"alert alert-danger\">\n                                    <div *ngIf=\"totalExpenseForm.errors.required\">Campo obligatorio\n                                    </div>\n                                    <div *ngIf=\"totalExpenseForm.errors.pattern\"> Número positivo con máximo dos decimales\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                                <button type=\"button\" class=\"calculatorButton resetButton\" (click)=\"calculator(-1,'C')\">CLEAR</button>\n                            </div>\n                            <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                                <button type=\"button\" class=\"calculatorButton resetButton\" (click)=\"calculator(-1,'R')\">RESET</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(7,'')\">7</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(8,'')\">8</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(9,'')\">9</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'/')\">/</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(4,'')\">4</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(5,'')\">5</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(6,'')\">6</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\"(click)=\"calculator(-1,'*')\">x</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(1,'')\">1</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(2,'')\">2</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(3,'')\">3</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'-')\">-</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(0,'')\">0</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\"(click)=\"calculator(-1,'.')\">.</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'=')\">=</button>\n                            </div>\n                            <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n                                <button type=\"button\" class=\"calculatorButton\" (click)=\"calculator(-1,'+')\">+</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <div class=\"buttons\">\n                            <button type=\"button\" id=\"closeButton\" class=\"button close\" data-bs-dismiss=\"modal\" (click)=\"closeModal()\">\n                                Cerrar\n                            </button>\n                        </div>\n                        <div class=\"buttons\">\n                            <input type=\"submit\" class=\"button\" value=\"Guardar\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {MUserEvent} from \"../../../models/MUserEvent\";\n\n@Component({\n    selector: 'app-createUserEventExpense',\n    templateUrl: './createUserEventExpense.component.html',\n    styleUrls: ['./createUserEventExpense.component.css']\n})\nexport class CreateUserEventExpenseComponent implements OnInit {\n    _userEvent: MUserEvent;\n    @Output()\n    eventSave = new EventEmitter<boolean>();\n    operation: string[] = [];\n    showOperation: string =\"\";\n    totalExpense: number;\n\n    constructor(private userEventService: UserEventService,\n                private sanitizer: DomSanitizer,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {}\n\n    get userEvent(){\n        return this._userEvent;\n    }\n\n    @Input() set userEvent(userEvent: MUserEvent){\n        if (userEvent != undefined){\n            this._userEvent = userEvent;\n            this.totalExpense = this.userEvent.totalExpense;\n            this.operation = [];\n            this.operation[0] = userEvent.totalExpense.toString();\n            this.showOperation = userEvent.totalExpense.toString();\n        }else{\n            this._userEvent = new MUserEvent();\n            this.totalExpense = 0;\n            this.operation = [];\n            this.showOperation = \"\";\n        }\n    }\n\n    onEdit(){\n        this.userEventService.editTotalExpense(this.userEvent).subscribe(() => {\n            this.eventSave.emit();\n            this.closeModal();\n            document.getElementById(\"closeButton\").click();\n            this.notificationService.success(\"Dinero añadido al evento\", \"Se ha editado el dinero añadido correctamente.\");\n        });\n    }\n\n    calculator(value: number, operator: string){\n        //si el valor seleccionado es un numero\n        if(value != -1){\n            //si ya tenia el primer numero de la operacion pero no tenia el operador\n            if (this.operation[0] != null && this.operation[1] == null){\n                //si el primer numero es 0 se resetea con el nuevo numero\n                if (this.operation[0] == \"0\"){\n                    this.operation[0] = value.toString();\n                    this.showOperation = value.toString();\n                    this.userEvent.totalExpense = value;\n                }else{ //si el primer numero no es cero se añade cifra al numero\n                    this.operation[0] += value.toString();\n                    this.showOperation += value.toString();\n                    if (this.showOperation.includes(\".\") && !this.userEvent.totalExpense.toString().includes(\".\")){\n                        this.userEvent.totalExpense = parseFloat(this.userEvent.totalExpense.toString() + \".\"+ value.toString());\n\n                    }else{\n                        this.userEvent.totalExpense = parseFloat(this.userEvent.totalExpense.toString() + value.toString());\n                    }\n                }\n            }else if (this.operation[0] != null && this.operation[1] != null){ //si ya tenia el primer numero y el operador\n                if (this.operation[2] == null){ //si no tengo la segunda cifra asigno el nuevo numero a la segunda cifra\n                    this.operation[2] = value.toString();\n                }else{ //si tengo la segunda cifra sigo añadiendo numeros\n                    this.operation[2] += value.toString();\n                }\n                this.showOperation += value.toString();\n            }\n        }else{ //si el valor seleccionado no es un numero\n            if (operator == \"R\"){ //si selecciono r vuelvo a los valores iniciales\n                this.operation = [];\n                this.operation[0] = this.totalExpense.toString();\n                this.showOperation = this.totalExpense.toString();\n                this.userEvent.totalExpense = this.totalExpense;\n            }else if (operator == \"C\") { //si selecciono c reseteo la operacion\n                this.operation = [];\n                this.operation[0] = this.userEvent.totalExpense.toString();\n                this.showOperation = this.userEvent.totalExpense.toString();\n            }else{ //si es otro operador\n                    if (this.operation[0] != null){ //si la primera cifra tiene valor\n                        if (this.operation[2] != null){ //si la segunda cifra tiene un valor\n                            if (operator == \".\"){ //si selecciono . añado el operador a la segunda cifra\n                                this.operation[2] += operator.toString();\n                                this.showOperation += operator;\n                            }else if (operator == \"=\"){ //si el operador es un = lo asigno al tercer operando y calculo la operacion\n                                this.showOperation += operator;\n                                this.operation[3] = operator;\n                                if (this.operation[1].toString() == \"+\"){ //si el operando es un + sumo\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) + parseFloat(this.operation[2])).toFixed(2));\n                                }else if (this.operation[1].toString() == \"-\"){ //si el operando es un - resto\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) - parseFloat(this.operation[2])).toFixed(2));\n                                }else if (this.operation[1].toString() == \"/\"){ //si el operando es un / divido\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) / parseFloat(this.operation[2])).toFixed(2));\n                                }else if (this.operation[1].toString() == \"*\"){ //si el operando es un * multiplico\n                                    this.userEvent.totalExpense = parseFloat((parseFloat(this.operation[0]) * parseFloat(this.operation[2])).toFixed(2));\n                                }\n                                this.operation = [];\n                                this.operation[0] = this.userEvent.totalExpense.toString();\n                                this.showOperation = this.userEvent.totalExpense.toString();\n                            }\n                        }else if(this.operation[1] == null && operator != \".\" && operator != \"=\"){ //si el operador es nulo y el operador no es . o = lo asigno al operador\n                            this.showOperation += operator;\n                            this.operation[1] = operator;\n                        }else if (this.operation[1] == null && operator == \".\" && this.operation[0] != null){\n                            this.operation[0] += operator.toString();\n                            this.showOperation += operator;\n                        }\n                    }\n                }\n        }\n    }\n\n    closeModal(){\n        this.operation = [];\n        this.operation[0] = this.totalExpense.toString();\n        this.showOperation = this.totalExpense.toString();\n        this.userEvent.totalExpense = this.totalExpense;\n\n    }\n}","<div class=\"modal fade\" id=\"detailProductModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailProductLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onDelete($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title title\">{{product.productName}}</h5>\n                <div *ngIf=\"open\" class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li>\n                            <button type=\"button\" data-bs-dismiss=\"modal\" class=\"dropdown-item buttonText\" title=\"Cambiar de estado\" (click)=\"setStatus();\">{{status}}</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" class=\"dropdown-item buttonText\" title=\"Editar producto\"\n                                    data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#createProductModal\"\n                                    (click)=\"pagePartaker=0\">Editar producto</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" class=\"dropdown-item buttonText\" title=\"Eliminar producto\"  data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\"\n                                    (click)=\"messageValue();pagePartaker=0\">Eliminar producto</button>\n                        </li>\n                    </ul>\n                </div>\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\" data-bs-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                        (click)=\"pagePartaker=0\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"imageProductDiv\">\n                                <ng-container *ngIf=\"product.productPhoto; else imagesDiv\">\n                                    <img class=\"imageProduct\" [src]=\"product.productPhoto\" alt=\"\"\n                                         id=\"detailProduct_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageProduct\" [src]=\"defaultImage\">\n                                </ng-template>\n                                <div class=\"date text\">\n                                    Fecha de compra: {{product.productPurchaseDate | date: 'dd-MM-yyyy'}}\n                                </div>\n\n                            </div>\n                            <div class=\"text\"\n                                 name=\"productQuantityAndCost\"unidades\n                                 id=\"detailProduct_productAmount\">\n                                <img class=\"icon\" src=\"./assets/amount.svg\" alt=\"\">{{product.productQuantity}}\n                                <img class=\"icon\" src=\"./assets/money.svg\" alt=\"\">{{product.productCost}}€\n                            </div>\n                            <div class=\"description-row text\"\n                                 name=\"productDescription\"\n                                 id=\"detailProduct_productDescription\">\n                                <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"\">{{product.productDescription}}\n                            </div>\n                        </div>\n                        <div class=\"paginationMemberDiv col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let user of productPartakers\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-6 productMember\">\n                                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                        <p class=\"imageP\">\n                                            <img class=\"imageMember\"\n                                                 [src]=\"user.userPhoto\" alt=\"\" id=\"detailUser_photo\">\n                                        </p>\n                                        <p class=\"member\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-container>\n                                    <ng-template #userImagesDiv>\n                                        <p class=\"imageP\">\n                                            <img class=\"imageMember\" [src]=\"defaultUserImage\">\n                                        </p>\n                                        <p class=\"member\">\n                                            {{user.userLogin}}\n                                        </p>\n                                    </ng-template>\n                                </div>\n                                <div *ngIf=\"productPartakers.length > sizePartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getLessPartakers()\"><a>\n                                    Ver menos</a></div>\n                                <div *ngIf=\"productPartakers.length < totalPartaker\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 more\" (click)=\"getMorePartakers()\"><a>\n                                    Ver más</a></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationProduct\">\n                            <li [ngClass]=\"previousProduct\" *ngIf=\"previous\">\n                                <a class=\"previousProduct\" (click)=\"setPageProduct(-1); pagePartaker=0\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextProduct\" *ngIf=\"next\">\n                                <a class=\"nextProduct\" (click)=\"setPageProduct(1); pagePartaker=0\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {NotificationService} from \"../../../modules/notification/services/notification.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MProduct} from \"../../../models/MProduct\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {PRODUCTJOIN} from \"../listProducts/listProducts.component\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\n\n@Component({\n    selector: 'app-detailProduct',\n    templateUrl: './detailProduct.component.html',\n    styleUrls: ['./detailProduct.component.css']\n})\nexport class DetailProductComponent implements OnInit, AfterViewChecked {\n\n    @Output()\n    eventDelete = new EventEmitter<boolean>();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    @Output()\n    statusUpdate = new EventEmitter<number>();\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    defaultImage: string = \"./assets/product3.jpg\";\n\n    productPartakers: MUser[] = [];\n    productPartakersStored: MUser[] = [];\n    pagePartaker = 0;\n    sizePartaker = 6;\n    totalPartaker: number=0;\n    message: string = \"\";\n    previousProduct: string=\"\";\n    nextProduct: string=\"\";\n\n    _previous: boolean = false;\n    _next: boolean = false;\n    _open: boolean = true;\n    _product: MProduct = new MProduct();\n    _status: string =\"\";\n\n    constructor(private productService: ProductService,\n                private userProductService: UserProductService,\n                private userEventService: UserEventService,\n                private authenticationService: AuthenticationService,\n                private notificationService: NotificationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationProductClass();\n    }\n\n    ngAfterViewChecked() {\n        document.getElementsByClassName(\"applyDate\")[0].textContent =\"Aplicar\";\n        document.getElementsByClassName(\"cancelDate\")[0].textContent = \"Cancelar\";\n    }\n\n    messageValue(){\n        this.message = \"¿Estás seguro de que deseas eliminar el producto?\";\n    }\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationProductClass();\n    }\n\n    get open(){\n        return this._open;\n    }\n\n    @Input() set open( open: boolean){\n        this._open = open;\n    }\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationProductClass();\n    }\n\n    get status(){\n        return this._status;\n    }\n\n    @Input() set status( status: string){\n        if (status != undefined){\n            this._status = status;\n        }\n    }\n\n\n    get product(){\n        return this._product;\n    }\n\n    @Input() set product (product: MProduct) {\n        if (product != undefined) {\n            this._product = product;\n            this.partakerReset();\n            if (this.product.productId != null){\n                this.getPartakers(this.product.productId);\n                this.getTotalPartakers(this.product.productId);\n            }else{\n                this._product = new MProduct();\n            }\n        }\n        this.productPartakers = [];\n        this.productPartakersStored = [];\n        this.paginationProductClass();\n    }\n\n    onDelete($event){\n        if($event.valueOf()){\n            this.productService.deleteProduct(this.product.productId).subscribe(()=>{\n                this.userProductService.deleteUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe(()=>{});\n                    this.eventDelete.emit();\n                this.notificationService.success(\"Producto eliminado\", \"Se ha eliminado el producto correctamente.\");\n            });\n        }\n    }\n\n    setPageProduct(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    getPartakers(productId:number){\n        this.userProductService.getPageablePartakers(productId,this.pagePartaker, this.sizePartaker).subscribe((response) => {\n            this.productPartakers.push(...response);\n        });\n    }\n\n    getTotalPartakers(productId:number){\n        this.userProductService.countPartakers(productId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getMorePartakers(){\n        this.pagePartaker +=1;\n        if (this.productPartakers.length < this.productPartakersStored.length){\n            this.productPartakers = this.productPartakersStored.slice(0,this.sizePartaker*(this.pagePartaker+1));\n        }else{\n            this.getPartakers(this.product.productId);\n        }\n    }\n\n    getLessPartakers(){\n        if (this.productPartakersStored.length != this.totalPartaker){\n            this.productPartakersStored = this.productPartakers;\n            this.productPartakers = this.productPartakers.slice(0,this.sizePartaker*this.pagePartaker);\n        }else{\n            this.productPartakers = this.productPartakersStored.slice(0, this.sizePartaker*this.pagePartaker);\n        }\n        this.pagePartaker -=1;\n    }\n\n    partakerReset(){\n        this.productPartakers = [];\n        this.productPartakersStored = [];\n        this.pagePartaker = 0;\n    }\n\n    private paginationProductClass(){\n        if(this._previous && this._next){\n            this.previousProduct = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextProduct = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this._previous && this._next){\n            this.previousProduct = \"\";\n            this.nextProduct = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this._previous && !this._next){\n            this.previousProduct = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextProduct = \"\";\n        }else{\n            this.previousProduct = \"\";\n            this.nextProduct = \"\";\n        }\n    }\n\n    setStatus(){\n        this.statusUpdate.emit();\n        if (this.status == PRODUCTJOIN.JOIN){\n            this.userProductService.getUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe((response)=>{\n                if (response.productId != 0){\n                    this.userProductService.editUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                }else{\n                    this.userProductService.createUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe();\n                }\n            });\n        }else{\n            this.userProductService.deleteUserProduct(this.product.productId, this.authenticationService.getUser().id).subscribe(()=>{\n            });\n        }\n    }\n}","<section class=\"section\">\n    <div class=\"row\">\n        <div class=\"col-xxl-3 col-xl-2 col-lg-3 col-md-6 col-sm-6 col-12\">\n            <div class=\"imageEventDiv\">\n                <ng-container *ngIf=\"event.eventPhoto; else imagesDiv\">\n                    <img class=\"imageEvent\" [src]=\"imageEvent\" alt=\"\"\n                         id=\"detailUserEvent_photo\">\n                </ng-container>\n                <ng-template #imagesDiv>\n                    <img class=\"imageEvent\" [src]=\"defaultEventImage\">\n                </ng-template>\n            </div>\n        </div>\n        <div class=\"col-xxl-4 col-xl-5 col-lg-5 col-md-6 col-sm-6 col-12\">\n            <h5 class=\"row modal-title title eventTitle\">\n                {{event.eventName}}\n            </h5>\n            <div class=\"row date text\">\n                <img class=\"icon\" src=\"./assets/date.svg\" alt=\"\"\n                     id=\"detailUserEvent_date\">\n                {{event.eventStart | date: 'dd-MM-yyyy HH:mm'}}<br>\n                {{event.eventEnd | date: 'dd-MM-yyyy HH:mm'}}\n            </div>\n            <div class=\"row description-row text\"\n                 name=\"eventLocation\"\n                 id=\"detailEvent_eventLocation\">\n                <img class=\"icon\" src=\"./assets/location.svg\" alt=\"\"\n                     id=\"detailUserEvent_location\">\n                {{event.eventLocation}}\n            </div>\n            <div class=\"row description-row text\"\n                     name=\"eventDescription\"\n                     id=\"detailEvent_eventDescription\">\n                <img class=\"icon\" src=\"./assets/comment.svg\" alt=\"\"\n                     id=\"detailUserEvent_description\">\n                {{event.eventDescription}}\n            </div>\n        </div>\n        <div class=\"paginationPartakerDiv col-xxl-5 col-xl-5 col-lg-4 col-md-12 col-sm-12 col-12\">\n            <div class=\"row\">\n                <div *ngFor=\"let user of eventPartakers\" class=\"col-xxl-4 col-xl-4 col-lg-6 col-md-4 col-sm-4 col-5 partakerDiv\">\n                    <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                            <img class=\"imagePartaker\" [ngClass]=\"ownerBorder(user.userId)\"\n                                 [src]=\"imagesPartakers[user.userId]\" alt=\"\" id=\"detailUser_photo\">\n                        </p>\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                            {{user.userLogin}}\n                        </p>\n                    </ng-container>\n                    <ng-template #userImagesDiv>\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"imageP\">\n                            <img class=\"imagePartaker\" [ngClass]=\"ownerBorder(user.userId)\" [src]=\"defaultUserImage\">\n                        </p>\n                        <p title=\"{{ownerLabel(user.userId)}}\" class=\"partaker\">\n                            {{user.userLogin}}\n                        </p>\n                    </ng-template>\n                    <app-createUserEventExpense (eventSave)=\"getAuthUserEvent()\" [userEvent]=\"authUserEvent\"></app-createUserEventExpense>\n                </div>\n                <div *ngIf=\"eventPartakers.length > sizePartaker\" [ngClass]=\"previousMember\" class=\"more\" (click)=\"getLessPartakers()\"><a>\n                    Ver menos</a></div>\n                <div *ngIf=\"eventPartakers.length < totalPartaker\" [ngClass]=\"nextMember\" class=\"more\" (click)=\"getMorePartakers()\"><a>\n                    Ver más</a></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row moneyCircles\">\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p  title=\"Dinero que he aportado al evento\" class=\"partakerExpense\">\n                    {{cost(totalExpense)}}€\n                </p>\n                <p  title=\"Dinero que he aportado al evento\" class=\"partakerTextExpense\">\n                    Dinero adelantado\n                </p>\n            </div>\n            <div class=\"moneyButton\">\n                <button *ngIf=\"event.eventOpen\" type=\"button\" class=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createUserEventExpenseModal\">Añadir</button>\n            </div>\n        </div>\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p class=\"partakerExpense\" title=\"Dinero que he gastado en el evento\">\n                    {{cost(debt)}}€\n                </p>\n                <p class=\"partakerTextExpense\" title=\"Dinero que he gastado en el evento\">\n                    Dinero gastado\n                </p>\n            </div>\n        </div>\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p  title=\"Dinero total adelantado al evento\" class=\"partakerExpense\">\n                    {{cost(totalEventExpense)}}€\n                </p>\n                <p  title=\"Dinero total adelantado al evento\" class=\"partakerTextExpense\">\n                    Dinero total adelantado\n                </p>\n            </div>\n        </div>\n        <div class=\"col-xxl-3 col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 circle\">\n            <div class=\"money\">\n                <p  title=\"Dinero total gastado en el evento\" class=\"partakerExpense\">\n                    {{cost(totalProductCost)}}€\n                </p>\n                <p  title=\"Dinero total gastado en el evento\" class=\"partakerTextExpense\">\n                    Dinero total gastado\n                </p>\n            </div>\n        </div>\n    </div>\n</section>\n<section>\n    <h6 class=\"subtitle modal-title\">PRODUCTOS</h6>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-7 col-xl-7 col-lg-7 col-md-7 col-sm-7 col-7 search\">\n            <form ngNativeValidate (input)=\"searchProductInput()\" #searchProductsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_productName\" name=\"productName\" placeholder=\"Buscar por nombre de producto\"\n                       [(ngModel)]=\"productName\" required #productNameForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n        <div class=\"col-xxl-1 col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 createDiv\">\n            <button *ngIf=\"event.eventOpen\" type=\"button\" class=\"addButton\" data-bs-toggle=\"modal\" data-bs-target=\"#createProductModal\" (click)=\"setProduct();\">Añadir</button>\n        </div>\n    </div>\n    <app-createProduct (eventSave)=\"getProducts();\" [product]=\"selectedProduct\" [eventId]=\"event.eventId\"></app-createProduct>\n\n    <app-detailProduct (eventDelete)=\"getProducts();\" (statusUpdate)=\"getProducts();\" (eventDetail)=\"setSelectedProduct($event)\" [product]=\"selectedProduct\" [previous] = \"getProductPrevious()\" [next] = \"getProductNext()\" [open]=\"event.eventOpen\" [status] =\"selectedStatus\"></app-detailProduct>\n\n    <div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4 divAligment\">\n        <ng-container *ngIf=\"products.length!= 0; else productsDiv\">\n            <div *ngFor=\"let product of products;let i=index\">\n                <div class=\"col\">\n                    <div class=\"card mb-3 color\" id=\"detailProductCard\" data-bs-toggle=\"modal\" data-bs-target=\"#detailProductModal\"\n                         (click)=\"selectProduct(i)\">\n                        <div class=\"row g-0\">\n                            <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5 divAligment\">\n                                <ng-container *ngIf=\"product.productPhoto != null; else imagesDiv\">\n                                    <img class=\"image\" [src]=\"imagesProducts[product.productId]\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"image\" [src]=\"defaultImage\">\n                                </ng-template>\n                            </div>\n                            <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7 divAligment\">\n                                <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7 divAligment\">\n                                    <h5 class=\"title\">{{product.productName}}</h5>\n                                    <p class=\"card-text\">\n                                        <a class=\"message\">{{messageStatus(product.productId)}}</a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #productsDiv>\n            <p class=\"text\">No existen productos</p>\n        </ng-template>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"productPage!=0\"><a class=\"page-link previous\" (click)=\"setProductPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"productPage+1<totalProductPage\"><a class=\"page-link next\" (click)=\"setProductPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>\n\n","import {Component, OnInit} from '@angular/core';\nimport {UserEventService} from \"../../../services/userEvent.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {MProduct} from \"../../../models/MProduct\";\nimport {ProductService} from \"../../../services/product.service\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {MUser} from \"../../../models/MUser\";\nimport {UserProductService} from \"../../../services/userProduct.service\";\nimport {MUserEvent} from \"../../../models/MUserEvent\";\nimport {MUserUserEvent} from \"../../../models/MUserUserEvent\";\nimport {UserUserEventService} from \"../../../services/userUserEvent.service\";\n\nexport enum PRODUCTJOIN {\n    JOIN = 'Participar', CANCEL = 'Quitar participación'\n}\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './listProducts.component.html',\n    styleUrls: ['./listProducts.component.css']\n})\n\nexport class ListProductsComponent implements OnInit {\n    size: number= 6;\n    index: number;\n    previous:string;\n    next:string;\n    pageDirection: number;\n\n    //EVENTO\n    defaultEventImage: string = \"./assets/event7.jpg\";\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    event: MEvent;\n    eventPartakers: MUser[] = [];\n    eventPartakersStored: MUser[] = [];\n    pagePartaker = 0;\n    sizePartaker = 6;\n    totalPartaker: number=0;\n    imagesPartakers: {[index:number]: any;} = {};\n    imageEvent: any;\n    moneyColor: string;\n    moneyText: string;\n    previousMember:string;\n    nextMember: string;\n\n\n    //PRODUCTOS\n    defaultImage: string = \"./assets/product3_2.jpg\";\n    productName = \"\";\n    products: MProduct[] = [];\n    imagesProducts: {[index:number]: any;} = {};\n    status: {[index: number]: any;} = {};\n    totalProductPage:number= 0;\n    productPage: number= 0;\n    selectedProduct: MProduct = new MProduct();\n    selectedStatus: string =\"\";\n\n    //GASTOS\n    userName: string;\n    userEvents: MUserEvent[] = [];\n    totalUserEventPage:number= 0;\n    userEventPage: number= 0;\n    authUserEvent: MUserEvent;\n    totalExpense: number = 0;\n    totalEventExpense: number = 0;\n    totalProductCost: number = 0;\n    debt: number = 0;\n\n    //TRANSACCIÓN\n    transactions: MUserUserEvent[] = [];\n    transactionPage: number= 0;\n    selectedTransaction: MUserUserEvent = new MUserUserEvent();\n\n    constructor(private productService: ProductService,\n                private userEventService: UserEventService,\n                private userUserEventService: UserUserEventService,\n                private userProductService: UserProductService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        if (localStorage.getItem(\"products\") != undefined){\n            this.event = JSON.parse(<string>localStorage.getItem(\"products\"));\n            this.partakerReset();\n            this.getProducts();\n            this.getPartakers(this.event.eventId);\n            this.getTotalPartakers(this.event.eventId);\n            this.getUserEvents();\n            this.getURLEvent();\n            this.paginationClass();\n            this.getAuthUserEvent();\n            this.paginationMembersClass();\n        }else{\n            this.event = new MEvent();\n        }\n    }\n\n    changeStyle($event){\n        if ($event.type == \"mouseover\"){\n            this.moneyColor = \"moneyColor\";\n            this.moneyText = \"moneyText\";\n        }else{\n            this.moneyColor = \"\";\n            this.moneyText= \"\";\n        }\n    }\n\n    cost(cost: number): number{\n        return Math.round(cost*100)/100;\n    }\n\n    private getURLEvent(){\n        this.imageEvent= this.sanitizer.bypassSecurityTrustUrl(this.event.eventPhoto);\n    }\n\n    private getURLPartaker(partakers: MUser[]){\n        partakers.forEach((partaker) => {\n            this.imagesPartakers[partaker.userId] = this.sanitizer.bypassSecurityTrustUrl(partaker.userPhoto);\n        });\n    }\n\n    getPartakers(eventId:number){\n        this.userEventService.getPageablePartakers(eventId,this.pagePartaker, this.sizePartaker).subscribe((response) => {\n            this.eventPartakers.push(...response);\n            this.getURLPartaker(response);\n            this.paginationMembersClass();\n        });\n    }\n\n    getTotalPartakers(eventId:number){\n        this.userEventService.countPartakers(eventId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getMorePartakers(){\n        this.pagePartaker +=1;\n        if (this.eventPartakers.length < this.eventPartakersStored.length){\n            this.eventPartakers = this.eventPartakersStored.slice(0,this.sizePartaker*(this.pagePartaker+1));\n        }else{\n            this.getPartakers(this.event.eventId);\n        }\n        this.paginationMembersClass();\n    }\n\n    getLessPartakers(){\n        if (this.eventPartakersStored.length != this.totalPartaker){\n            this.eventPartakersStored = this.eventPartakers;\n            this.eventPartakers = this.eventPartakers.slice(0,this.sizePartaker*this.pagePartaker);\n        }else{\n            this.eventPartakers = this.eventPartakersStored.slice(0, this.sizePartaker*this.pagePartaker);\n        }\n        this.pagePartaker -=1;\n        this.paginationMembersClass();\n    }\n\n    partakerReset(){\n        this.eventPartakers = [];\n        this.eventPartakersStored = [];\n        this.pagePartaker = 0;\n    }\n\n    ownerLabel(userId:number):string{\n        let value:string = \"\";\n        if (userId == this.event.eventOwner){\n            value = \"Administrador\";\n        }\n        return value;\n    }\n\n    getTotalExpense(){\n        if (this.authUserEvent != undefined){\n            this.totalExpense = this.authUserEvent.totalExpense;\n        }\n    }\n\n    getDebt(){\n        if (this.authUserEvent != undefined){\n            this.debt = this.authUserEvent.debt;\n        }\n    }\n\n    ownerBorder(userId: number):string{\n        if(userId == this.event.eventOwner){\n            return \"owner\";\n        }\n    }\n\n    //PRODUCTOS\n\n    getProducts(){\n        this.productService.getPageableProducts(this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.products = response;\n            this.getAuthUserEvent();\n            this.setSelectedProductPage();\n            this.getURLProduct(response);\n            this.totalProductPages();\n            this.getStatus(response);\n            this.sumTotalEventExpense();\n            this.sumTotalProductCost();\n            this.getTotalExpense();\n            this.getDebt();\n        });\n    }\n\n    paginationClass(){\n        if(this.productPage!=0 && this.productPage+1<this.totalProductPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-6\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-6\";\n        }else if (this.productPage==0 && this.productPage+1<this.totalProductPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.productPage!=0 && this.productPage+1==this.totalProductPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    private paginationMembersClass(){\n        if(this.eventPartakers.length > this.sizePartaker && this.eventPartakers.length < this.totalPartaker){\n            this.previousMember = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextMember = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 nextMember\";\n        }else if (this.eventPartakers.length <= this.sizePartaker && this.eventPartakers.length < this.totalPartaker){\n            this.previousMember = \"\";\n            this.nextMember = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.eventPartakers.length > this.sizePartaker && this.eventPartakers.length >= this.totalPartaker){\n            this.previousMember = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextMember = \"\";\n        }else{\n            this.previousMember = \"\";\n            this.nextMember = \"\";\n        }\n    }\n\n    private getURLProduct(products: MProduct[]){\n        products.forEach((product) => {\n            this.imagesProducts[product.productId] = this.sanitizer.bypassSecurityTrustUrl(product.productPhoto);\n         });\n    }\n\n    setProduct(){\n        this.selectedProduct = new MProduct();\n    }\n\n    setSelectedProductPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n            }\n            this.selectedProduct = this.products[this.index];\n            this.selectedStatus = this.status[this.index];\n        }\n    }\n\n    private totalProductPages() {\n        this.productService.countProducts(this.event.eventId).subscribe((response) => {\n            this.totalProductPage = Math.ceil(response/this.size);\n        });\n    }\n\n    selectProduct(index:number){\n        this.selectedProduct = this.products[index];\n        this.selectedStatus = this.status[this.selectedProduct.productId];\n        this.index = index;\n    }\n\n    setSelectedProduct(product: number) {\n        this.pageDirection = product.valueOf();\n        if ( this.products[this.index + product.valueOf()] != undefined){\n            this.selectProduct(this.index + product.valueOf());\n        }else{\n            this.setProductPage(product.valueOf());\n\n        }\n    }\n\n    setProductPage(page: number){\n        this.productPage += page;\n        this.productPagination();\n        this.paginationClass();\n    }\n\n    private productPagination(){\n        if(this.productName == \"\"){\n            this.getProducts();\n        }else{\n            this.searchProduct();\n        }\n    }\n\n    getProductNext (): boolean{\n        if (this.productPage != this.totalProductPage-1 || this.products[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getProductPrevious():boolean{\n        if (this.productPage != 0 || this.products[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    private searchProduct(){\n        this.productService.getPageableSearchProducts(this.productName, this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.products = response;\n            this.setSelectedProductPage();\n            this.searchProductTotalPages();\n            this.getURLProduct(response);\n            this.getStatus(response);\n\n        });\n    }\n\n    searchProductInput(){\n        this.productPage=0;\n        this.productPagination();\n    }\n\n    private searchProductTotalPages(){\n        this.productService.countSearchProducts(this.productName, this.event.eventId).subscribe((response) => {\n            this.totalProductPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private getStatus (mProducts: MProduct[]) {\n        mProducts.forEach((mProduct) => {\n            this.userProductService.getUserProduct(mProduct.productId, this.authenticationService.getUser().id).subscribe((response) => {\n                if (response.productId == 0 || response.userProductActive == false){\n                    this.status[mProduct.productId] = PRODUCTJOIN.JOIN;\n                }else if (response.userProductActive == true){\n                    this.status[mProduct.productId] = PRODUCTJOIN.CANCEL;\n                }\n            });\n        });\n    }\n\n    messageStatus(productId:number): string{\n        if (this.status[productId] == PRODUCTJOIN.JOIN.valueOf()){\n            return \"Solicitar participación\";\n        }else{\n            return \"Participando\";\n        }\n    }\n\n    //GASTOS\n    getUserEvents(){\n        this.userEventService.getPageableUserEvents(this.event.eventId, this.userEventPage, this.totalPartaker).subscribe((response) => {\n            this.userEvents = response;\n            this.totalUserEventPages();\n\n        });\n    }\n\n    getUserExpense(userId: number): number{\n        let expense: number = 0;\n            this.userEvents.forEach((userEvent) =>{\n           if (userEvent.userId == userId){\n               expense = userEvent.totalExpense;\n           }\n        });\n        return expense;\n    }\n\n    showExpenseButton(userId: number): boolean{\n        if (userId == this.authenticationService.getUser().id && this.event.eventOpen){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getAuthUserEvent(){\n        this.userEventService.getUserEvent(this.event.eventId, this.authenticationService.getUser().id).subscribe((userEvent) =>{\n            this.authUserEvent = userEvent;\n            this.debt = this.authUserEvent.debt;\n            this.totalExpense = this.authUserEvent.totalExpense;\n            this.sumTotalEventExpense();\n            this.sumTotalProductCost();\n        });\n    }\n\n    sumTotalEventExpense(){\n        this.userEventService.sumTotalEventExpense(this.event.eventId).subscribe((totalEventExpense)=>{\n            this.totalEventExpense = totalEventExpense;\n        });\n    }\n\n    sumTotalProductCost(){\n        this.productService.sumTotalProductCost(this.event.eventId).subscribe((totalProductCost) => {\n            this.totalProductCost = totalProductCost;\n        });\n    }\n\n    private totalUserEventPages() {\n        this.userEventService.countUserEvents(this.event.eventId).subscribe((response) => {\n            this.totalUserEventPage = Math.ceil(response/this.size);\n        });\n    }\n\n    setUserEventPage(page: number){\n        this.userEventPage += page;\n        this.getUserEvents();\n        this.paginationClass();\n    }\n\n    private userEventPagination(){\n        if(this.userName == \"\"){\n            this.getUserEvents();\n        }else{\n            this.searchUserEvent();\n        }\n    }\n\n    private searchUserEvent(){\n        this.userEventService.getPageableSearchUserEvents(this.userName, this.event.eventId, this.userEventPage, this.size).subscribe((response) => {\n            this.userEvents = response;\n            this.searchUserEventTotalPages();\n        });\n    }\n\n    searchUserEventInput(){\n        this.userEventPage=0;\n        this.userEventPagination();\n    }\n\n    private searchUserEventTotalPages(){\n        this.userEventService.countSearchUserEvents(this.userName, this.event.eventId).subscribe((response) => {\n            this.totalUserEventPage = Math.ceil(response/this.size);\n        });\n    }\n\n   /* //TRANSACCIONES\n\n    getTransactions(){\n        this.userUserEventService.getPageableUserUserEvents(this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.setSelectedTransactionPage();\n            this.totalTransactionPages();\n\n        });\n    }\n\n    getActor(actorId: number): MUser{\n        let actor: MUser = null;\n        this.eventPartakers.forEach((partaker) =>{\n            if (partaker.userId == actorId){\n               actor = partaker;\n           }\n        });\n        return actor;\n    }\n\n    colorDebt(senderId: number): string{\n        if (senderId == this.authUserEvent.userId){\n            return \"colorDebt\";\n        }else{\n            return \"\";\n        }\n    }\n\n    colorButtonDebt(senderId: number): string{\n        if (senderId == this.authUserEvent.userId){\n            return \"colorButtonDebt\";\n        }else{\n            return \"\";\n        }\n    }\n\n    setSelectedTransactionPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n            }\n            this.selectedTransaction = this.transactions[this.index];\n        }\n    }\n\n    private totalTransactionPages() {\n        this.userUserEventService.countUserUserEvents(this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    selectTransaction(index:number){\n        this.selectedTransaction = this.transactions[index];\n        this.index = index;\n    }\n\n    setSelectedTransaction(transaction: number) {\n        this.pageDirection = transaction.valueOf();\n        if ( this.transactions[this.index + transaction.valueOf()] != undefined){\n            this.selectTransaction(this.index + transaction.valueOf());\n        }else{\n            this.setTransactionPage(transaction.valueOf());\n\n        }\n    }\n\n    setTransactionPage(page: number){\n        this.transactionPage += page;\n        this.transactionPagination();\n        this.paginationClass();\n    }\n\n    private transactionPagination(){\n        if(this.transactionActorName == \"\"){\n            this.getTransactions();\n        }else{\n            this.searchTransaction();\n        }\n    }\n\n    getTransactionNext (): boolean{\n        if (this.transactionPage != this.totalTransactionPage-1 || this.transactions[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getTransactionPrevious():boolean{\n        if (this.transactionPage != 0 || this.transactions[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    private searchTransaction(){\n        this.userUserEventService.getPageableSearchUserUserEvents(this.transactionActorName, this.event.eventId, this.productPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.setSelectedTransactionPage();\n            this.searchTransactionTotalPages();\n        });\n    }\n\n    searchTransactionInput(){\n        this.transactionPage=0;\n        this.transactionPagination();\n    }\n\n    private searchTransactionTotalPages(){\n        this.userUserEventService.countSearchUserUserEvents(this.transactionActorName, this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }*/\n}","<section>\n    <h6 class=\"title modal-title\">{{event.eventName}}</h6>\n    <p class=\"subtitle modal-title\">TRANSACCIONES</p>\n    <div class=\"searchDiv row\">\n        <div class=\"col-xxl-8 col-xl-9 col-lg-4 col-md-5 col-sm-6 col-6 searchTransaction\">\n            <form ngNativeValidate (input)=\"searchTransactionInput()\" #searchTransactionsForm=\"ngForm\">\n                <input type=\"search\" id=\"events_transaction\" name=\"transaction\" placeholder=\"Buscar por nombre de participante\"\n                       [(ngModel)]=\"transactionActorName\" required #transactionActorForm=\"ngModel\" aria-label=\"Search\">\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row row-cols-1 row-cols-xxl-2 row-cols-xl-2 row-cols-lg-2 row-cols-md-1 row-cols-sm-1 row-cols-1 g-4 divAligment\">\n        <div *ngFor=\"let transaction of transactions;let i=index\">\n            <div class=\"col\">\n                <div class=\"card mb-2\" id=\"detailTransactionCard\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-xxl-5 col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5 divAligment\">\n                            <ng-container *ngIf=\"getActor(transaction.senderId).userPhoto; else senderImagesDiv\">\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\"\n                                         [src]=\"imagesPartakers[transaction.senderId]\" alt=\"\" id=\"detailSender_photo\">\n                                </p>\n                            </ng-container>\n                            <ng-template #senderImagesDiv>\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                                </p>\n                            </ng-template>\n                            <div class=\"card-body-xxl-7 card-body-xl-7 card-body-lg-7 card-body-md-7 card-body-sm-7 card-body-7 divAligment\">\n                                <h5 class=\"transactionTitle\">{{getActor(transaction.senderId).userLogin}}</h5>\n                            </div>\n                        </div>\n                        <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 transactionDivAligment\">\n                            <div class=\"row\">\n                                <p class=\"transactionCard-text\">\n                                    <a class=\"messageCost\" [ngClass]=\"colorDebt(transaction.senderId, transaction.receiverId)\">{{cost(transaction.cost)}}€</a>\n                                    </p>\n                            </div>\n\n\n                        </div>\n                        <div class=\"col-xxl-5 col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5 divAligment receiver\">\n                            <ng-container *ngIf=\"getActor(transaction.receiverId).userPhoto; else receiverImagesDiv\">\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\"\n                                         [src]=\"imagesPartakers[transaction.receiverId]\" alt=\"\" id=\"detailReceiver_photo\">\n                                </p>\n                            </ng-container>\n                            <ng-template #receiverImagesDiv>\n                                <p class=\"imageP\">\n                                    <img class=\"imageTransaction\" [src]=\"defaultUserImage\">\n                                </p>\n                            </ng-template>\n                            <div class=\"card-body-xxl-7 card-body-xl-7 card-body-lg-7 card-body-md-8 card-body-sm-7 card-body-7 divAligment\">\n                                <h5 class=\"transactionTitle\">{{getActor(transaction.receiverId).userLogin}}</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"paginationDiv\">\n        <ul class=\"row pagination\">\n            <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"transactionPage!=0\"><a class=\"page-link previous\" (click)=\"setTransactionPage(-1)\">Anterior</a>\n            </li>\n            <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"transactionPage+1<totalTransactionPage\"><a class=\"page-link next\" (click)=\"setTransactionPage(1)\">Siguiente</a>\n            </li>\n        </ul>\n    </div>\n</section>\n\n","import {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {MUserUserEvent} from \"../../models/MUserUserEvent\";\nimport {ProductService} from \"../../services/product.service\";\nimport {UserEventService} from \"../../services/userEvent.service\";\nimport {UserUserEventService} from \"../../services/userUserEvent.service\";\nimport {MEvent} from \"../../models/MEvent\";\nimport {MUser} from \"../../models/MUser\";\nimport {MUserEvent} from \"../../models/MUserEvent\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\n\n@Component({\n    selector: 'app-transactions',\n    templateUrl: './listTransactions.component.html',\n    styleUrls: ['./listTransactions.component.css']\n})\n\nexport class ListTransactionsComponent implements OnInit {\n    size: number= 6;\n    transactionPage: number = 0;\n    index: number;\n    previous:string;\n    next:string;\n\n    defaultUserImage: string = \"./assets/user16.jpg\";\n    event: MEvent;\n    eventPartakers: MUser[] = [];\n    totalPartaker: number=0;\n    imagesPartakers: {[index:number]: any;} = {};\n\n    authUserEvent: MUserEvent;\n\n    transactionActorName = \"\";\n    transactions: MUserUserEvent[] = [];\n    totalTransactionPage:number= 0;\n    selectedTransaction: MUserUserEvent = new MUserUserEvent();\n\n    constructor(private productService: ProductService,\n                private userEventService: UserEventService,\n                private userUserEventService: UserUserEventService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        if (localStorage.getItem(\"transactions\") != undefined){\n            this.event = JSON.parse(<string>localStorage.getItem(\"transactions\"));\n            this.getTransactions();\n            this.getPartakers(this.event.eventId);\n            this.getAuthUserEvent();\n        }else{\n            this.event = new MEvent();\n        }\n    }\n\n    private getURLPartaker(partakers: MUser[]){\n        partakers.forEach((partaker) => {\n            this.imagesPartakers[partaker.userId] = this.sanitizer.bypassSecurityTrustUrl(partaker.userPhoto);\n        });\n    }\n\n    getPartakers(eventId:number){\n        this.userEventService.getPartakers(eventId).subscribe((response) => {\n            this.eventPartakers.push(...response);\n            this.getURLPartaker(response);\n        });\n    }\n\n    getActor(actorId: number): MUser{\n        let actor: MUser = null;\n        this.eventPartakers.forEach((partaker) =>{\n            if (partaker.userId == actorId){\n                actor = partaker;\n            }\n        });\n        return actor;\n    }\n\n    getTotalPartakers(eventId:number){\n        this.userEventService.countPartakers(eventId).subscribe((number)=>{\n            this.totalPartaker = number;\n        });\n    }\n\n    getTransactions(){\n        this.userUserEventService.getPageableUserUserEventsByEvent(this.event.eventId, this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.totalTransactionPages();\n\n        });\n    }\n    paginationClass(){\n        if(this.transactionPage!=0 && this.transactionPage+1<this.totalTransactionPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-9 col-6\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-3 col-6\";\n        }else if (this.transactionPage==0 && this.transactionPage+1<this.transactionPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this.transactionPage!=0 && this.transactionPage+1==this.transactionPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    getAuthUserEvent(){\n        this.userEventService.getUserEvent(this.event.eventId, this.authenticationService.getUser().id).subscribe((userEvent) =>{\n            this.authUserEvent = userEvent;\n        });\n    }\n\n    colorDebt(senderId: number, receiverId: number): string{\n        if (senderId == this.authUserEvent.userId){\n            return \"colorDebtSender\";\n        }else if (receiverId == this.authUserEvent.userId){\n            return \"colorDebtReceiver\";\n        }else{\n            return \"\";\n        }\n    }\n\n\n\n\n    private totalTransactionPages() {\n        this.userUserEventService.countUserUserEventsByEvent(this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n\n    setTransactionPage(page: number){\n        this.transactionPage += page;\n        this.transactionPagination();\n        this.paginationClass();\n    }\n\n    private transactionPagination(){\n        if(this.transactionActorName == \"\"){\n            this.getTransactions();\n        }else{\n            this.searchTransaction();\n        }\n    }\n\n    private searchTransaction(){\n        this.userUserEventService.getPageableSearchUserUserEventsByEvent(this.transactionActorName, this.event.eventId, this.transactionPage, this.size).subscribe((response) => {\n            this.transactions = response;\n            this.searchTransactionTotalPages();\n        });\n    }\n\n    searchTransactionInput(){\n        this.transactionPage=0;\n        this.transactionPagination();\n    }\n\n\n    cost(cost: number): number{\n        return Math.round(cost*100)/100;\n    }\n\n    private searchTransactionTotalPages(){\n        this.userUserEventService.countSearchUserUserEventsByEvent(this.transactionActorName, this.event.eventId).subscribe((response) => {\n            this.totalTransactionPage = Math.ceil(response/this.size);\n        });\n    }\n}","<div class=\"modal fade\" id=\"detailUserModal\" tabindex=\"-1\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\n     aria-labelledby=\"detailUserLabel\" aria-hidden=\"true\">\n    <app-messageConfirm (eventMessageConfirm)=\"onRequest($event)\" [message]=message></app-messageConfirm>\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n\n                <h5 class=\"modal-title title\">\n                    {{user.userLogin}}\n                </h5>\n                <div class=\"dropdown\">\n                    <a class=\"btn btn-neutral dropdown-toggle drop\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"zmdi zmdi-label\"></i>\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li>\n                            <button type=\"button\" class=\"dropdown-item buttonText\" title=\"Cambiar de estado\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#messageConfirmModal\">{{getMessageStatus()}}</button>\n                        </li>\n                    </ul>\n                </div>\n\n                <button type=\"button\" id=\"closeButton\" class=\"btn-close closeButton\"  data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"col container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 userScroll\">\n                            <div class=\"imageUserDiv\">\n                                <ng-container *ngIf=\"user.userPhoto; else imagesDiv\">\n                                    <img class=\"imageUser\" [src]=\"user.userPhoto\" alt=\"foto de perfil de usuario\"\n                                         id=\"detailUser_photo\">\n                                </ng-container>\n                                <ng-template #imagesDiv>\n                                    <img class=\"imageUser\" [src]=\"defaultImage\" alt=\"foto de perfil de usuario por defecto\">\n                                </ng-template>\n                            </div>\n                            <p class=\"text subtitle userSubtitle\">AMIGOS COMUNES</p>\n                            <div class=\"paginationMutualDiv col-xxl-5 col-xl-5 col-lg-5 col-md-12 col-sm-12 col-5\">\n                                <div class=\"row\">\n                                    <ng-container *ngIf=\"mutualFriends.length !=0; else mutualFriendsDiv\">\n                                        <div *ngFor=\"let user of mutualFriends\" class=\"col-xxl-5 col-xl-5 col-lg-5 col-md-12 col-sm-12 col-5 userDiv\">\n                                            <ng-container *ngIf=\"user.userPhoto; else userImagesDiv\">\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\"\n                                                         [src]=\"user.userPhoto\" alt=\"\" id=\"detailMutualUser_photo\">\n                                                </p>\n                                                <p class=\"mutual mutualUser\">\n                                                    {{user.userLogin}}\n                                                </p>\n                                            </ng-container>\n                                            <ng-template #userImagesDiv>\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\" [src]=\"defaultImage\">\n                                                </p>\n                                                <p class=\"mutual mutualUser\">\n                                                    {{user.userLogin}}\n                                                </p>\n                                            </ng-template>\n                                        </div>\n                                        <div *ngIf=\"mutualFriends.length > sizeMutualFriends\" [ngClass]=\"previousFriendClass\" class=\"more\" (click)=\"getLessMutualFriends();\"><a>\n                                            Ver menos</a></div>\n                                        <div *ngIf=\"mutualFriends.length < totalMutualFriends\" [ngClass]=\"nextFriendClass\" class=\"more\" (click)=\"getMoreMutualFriends();\"><a>\n                                            Ver más</a></div>\n                                    </ng-container>\n                                    <ng-template #mutualFriendsDiv>\n                                        <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                            <p class=\"text userText\">No hay amigos en común</p>\n                                        </div>\n                                    </ng-template>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-11 mutualBorder\">\n                                <p class=\"text subtitle\">GRUPOS COMUNES</p>\n                                <div class=\"paginationMutualDiv mutualRight col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5\">\n                                    <div class=\"row\">\n                                        <ng-container  *ngIf=\"mutualGroups.length !=0; else mutualGroupsDiv\">\n                                            <div *ngFor=\"let group of mutualGroups\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5 mutualDiv\">\n                                                <ng-container *ngIf=\"group.groupPhoto; else groupImagesDiv\">\n                                                    <p class=\"imageP\">\n                                                        <img class=\"imageMutuals\"\n                                                             [src]=\"group.groupPhoto\" alt=\"\" id=\"detailMutualGroup_photo\">\n                                                    </p>\n                                                    <p class=\"mutual\">\n                                                        {{group.groupName}}\n                                                    </p>\n                                                </ng-container>\n                                                <ng-template #groupImagesDiv>\n                                                    <p class=\"imageP\">\n                                                        <img class=\"imageMutuals\" [src]=\"defaultGroupImage\">\n                                                    </p>\n                                                    <p class=\"mutual\">\n                                                        {{group.groupName}}\n                                                    </p>\n                                                </ng-template>\n                                            </div>\n                                            <div *ngIf=\"mutualGroups.length > sizeMutualGroups\" [ngClass]=\"previousGroupClass\" class=\"moreMutual\" (click)=\"getLessMutualGroups()\"><a>\n                                                Ver menos</a></div>\n                                            <div *ngIf=\"mutualGroups.length < totalMutualGroups\" [ngClass]=\"nextGroupClass\" class=\"moreMutual\" (click)=\"getMoreMutualGroups()\"><a>\n                                                Ver más</a></div>\n                                        </ng-container>\n                                        <ng-template #mutualGroupsDiv>\n                                            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                                <p class=\"text withoutText\">No hay grupos en común</p>\n                                            </div>\n                                        </ng-template>\n                                    </div>\n                                </div>\n                            <p class=\"text subtitle\">EVENTOS COMUNES</p>\n                            <div class=\"paginationMutualDiv mutualRight col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5\">\n                                <div class=\"row\">\n                                    <ng-container  *ngIf=\"mutualEvents.length !=0; else mutualEventsDiv\">\n                                        <div *ngFor=\"let event of mutualEvents\" class=\"col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-5 mutualDiv\">\n                                            <ng-container *ngIf=\"event.eventPhoto; else eventImagesDiv\">\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\"\n                                                         [src]=\"event.eventPhoto\" alt=\"\" id=\"detailMutualEvent_photo\">\n                                                </p>\n                                                <p class=\"mutual\">\n                                                    {{event.eventName}}\n                                                </p>\n                                            </ng-container>\n                                            <ng-template #eventImagesDiv>\n                                                <p class=\"imageP\">\n                                                    <img class=\"imageMutuals\" [src]=\"defaultEventImage\">\n                                                </p>\n                                                <p class=\"mutual\">\n                                                    {{event.eventName}}\n                                                </p>\n                                            </ng-template>\n                                        </div>\n                                        <div *ngIf=\"mutualEvents.length > sizeMutualEvents\" [ngClass]=\"previousEventClass\" class=\"moreMutual\" (click)=\"getLessMutualEvents();\"><a>\n                                            Ver menos</a></div>\n                                        <div *ngIf=\"mutualEvents.length < totalMutualEvents\" [ngClass]=\"nextEventClass\"class=\"moreMutual\" (click)=\"getMoreMutualEvents();\"><a>\n                                            Ver más</a></div>\n                                    </ng-container>\n                                    <ng-template #mutualEventsDiv>\n                                        <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                                            <p class=\"text withoutText\">No hay eventos en común</p>\n                                        </div>\n                                    </ng-template>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <ul class=\"row paginationUser\">\n                            <li [ngClass]=\"previousUser\" *ngIf=\"previous\">\n                                <a class=\"previousUser\" (click)=\"setPage(-1);\">Anterior</a>\n                            </li>\n                            <li [ngClass]=\"nextUser\" *ngIf=\"next\">\n                                <a class=\"nextUser\" (click)=\"setPage(1);\">Siguiente</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<simple-notifications></simple-notifications>\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {STATUS} from \"../listUsers/listUsers.component\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {MUser} from \"../../../models/MUser\";\nimport {MGroup} from \"../../../models/MGroup\";\nimport {MUserUser} from \"../../../models/MUserUser\";\nimport {MEvent} from \"../../../models/MEvent\";\nimport {GroupUserService} from \"../../../services/groupUser.service\";\nimport {UserEventService} from \"../../../services/userEvent.service\";\n\nexport enum MESSAGE{\n    CANCELREQUEST = '¿Cancelar solicitud?', UNFOLLOW = '¿Dejar de seguir?', ALLOWREQUEST = '¿Aceptar solicitud?', SENTREQUEST = '¿Enviar solicitud?'\n}\n\n@Component({\n    selector: 'app-detailUser',\n    templateUrl: './detailUser.component.html',\n    styleUrls: ['./detailUser.component.css']\n})\n\nexport class DetailUserComponent implements OnInit {\n\n    @Output()\n    eventMessage = new EventEmitter<number>();\n    defaultEventImage: string = \"./assets/event7.jpg\";\n    defaultGroupImage: string = \"./assets/group7_2.jpg\";\n    defaultImage: string = \"./assets/user16.jpg\";\n    previousUser: string;\n    nextUser: string;\n\n    previousFriendClass: string;\n    nextFriendClass: string;\n\n    previousGroupClass: string;\n    nextGroupClass: string;\n\n    previousEventClass: string;\n    nextEventClass: string;\n\n    mutualGroups: MGroup[] = [];\n    mutualGroupsStored: MGroup[] = [];\n    pageMutualGroups = 0;\n    sizeMutualGroups = 6;\n    totalMutualGroups: number=0;\n\n    mutualFriends: MUser[] = [];\n    mutualFriendsStored: MUser[] = [];\n    pageMutualFriends = 0;\n    sizeMutualFriends = 4;\n    totalMutualFriends: number=0;\n\n    mutualEvents: MEvent[] = [];\n    mutualEventsStored: MEvent[] = [];\n    pageMutualEvents = 0;\n    sizeMutualEvents = 4;\n    totalMutualEvents: number=0;\n\n    message:string=\"\";\n    _status:string=\"\";\n    _previous: boolean = false;\n    _next: boolean = false;\n    _user: MUser = new MUser();\n\n    @Output()\n    eventDetail = new EventEmitter<number>();\n\n    constructor(private authenticationService: AuthenticationService,\n                private userUserService: UserUserService,\n                private userEventService: UserEventService,\n                private groupUserService: GroupUserService\n    ) {\n    }\n\n    ngOnInit() {\n        this.paginationUserClass();\n        this.paginationFriendClass();\n        this.paginationEventClass();\n\n    }\n\n    get user(){\n        this.paginationFriendClass();\n        this.paginationGroupClass();\n        this.paginationEventClass();\n\n        return this._user;\n    }\n\n    @Input() set user (user: MUser) {\n        if (user != undefined) {\n            this._user = user;\n            this.mutualReset();\n            if (this.user.userId != null){\n                this.getMutualUserGroups(this.user.userId);\n                this.getMutualFriends(this.user.userId);\n                this.getMutualEvents(this.user.userId);\n\n                this.getTotalMutualFriends(this.user.userId);\n                this.getTotalMutualGroups(this.user.userId);\n                this.getTotalMutualEvents(this.user.userId);\n\n\n            }else{\n                this._user = new MUser();\n            }\n        }\n        this.paginationUserClass();\n        this.paginationFriendClass();\n        this.paginationGroupClass();\n        this.paginationEventClass();\n\n    }\n\n\n    mutualReset(){\n        this.mutualGroups = [];\n        this.mutualFriends = [];\n        this.mutualEvents = [];\n\n        this.mutualGroupsStored = [];\n        this.mutualFriendsStored = [];\n        this.mutualEventsStored = [];\n\n        this.pageMutualGroups = 0;\n        this.pageMutualFriends = 0;\n        this.pageMutualEvents = 0;\n    }\n\n\n    get previous(){\n        return this._previous;\n    }\n\n    @Input() set previous( previous: boolean){\n        this._previous = previous;\n        this.paginationUserClass();\n    }\n\n    get status(){\n        return this._status;\n    }\n\n    @Input() set status( status: string){\n        this._status = status;\n        this.setMessage();\n    }\n\n    get next(){\n        return this._next;\n    }\n\n    @Input() set next( next: boolean){\n        this._next = next;\n        this.paginationUserClass();\n\n    }\n\n    setPage(number: number){\n        this.eventDetail.emit(number);\n    }\n\n    setMessage(){\n        if (this.status == STATUS.FOLLOW){\n            this.message = MESSAGE.UNFOLLOW;\n        }else if (this.status == STATUS.SENT){\n            this.message = MESSAGE.CANCELREQUEST;\n        }else if (this.status == STATUS.PENDING){\n            this.message = MESSAGE.ALLOWREQUEST;\n        }else if (this.status == STATUS.REQUEST){\n            this.message = MESSAGE.SENTREQUEST;\n        }\n    }\n\n    getMessageStatus(): string{\n        if (this.status == STATUS.FOLLOW){\n            return \"DEJAR DE SEGUIR\";\n        }else if (this.status == STATUS.SENT){\n            return \"CANCELAR ENVÍO DE SOLICITUD\";\n        }else if (this.status == STATUS.PENDING){\n            return \"ACEPTAR O DENEGAR SOLICITUD\";\n        }else if (this.status == STATUS.REQUEST){\n            return \"ENVIAR SOLICITUD\"\n        }\n    }\n\n    private paginationUserClass(){\n        if(this._previous && this._next){\n            this.previousUser = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n            this.nextUser = \"col-xxl-6 col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\";\n        }else if (!this._previous && this._next){\n            this.previousUser = \"\";\n            this.nextUser = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n        }else if(this._previous && !this._next){\n            this.previousUser = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\";\n            this.nextUser = \"\";\n        }else{\n            this.previousUser = \"\";\n            this.nextUser = \"\";\n        }\n    }\n\n    private paginationFriendClass(){\n        if(this.mutualFriends.length > this.sizeMutualFriends && this.mutualFriends.length < this.totalMutualFriends){\n            this.previousFriendClass = \"col-xxl-7 col-xl-7 col-lg-7 col-md-5 col-sm-5 col-6\";\n            this.nextFriendClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5\";\n        }else if (this.mutualFriends.length <= this.sizeMutualFriends && this.mutualFriends.length < this.totalMutualFriends){\n            this.previousFriendClass = \"\";\n            this.nextFriendClass = \"col-xxl-7 col-xl-7 col-lg-7 col-md-12 col-sm-12 col-6\";\n        }else if(this.mutualFriends.length > this.sizeMutualFriends && this.mutualFriends.length >= this.totalMutualFriends){\n            this.previousFriendClass = \"col-xxl-8 col-xl-8 col-lg-8 col-md-12 col-sm-12 col-6\";\n            this.nextFriendClass = \"\";\n        }else{\n            this.previousFriendClass = \"\";\n            this.nextFriendClass = \"\";\n        }\n    }\n\n    private paginationGroupClass(){\n        if(this.mutualGroups.length > this.sizeMutualGroups && this.mutualGroups.length < this.totalMutualGroups){\n            this.previousGroupClass = \"col-xxl-6 col-xl-5 col-lg-5 col-md-4 col-sm-5 col-6\";\n            this.nextGroupClass = \"col-xxl-6 col-xl-7 col-lg-7 col-md-3 col-sm-5 col-5\";\n        }else if (this.mutualGroups.length <= this.sizeMutualGroups && this.mutualGroups.length < this.totalMutualGroups){\n            this.previousGroupClass = \"\";\n            this.nextGroupClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n        }else if(this.mutualGroups.length > this.sizeMutualGroups && this.mutualGroups.length >= this.totalMutualGroups){\n            this.previousGroupClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n            this.nextGroupClass = \"\";\n        }else{\n            this.previousGroupClass = \"\";\n            this.nextGroupClass = \"\";\n        }\n    }\n\n    private paginationEventClass(){\n        if(this.mutualEvents.length > this.sizeMutualEvents && this.mutualEvents.length < this.totalMutualEvents){\n            this.previousEventClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-4 col-sm-5 col-6\";\n            this.nextEventClass = \"col-xxl-7 col-xl-7 col-lg-7 col-md-3 col-sm-5 col-5\";\n        }else if (this.mutualEvents.length <= this.sizeMutualEvents && this.mutualEvents.length < this.totalMutualEvents){\n            this.previousEventClass = \"\";\n            this.nextEventClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n        }else if(this.mutualEvents.length > this.sizeMutualEvents && this.mutualEvents.length >= this.totalMutualEvents){\n            this.previousEventClass = \"col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8 col-4\";\n            this.nextEventClass = \"\";\n        }else{\n            this.previousEventClass = \"\";\n            this.nextEventClass = \"\";\n        }\n    }\n\n    onRequest($event){\n        if ($event){\n            if (this.status == STATUS.PENDING) {\n                let mUserUser: MUserUser = new MUserUser();\n                mUserUser.userId = this.user.userId;\n                mUserUser.friendId = this.authenticationService.getUser().id;\n                mUserUser.accept = true;\n                this.userUserService.editUserUser(mUserUser).subscribe();\n            }else if (this.status == STATUS.REQUEST){\n                let mUserUser: MUserUser = new MUserUser();\n                mUserUser.userId = this.authenticationService.getUser().id;\n                mUserUser.friendId = this.user.userId;\n                mUserUser.userUserActive = true;\n                mUserUser.accept = false;\n                this.userUserService.getDeletedUserUser(this.user.userId,this.authenticationService.getUser().id).subscribe((response)=>{\n                    if (response != null && !response.userUserActive){\n                        this.userUserService.editUserUser(mUserUser).subscribe();\n                    }else{\n                        this.userUserService.createUserUser(mUserUser).subscribe();\n                    }\n                });\n            }else if (this.status == STATUS.SENT || this.status == STATUS.FOLLOW){\n                this.deleteUserUser();\n            }\n        }else{\n            if (this.status == STATUS.PENDING){\n                this.deleteUserUser();\n            }\n        }\n        this.eventMessage.emit();\n    }\n\n    private deleteUserUser(){\n        this.userUserService.deleteUserUser(this.user.userId, this.authenticationService.getUser().id).subscribe();\n    }\n\n    getMutualUserGroups(userId:number){\n        this.groupUserService.getPageableMutualGroups(userId, this.authenticationService.getUser().id,this.pageMutualGroups, this.sizeMutualGroups).subscribe((response) => {\n            this.mutualGroups.push(...response);\n            this.paginationGroupClass();\n        });\n    }\n\n    getTotalMutualGroups(userId:number){\n        this.groupUserService.countMutualGroups(userId, this.authenticationService.getUser().id).subscribe((number)=>{\n            this.totalMutualGroups = number;\n        });\n    }\n\n    getMoreMutualGroups(){\n        this.pageMutualGroups +=1;\n        if (this.mutualGroups.length < this.mutualGroupsStored.length){\n            this.mutualGroups = this.mutualGroupsStored.slice(0,this.sizeMutualGroups*(this.pageMutualGroups+1));\n        }else{\n            this.getMutualUserGroups(this.user.userId);\n        }\n        this.paginationGroupClass();\n    }\n\n    getLessMutualGroups(){\n        if (this.mutualGroupsStored.length != this.totalMutualGroups){\n            this.mutualGroupsStored = this.mutualGroups;\n            this.mutualGroups = this.mutualGroups.slice(0,this.sizeMutualGroups*this.pageMutualGroups);\n        }else{\n            this.mutualGroups = this.mutualGroupsStored.slice(0, this.sizeMutualGroups*this.pageMutualGroups);\n        }\n        this.pageMutualGroups -=1;\n        this.paginationGroupClass();\n    }\n\n    getMutualFriends(userId:number){\n        this.userUserService.getPageableMutualFriends(userId, this.authenticationService.getUser().id,this.pageMutualFriends, this.sizeMutualFriends).subscribe((response) => {\n            this.mutualFriends.push(...response);\n            this.paginationFriendClass();\n        });\n    }\n\n\n    getTotalMutualFriends(userId:number){\n        this.userUserService.countMutualFriends(userId, this.authenticationService.getUser().id).subscribe((number)=>{\n            this.totalMutualFriends = number;\n        });\n    }\n\n    getMoreMutualFriends(){\n        this.pageMutualFriends +=1;\n        if (this.mutualFriends.length < this.mutualFriendsStored.length){\n            this.mutualFriends = this.mutualFriendsStored.slice(0,this.sizeMutualFriends*(this.pageMutualFriends+1));\n        }else{\n            this.getMutualFriends(this.user.userId);\n        }\n        this.paginationFriendClass();\n    }\n\n\n    getLessMutualFriends(){\n        if (this.mutualFriendsStored.length != this.totalMutualFriends){\n            this.mutualFriendsStored = this.mutualFriends;\n            this.mutualFriends = this.mutualFriends.slice(0,this.sizeMutualFriends*this.pageMutualFriends);\n        }else{\n            this.mutualFriends = this.mutualFriendsStored.slice(0, this.sizeMutualFriends*this.pageMutualFriends);\n        }\n        this.pageMutualFriends -=1;\n        this.paginationFriendClass();\n    }\n\n    getMutualEvents(userId:number){\n        this.userEventService.getPageableMutualEvents(userId, this.authenticationService.getUser().id,this.pageMutualEvents, this.sizeMutualEvents).subscribe((response) => {\n            this.mutualEvents.push(...response);\n            this.paginationEventClass();\n        });\n    }\n\n    getTotalMutualEvents(userId:number){\n        this.userEventService.countMutualEvents(userId, this.authenticationService.getUser().id).subscribe((number)=>{\n            this.totalMutualEvents = number;\n        });\n    }\n\n    getMoreMutualEvents(){\n        this.pageMutualEvents +=1;\n        if (this.mutualEvents.length < this.mutualEventsStored.length){\n            this.mutualEvents = this.mutualEventsStored.slice(0,this.sizeMutualEvents*(this.pageMutualEvents+1));\n        }else{\n            this.getMutualEvents(this.user.userId);\n        }\n        this.paginationEventClass();\n    }\n\n    getLessMutualEvents(){\n        if (this.mutualEventsStored.length != this.totalMutualEvents){\n            this.mutualEventsStored = this.mutualEvents;\n            this.mutualEvents = this.mutualEvents.slice(0,this.sizeMutualEvents*this.pageMutualEvents);\n        }else{\n            this.mutualEvents = this.mutualEventsStored.slice(0, this.sizeMutualEvents*this.pageMutualEvents);\n        }\n        this.pageMutualEvents -=1;\n        this.paginationEventClass();\n    }\n}\n\n","<div class=\"searchDiv col-auto text-center\">\n    <form ngNativeValidate (input)=\"searchInput()\" #searchUsersForm=\"ngForm\">\n        <input type=\"search\" id=\"friend_nameLogin\" name=\"nameLogin\" placeholder=\"Buscar por nombre de usuario\"\n               [(ngModel)]=\"login\" required #userLoginForm=\"ngModel\" aria-label=\"Search\">\n    </form>\n</div>\n<app-detailUser (eventDetail)=\"setSelectedUser($event)\" (eventMessage)=\"getUsers()\" [user]=\"selectedUser\" [previous] = \"getPrevious()\" [next] = \"getNext()\" [status]=\"status\"></app-detailUser>\n<div class=\"row row-cols-1 row-cols-xxl-3 row-cols-xl-3 row-cols-lg-2 row-cols-md-2 row-cols-sm-1 g-4\">\n    <ng-container *ngIf=\"users.length !=0; else usersDiv\">\n        <div *ngFor=\"let user of users\">\n            <div class=\"col\">\n                <div class=\"card mb-3 color\" data-bs-toggle=\"modal\" data-bs-target=\"#detailUserModal\" (click)=\"selectUser(users.indexOf(user))\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-xxl-5 col-xl-12 col-lg-5 col-md-12 col-sm-5\">\n                            <ng-container *ngIf=\"user.userPhoto; else imagesDiv\">\n                                <img class=\"image\" [src]=\"images[user.userId]\" alt=\"foto de usuario\">\n                            </ng-container>\n                            <ng-template #imagesDiv>\n                                <img class=\"image\" [src]=\"defaultImage\" alt=\"foto por defecto\">\n                            </ng-template>\n                        </div>\n                        <div class=\"col-xxl-7 col-xl-12 col-lg-7 col-md-12 col-sm-7\">\n                            <div class=\"card-body-xxl-7 card-body-xl-12 card-body-lg-7 card-body-md-12 card-body-sm-7\">\n                                <h5 class=\"title\">{{user.userLogin}}</h5>\n                                <p class=\"card-text\">\n                                    <a class=\"message\" aria-label=\"solicitud de amistad\">{{friends[user.userId]}}</a>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #usersDiv>\n       <p class=\"text\">NO EXISTEN USUARIOS</p>\n    </ng-template>\n</div>\n<div class=\"paginationDiv\">\n    <ul class=\"row pagination\">\n        <li class=\"page-item\" [ngClass]=\"previous\" *ngIf=\"page!=0\"><a class=\"page-link previous\" aria-label=\"anterior\" (click)=\"setPage(-1)\">Anterior</a>\n        </li>\n        <li class=\"page-item\" [ngClass]=\"next\" *ngIf=\"page+1<totalPage\"><a class=\"page-link next\" aria-label=\"siguiente\" (click)=\"setPage(1)\">Siguiente</a>\n        </li>\n    </ul>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../services/user.service\";\nimport {UserUserService} from \"../../../services/userUser.service\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MUser} from \"../../../models/MUser\";\n\n\nexport enum STATUS {\n    REQUEST = 'Solicitar amistad', PENDING = 'Solicitud pendiente', FOLLOW = 'Siguiendo', SENT = 'Solicitud enviada'\n}\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './listUsers.component.html',\n    styleUrls: ['./listUsers.component.css']\n})\nexport class ListUsersComponent implements OnInit {\n    login = \"\";\n    users: MUser[] = [];\n    images: {[index:number]: any;} = {};\n    defaultImage = \"./assets/user16.jpg\";\n    friends: {[index: number]: any;} = {};\n    totalPage = 0;\n    page = 0;\n    private size = 6;\n    previous:string;\n    next:string;\n    selectedUsers: MUser;\n    pageDirection: number;\n    index:number;\n    status:string=\"\";\n    selectedUser: MUser = new MUser();\n\n    constructor(private userService: UserService,\n                private userUserService: UserUserService,\n                private authenticationService: AuthenticationService,\n                private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.getUsers();\n        this.paginationClass();\n    }\n\n    setUser(){\n        this.selectedUser = new MUser();\n    }\n\n    selectUser(index:number){\n        this.selectedUser = this.users[index];\n        this.index = index;\n        this.status = this.friends[this.selectedUser.userId];\n    }\n\n    setSelectedUserPage(){\n        if (this.pageDirection != undefined){\n            if (this.pageDirection == -1){\n                this.index = this.size-1;\n                this.selectedUser = this.users[this.index];\n            }else if (this.pageDirection == 1){\n                this.index = 0;\n                this.selectedUser = this.users[this.index];\n            }\n        }\n    }\n\n    getUsers(){\n        this.userService.getPageableUsers(this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.users = response;\n            this.setSelectedUserPage();\n            this.getURL(response);\n            this.getStatus(response);\n            this.totalPages();\n        });\n    }\n\n    paginationClass(){\n        if(this.page!=0 && this.page+1<this.totalPage){\n            this.previous = \"col-xxl-9 col-xl-9 col-lg-9 col-md-9 col-sm-2 col-6\";\n            this.next = \"col-xxl-3 col-xl-3 col-lg-3 col-md-3 col-sm-2 col-6\";\n        }else if (this.page==0 && this.page+1<this.totalPage){\n            this.previous = \"\";\n            this.next = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n        }else if(this.page!=0 && this.page+1==this.totalPage){\n            this.previous = \"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\";\n            this.next = \"\";\n        }else{\n            this.previous = \"\";\n            this.next = \"\";\n        }\n    }\n\n    setPage(page: number){\n        this.page += page;\n        this.pagination();\n        this.paginationClass();\n    }\n\n    private pagination(){\n        if(this.login == \"\"){\n            this.getUsers();\n        }else{\n            this.searchUsers();\n        }\n    }\n\n    private getURL(users: MUser[]){\n        users.forEach((user) => {\n            this.images[user.userId] = user.userPhoto;\n        });\n    }\n\n    private searchUsers(){\n        this.userService.getPageableSearchUsers(this.login, this.authenticationService.getUser().id, this.page, this.size).subscribe((response) => {\n            this.users = response;\n            this.getStatus(response);\n            this.searchTotalPages();\n            this.getURL(response);\n        });\n    }\n\n    searchInput(){\n        this.page=0;\n        this.pagination();\n    }\n\n    private totalPages() {\n        this.userService.countUsers(this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    private searchTotalPages(){\n        this.userService.countSearchUsers(this.login, this.authenticationService.getUser().id).subscribe((response) => {\n            this.totalPage = Math.ceil(response/this.size);\n        });\n    }\n\n    getNext (): boolean{\n        if (this.page != this.totalPage-1 || this.users[this.index+1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getPrevious():boolean{\n        if (this.page != 0 || this.users[this.index-1] != undefined){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    setSelectedUser(event: number) {\n        this.pageDirection = event.valueOf();\n        if ( this.users[this.index + event.valueOf()] != undefined){\n            this.selectUser(this.index + event.valueOf());\n        }else{\n            this.setPage(event.valueOf());\n\n        }\n    }\n\n    private statusValue (statusBD: boolean, friend: boolean): string {\n        let status: string;\n        if (statusBD) {\n            status = STATUS.FOLLOW;\n        } else if (friend) {\n            status = STATUS.PENDING;\n        }else if (!statusBD){\n            status = STATUS.SENT;\n        }else{\n            status = STATUS.REQUEST;\n        }\n        return status;\n    }\n\n    private getStatus (mUsers: MUser[]) {\n        mUsers.forEach((mUser) => {\n            this.userUserService.getUserUser(mUser.userId, this.authenticationService.getUser().id).subscribe((response) => {\n                if (response != null) {\n                    this.friends[mUser.userId] = this.statusValue(response.accept,false);\n                } else {\n                    this.friendStatus(mUser);\n                }\n            });\n        });\n    }\n\n    private friendStatus(mUser: MUser){\n        this.userUserService.getUserUser(this.authenticationService.getUser().id,mUser.userId).subscribe((response) => {\n                if (response != null) {\n                    this.friends[mUser.userId] = this.statusValue(response.accept, true);\n                }else{\n                    this.friends[mUser.userId] = STATUS.REQUEST;\n                }\n            });\n    }\n}","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from \"../services/authentication.service\";\n/*\nEs un servicio injectable que devuelve true si el usuario puede acceder a una ruta o false si no puede.\n */\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n\tconstructor(private router: Router) {\n\t}\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n\t\tif (localStorage.getItem('currentUser')) {\n\t\t\tif (route.url.toString() == \"products\" && localStorage.getItem(\"products\") == undefined) {\n\t\t\t\tthis.router.navigate(['/events']);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (route.url.toString() == \"transactions\" && localStorage.getItem(\"transactions\") == undefined) {\n\t\t\t\tthis.router.navigate(['/events']);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (route.url.toString() != \"products\"){\n\t\t\t\tlocalStorage.removeItem(\"products\");\n\t\t\t}\n\t\t\tif (route.url.toString() != \"transactions\"){\n\t\t\t\tlocalStorage.removeItem(\"transactions\");\n\t\t\t}\n\n\t\t\tif (route.url.toString() != \"profile\"){\n\t\t\t\tlocalStorage.removeItem(\"profile\");\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tthis.router.navigate(['/login']);\n\n\t\treturn false;\n\t}\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n\tconstructor(public authenticationService: AuthenticationService) {}\n\n  /*\n  INTERCEPTOR -> tipo de servicio implementable que permite interceptar peticiones HTTP entrantes o salientes\n  utilizando HTTPClient. Al interceptar la solicitud HTTP, podemos modificar o cambiar el valor de la solicitud.\n  */\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tif (this.authenticationService.isGuest()) {\n\t\t\treturn next.handle(request);\n\t\t}\n\t\trequest = request.clone({\n\t\t\tsetHeaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\"Access-Control-Allow-Headers\": \"Content-Type\",\n\t\t\t\"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS,DELETE,PUT\",\n\t\t\tAuthorization: this.authenticationService.getAuthorizationHeader()\n\t\t\t}\n\t\t});\n\n\t\treturn next.handle(request);\n\t}\n}\n","//USUARIO AUTENTICADO\n\nexport class AuthUser {\n  private _authHeader: string;\n  private _authenticated: boolean;\n  private userLogin: string;\n  private userPassword: string;\n  private userEmail: string;\n  private roles: string;\n  private permissions: string;\n  private userId: number;\n  private userName: string;\n  private userSurname: string;\n  private userBirthday: string;\n  private userPhoto: string;\n  private userNotify: boolean;\n\n  constructor() {\n    const user: AuthUser = JSON.parse(<string>localStorage.getItem('currentUser'));\n    if (user != null) {\n      this.userId = user.userId;\n      this.userLogin = user.userLogin;\n      this.userPassword = user.userPassword;\n      this.userEmail = user.userEmail;\n      this._authenticated = user._authenticated;\n      this._authHeader = user._authHeader;\n      this.roles = user.roles;\n      this.permissions = user.permissions;\n      this.userName = user.userName;\n      this.userSurname = user.userSurname;\n      this.userBirthday = user.userBirthday;\n      this.userPhoto = user.userPhoto;\n      this.userNotify = user.userNotify;\n    } else {\n      this._authenticated = false;\n    }\n  }\n\n  get authHeader(): string {\n    return this._authHeader;\n  }\n\n  set authHeader(value: string) {\n    this._authHeader = value;\n  }\n\n  get authenticated(): boolean {\n    return this._authenticated;\n  }\n\n  set authenticated(value: boolean) {\n    this._authenticated = value;\n  }\n\n  get email(): string {\n    return this.userEmail;\n  }\n\n  set email(value: string) {\n    this.userEmail = value;\n  }\n\n  get name(): string {\n    return this.userName;\n  }\n\n  set name(value: string) {\n    this.userName = value;\n  }\n\n  get surname(): string {\n    return this.userSurname;\n  }\n\n  set surname(value: string) {\n    this.userSurname = value;\n  }\n\n  get birthday(): string {\n    return this.userBirthday;\n  }\n\n  set birthday(value: string) {\n    this.userBirthday = value;\n  }\n\n  get photo(): string {\n    return this.userPhoto;\n  }\n\n  set photo(value: string) {\n    this.userPhoto = value;\n  }\n\n  get login(): string {\n    return this.userLogin;\n  }\n\n  set login(value: string) {\n    this.userLogin = value;\n  }\n\n  get password(): string {\n    return this.userPassword;\n  }\n\n  set password(value: string) {\n    this.userPassword = value;\n  }\n\n  get rol(): string {\n    return this.roles;\n  }\n\n  set rol(value: string) {\n    this.roles = value;\n  }\n\n  get permission(): string {\n    return this.permissions;\n  }\n\n  set permission(value: string) {\n    this.permissions = value;\n  }\n\n  get id(): number {\n    return this.userId;\n  }\n\n  set id(value: number) {\n    this.userId = value;\n  }\n\n  get notify(): boolean {\n    return this.userNotify;\n  }\n\n  set notify(value: boolean) {\n    this.userNotify = value;\n  }\n\n  //ALMACENA AL USUARIO LOGGEADO ASOCIADO A LA CLAVE currentUser EN FORMATO JSON\n  public save() {\n    localStorage.setItem('currentUser', JSON.stringify(this));\n  }\n\n  //ELIMINA EL USUARIO LOGGEADO\n  public clear() {\n    localStorage.removeItem('currentUser');\n  }\n}","export class MEvent {\n    eventId: number;\n    eventName:string;\n    eventDescription:string;\n    eventStart:string;\n    eventEnd:string;\n    eventLocation:string;\n    eventPhoto:string;\n    eventOpen:boolean;\n    eventOwner:number;\n    eventActive: boolean;\n    eventCreation: Date;\n    eventRemoval: Date;\n\n}","export class MGroup {\n    groupId: number;\n    groupName: string;\n    groupDescription: string;\n    groupPhoto: string;\n    groupCreation: Date;\n    groupRemoval: Date;\n    groupOwner: number;\n    groupActive: boolean;\n}","export class MGroupMembers {\n    groupId: number;\n    groupName: string;\n    groupPhoto: string;\n    userId: number;\n    userLogin: string;\n    userPhoto: string;\n    disabled: boolean = false;\n}","export class MProduct {\n    productId: number;\n    productName: string;\n    productDescription: string;\n    productCost: number;\n    productQuantity: number;\n    productPhoto: string;\n    eventId: number;\n    productPurchaseDate: string;\n    productActive: boolean;\n    productCreation: Date;\n    productRemoval: Date;\n\n}","export class MRetrievePassword {\n    userEmail:string;\n    tokenPassword:string;\n    newPassword: string;\n}","export class MUser {\n    userId: number;\n    userName: string;\n    userSurname: string;\n    userLogin: string;\n    userPassword: string;\n    userEmail: string;\n    userBirthday: Date;\n    userPhoto: string;\n    roles: string;\n    permissions: string;\n    userActive: boolean;\n    userCreation: Date;\n    userRemoval: Date;\n    userNotify: boolean;\n}","export class MUserEvent {\n    userId: number;\n    eventId: number;\n    totalExpense: number;\n    debt: number;\n    accept: boolean;\n    userEventActive: boolean;\n    userEventRemoval: Date;\n    userEventCreation: Date;\n}","export class MUserUser {\n    userId: number;\n    friendId: number;\n    userUserActive: boolean;\n    userUserCreation: Date;\n    userUserRemoval: Date;\n    accept: boolean;\n}","export class MUserUserEvent {\n    senderId: number;\n    receiverId: number;\n    eventId: number;\n    confirmed: boolean;\n    cost: number;\n    paid: boolean;\n    userUserEventActive: boolean;\n    userUserEventCreation: Date;\n    userUserEventRemoval: Date;\n}","export class MVerifyEmail {\n    userEmail:string;\n    tokenPassword:string;\n}\n\n\n","import {catchError} from 'rxjs/operators';\nimport {MonoTypeOperatorFunction} from 'rxjs/internal/types';\nimport {throwError} from 'rxjs';\n\nexport class APachasError extends Error {\n\tpublic readonly summary: string;\n\tpublic readonly detail: string;\n\tpublic readonly cause?: Error;\n\n\tstatic throwOnError<T>(summary: string, detail: string): MonoTypeOperatorFunction<T> {\n\t\treturn catchError(\n\t\t\t(error: Error) => throwError(new APachasError(summary, detail, error))\n\t\t);\n\t}\n\n\tconstructor(summary: string, detail: string, cause?: Error) {\n\t\tsuper(detail);\n\n\t\tthis.summary = summary;\n\t\tthis.detail = detail;\n\t\tthis.cause = cause;\n\n\t\tObject.setPrototypeOf(this, APachasError.prototype);\n\t}\n}\n","export enum Severity {\n\tSUCCESS = 'SUCCESS',\n\tINFO = 'INFO',\n\tWARNING = 'WARNING',\n\tERROR = 'ERROR'\n}","import { ErrorHandler, Injectable } from '@angular/core';\nimport { NotificationService } from '../services/notification.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { APachasError } from '../entities';\n\n@Injectable()\nexport class ErrorNotificationHandler implements ErrorHandler {\n\tconstructor(\n\t\tprivate notificationService: NotificationService\n\t\t) {\n\t\t}\n\n\tpublic handleError(error: Error | APachasError | HttpErrorResponse): void {\n\t\tif (console) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\t\tif (error instanceof APachasError) {\n\t\t\tconsole.log('CAUSE', error.cause);\n\t\t\tthis.notificationService.error(error.detail, error.summary);\n\t\t} else if (error instanceof HttpErrorResponse) {\n\t\t\tthis.notificationService.error(error.error, error.statusText);\n\t\t}\n\t}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NotificationService} from './services/notification.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tNotificationService\n\t],\n\tdeclarations: []\n})\nexport class NotificationModule {}","import {EventEmitter, Injectable} from '@angular/core';\nimport {ErrorMessage, Severity} from '../entities';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class NotificationService {\n\tprivate readonly messageEmitter: EventEmitter<ErrorMessage>;\n\n\tconstructor() {\n\t\tthis.messageEmitter = new EventEmitter<ErrorMessage>();\n\t}\n\n\tpublic getMessages(): Observable<ErrorMessage> {\n\t\treturn this.messageEmitter;\n\t}\n\n\tpublic success(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.SUCCESS, summary: summary, detail: detail\n\t\t});\n\t}\n\n\tpublic info(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.INFO, summary: summary, detail: detail\n\t\t});\n\t}\n\n\tpublic warning(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.WARNING, summary: summary, detail: detail\n\t\t});\n\t}\n\n\tpublic error(detail: string, summary: string): void {\n\t\tthis.messageEmitter.emit({\n\t\t\tseverity: Severity.ERROR, summary: summary, detail: detail\n\t\t});\n\t}\n}"," import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {AuthUser} from '../models/AuthUser';\nimport {APachasError} from '../modules/notification/entities';\nimport {UserService} from \"./user.service\";\n import {NotificationService} from \"../modules/notification/services/notification.service\";\n\n//SERVICE -> Se encarga de acceder a los datos para entregarlos a los componentes\n@Injectable({\n  providedIn: 'root'\n})\n\n//ACCEDE A LOS DATOS NECESARIOS PARA LA AUTENTICACION\nexport class AuthenticationService {\n\n\tprivate user: AuthUser = new AuthUser();\n\n\tconstructor(private  http: HttpClient,  private userService: UserService,private notificationService: NotificationService) {}\n\n  //COMPRUEBA SI LAS CREDENCIALES SON CORRECTAS\n\tcheckCredentials(login: string, password: string) {\n\n\t\tthis.user.login = login;\n\t\tthis.user.password = password;\n\n\t\treturn this.http.post<void>(`${environment.restApi}/login`, {\n\t\t  \"username\": this.user.login,\n\t\t  \"password\": this.user.password\n\t\t}, {observe:\"response\" as \"body\", responseType: 'json'}\n\t\t)\n\t\t  .pipe(\n\t\t\tAPachasError.throwOnError('Failed to login', `User or password incorrect. Please try again.`)\n\t\t  );\n\t}\n\n  //CONFIGURA AL USUARIO LOGGEADO\n\tpublic logIn(login: string, password: string, authorization: string) {\n\t\tthis.user.login = login;\n\t\tthis.user.password = password;\n\t\tthis.user.authHeader = authorization;\n\t\tthis.user.authenticated = true;\n\t\tthis.setAuthUser(login);\n\t}\n\n\t//RECOGER OTROS DATOS DEL USUARIO Y COMPROBAR SI ESTA ACTIVO PARA AUTENTICAR\n\tpublic setAuthUser(login: string){\n\t\tthis.userService.getUser(login).subscribe((response) => {\n\t\t\tif (response.userActive){\n\t\t\t\tthis.user.id = response.userId;\n\t\t\t\tthis.user.email = response.userEmail;\n\t\t\t\tif (this.user.birthday !=null){\n\t\t\t\t\tthis.user.birthday = response.userBirthday.toString();\n\t\t\t\t}\n\t\t\t\tthis.user.name = response.userName;\n\t\t\t\tthis.user.surname = response.userSurname;\n\t\t\t\tthis.user.permission = response.permissions;\n\t\t\t\tthis.user.rol = response.roles;\n\t\t\t\tthis.user.photo = response.userPhoto;\n\t\t\t\tthis.user.notify = response.userNotify;\n\t\t\t\tthis.user.save();\n\t\t\t}else{\n\t\t\t\tthis.notificationService.warning(\"Activa tu cuenta con el email que has recibido en la cuenta proporcionada\",\"Cuenta no activada\");\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/*getEditUser(): AuthUser{\n\t\tthis.userService.getUserById(this.user.id).subscribe((response) => {\n\t\t\tthis.user.email = response.userEmail;\n\t\t\tthis.user.birthday = response.userBirthday.toString();\n\t\t\tthis.user.name = response.userName;\n\t\t\tthis.user.surname = response.userSurname;\n\t\t\tthis.user.permission = response.permissions;\n\t\t\tthis.user.rol = response.roles;\n\t\t\tthis.user.photo = response.userPhoto;\n\t\t\tthis.user.login = response.userLogin;\n\t\t\tthis.user.password = response.userPassword;\n\t\t\tthis.user.save();\n\t\t\treturn this.user;\n\t\t});\n\t\treturn null;\n\t}*/\n\n\t//CIERRE DE SESION\n\tpublic logOut() {\n\t\tthis.user.clear();\n\t\tthis.user = new AuthUser();\n\t}\n\n\t//CABECERA DE LA AUTORIZACION => TOKEN\n\tpublic getAuthorizationHeader(): string {\n\t\treturn this.getUser().authHeader;\n\t}\n\n\t//DEVUELVE EL USUARIO AUTENTICADO\n\tpublic getUser(): AuthUser {\n\t\treturn this.user;\n\t}\n\n\t//COMPRUEBA SI ES UN INVITADO\n\tpublic isGuest(): boolean {\n\t\treturn !this.user.authenticated;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {MEvent} from \"../models/MEvent\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {Event} from \"./entities/Event\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EventService {\n\n    constructor(private http: HttpClient) { }\n\n    createEvent(mEvent: MEvent): Observable<number> {\n        return this.http.post<number>(`${environment.restApi}/events`,{\n            \"eventId\": mEvent.eventId,\n            \"eventName\":mEvent.eventName,\n            \"eventDescription\":mEvent.eventDescription,\n            \"eventStart\": mEvent.eventStart,\n            \"eventEnd\": mEvent.eventEnd,\n            \"eventLocation\":mEvent.eventLocation,\n            \"eventPhoto\":mEvent.eventPhoto,\n            \"eventOpen\": \"\",\n            \"eventOwner\":mEvent.eventOwner,\n            \"eventActive\": \"\",\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al crear el evento', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editEvent(mEvent: MEvent): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/events`,{\n            \"eventId\": mEvent.eventId,\n            \"eventName\":mEvent.eventName,\n            \"eventDescription\":mEvent.eventDescription,\n            \"eventStart\": mEvent.eventStart,\n            \"eventEnd\": mEvent.eventEnd,\n            \"eventLocation\":mEvent.eventLocation,\n            \"eventPhoto\":mEvent.eventPhoto,\n            \"eventOpen\":mEvent.eventOpen,\n            \"eventOwner\":mEvent.eventOwner,\n            \"eventActive\": mEvent.eventActive,\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el evento', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editOpen(eventId: number, open: boolean): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/events/open/${eventId}`, open)\n            .pipe(\n                APachasError.throwOnError('Fallo al cerrar el evento', `Por favor, inténtelo de nuevo más tarde.`)\n            );\n    }\n\n    deleteEvent(eventId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/events/${eventId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar el evento', `Por favor, inténtelo de nuevo más tarde.`)\n        );\n    }\n\n    getEvent(eventId: number):Observable<MEvent>{\n        return this.http.get<Event>(`${environment.restApi}/events/${eventId}`).pipe(\n            map(this.mapEvent.bind(this))\n        );\n    }\n\n    private mapEvent(event: Event) : MEvent {\n        return {\n            eventId: event.eventId,\n            eventName:event.eventName,\n            eventDescription:event.eventDescription,\n            eventStart: event.eventStart,\n            eventEnd: event.eventEnd,\n            eventLocation:event.eventLocation,\n            eventPhoto:event.eventPhoto,\n            eventOpen:event.eventOpen,\n            eventOwner:event.eventOwner,\n            eventActive: event.eventActive,\n            eventCreation: event.eventCreation,\n            eventRemoval: event.eventRemoval\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MGroup} from \"../models/MGroup\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroupService {\n\n    constructor(private http: HttpClient) { }\n\n    createGroup(mGroup: MGroup): Observable<number> {\n        return this.http.post<number>(`${environment.restApi}/groups`,{\n            \"groupId\":mGroup.groupId,\n            \"groupName\": mGroup.groupName,\n            \"groupDescription\": mGroup.groupDescription,\n            \"groupPhoto\": mGroup.groupPhoto,\n            \"groupCreation\":\"\",\n            \"groupRemoval\": \"\",\n            \"groupOwner\": mGroup.groupOwner,\n            \"groupActive\": true\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al crear el grupo', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editGroup(mGroup: MGroup): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/groups`,{\n            \"groupId\":mGroup.groupId,\n            \"groupName\": mGroup.groupName,\n            \"groupDescription\": mGroup.groupDescription,\n            \"groupPhoto\": mGroup.groupPhoto,\n            \"groupCreation\":\"\",\n            \"groupRemoval\": \"\",\n            \"groupOwner\": mGroup.groupOwner,\n            \"groupActive\": null\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el grupo', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    deleteGroup(groupId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/groups/${groupId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar grupo', `Por favor, inténtelo de nuevo más tarde.`)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\nimport {map} from \"rxjs/operators\";\nimport {MGroup} from \"../models/MGroup\";\nimport {Group} from \"./entities/Group\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroupUserService {\n\n    constructor(private http: HttpClient) { }\n\n    getPageableMembers(groupId: number, page:number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/groupsUsers/pageable/members/${groupId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    getMembers(groupId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/groupsUsers/${groupId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    countMembers(groupId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/members/${groupId}`).pipe(\n            APachasError.throwOnError('Fallo al contar los integrantes del grupo', `Por favor, inténtelo de nuevo más tarde.`)\n        );\n    }\n\n    createGroupUser(groupId: any, userId: number): Observable<void> {\n        return this.http.post<void>(`${environment.restApi}/groupsUsers`,{\n            \"groupId\":groupId,\n            \"userId\": userId,\n            \"groupUserCreation\": \"\",\n            \"groupUserRemoval\": \"\",\n            \"groupUserActive\": true\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir integrantes al grupo', `Por favor, inténtelo de nuevo más tarde.`)\n            );\n    }\n\n    editGroupUser(groupId: number, userIds: number[]): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/groupsUsers/${groupId}`,userIds)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar integrantes del grupo', `Por favor, inténtelo de nuevo más tarde.`)\n            );\n    }\n\n    deleteGroupUser(groupId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/groupsUsers/${groupId}/${userId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar miembro del grupo', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    getPageableSearchGroups(groupName: string, authId: number, page: number, size: number): Observable<MGroup[]>{\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/pageable/${groupName}/${authId}?page=${page}&size=${size}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    countSearchGroups(groupName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/${authId}/${groupName}`);\n    }\n\n    countGroups(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/${authId}`);\n    }\n\n    getPageableGroups(groupId: number, page: number, size: number): Observable<MGroup[]> {\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/pageable/${groupId}?page=${page}&size=${size}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    countMutualGroups(userId: number, authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/groupsUsers/count/mutual/${userId}/${authId}`);\n    }\n\n    getPageableMutualGroups(userId: number, authId: number, page: number, size: number): Observable<MGroup[]>{\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/pageable/mutual/${userId}/${authId}?page=${page}&size=${size}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    getGroups(authId: number): Observable<MGroup[]>{\n        return this.http.get<Group[]>(`${environment.restApi}/groupsUsers/groups/${authId}`).pipe(\n            map(groups => groups.map(this.mapGroup.bind(this)))\n        );\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userCreation: user.userCreation,\n            userRemoval: user.userRemoval,\n            userActive: user.userActive,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapGroup(group: Group) : MGroup {\n        return {\n            groupId: group.groupId,\n            groupName: group.groupName,\n            groupDescription: group.groupDescription,\n            groupPhoto: group.groupPhoto,\n            groupCreation: group.groupCreation,\n            groupRemoval: group.groupRemoval,\n            groupOwner: group.groupOwner,\n            groupActive: group.groupActive\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MProduct} from \"../models/MProduct\";\nimport {Group} from \"./entities/Group\";\nimport {map} from \"rxjs/operators\";\nimport {Product} from \"./entities/Product\";\nimport {MEvent} from \"../models/MEvent\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    event: MEvent;\n    constructor(private http: HttpClient) { }\n\n    createProduct(mProduct: MProduct): Observable<number> {\n        return this.http.post<number>(`${environment.restApi}/products`,{\n            \"productId\": mProduct.productId,\n            \"productName\":mProduct.productName,\n            \"productDescription\":mProduct.productDescription,\n            \"productPurchaseDate\": mProduct.productPurchaseDate,\n            \"productCost\":mProduct.productCost,\n            \"productQuantity\":mProduct.productQuantity,\n            \"productPhoto\": mProduct.productPhoto,\n            \"eventId\": mProduct.eventId,\n            \"eventActive\": \"\",\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al crear el producto', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo.`)\n            );\n    }\n\n    editProduct(mProduct: MProduct): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/products`,{\n            \"productId\": mProduct.productId,\n            \"productName\":mProduct.productName,\n            \"productDescription\":mProduct.productDescription,\n            \"productPurchaseDate\": mProduct.productPurchaseDate,\n            \"productCost\":mProduct.productCost,\n            \"productQuantity\":mProduct.productQuantity,\n            \"productPhoto\": mProduct.productPhoto,\n            \"eventId\": mProduct.eventId,\n            \"eventActive\": \"\",\n            \"eventCreation\": \"\",\n            \"eventRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el producto', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n            );\n    }\n\n    deleteProduct(productId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/products/${productId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar producto', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    getPageableSearchProducts(productName: string, eventId: number, page: number, size: number): Observable<MProduct[]>{\n        return this.http.get<Product[]>(`${environment.restApi}/products/pageable/${productName}/${eventId}?page=${page}&size=${size}`).pipe(\n            map(products => products.map(this.mapProduct.bind(this)))\n        );\n    }\n\n    countSearchProducts(productName: string, eventId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/products/count/${productName}/${eventId}`);\n    }\n\n    countProducts(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/products/count/${eventId}`);\n    }\n\n    sumTotalProductCost(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/products/sum/${eventId}`);\n    }\n\n    getPageableProducts(eventId: number, page: number, size: number): Observable<MProduct[]> {\n        return this.http.get<Group[]>(`${environment.restApi}/products/pageable/${eventId}?page=${page}&size=${size}`).pipe(\n            map(products => products.map(this.mapProduct.bind(this)))\n        );\n    }\n\n    getProducts(eventId: number): Observable<MProduct[]> {\n        return this.http.get<Group[]>(`${environment.restApi}/products/${eventId}`).pipe(\n            map(products => products.map(this.mapProduct.bind(this)))\n        );\n    }\n\n    getAllProductsPartakers(eventId: number): Observable<boolean> {\n        return this.http.get<boolean>(`${environment.restApi}/products/allProductsPartakers/${eventId}`);\n    }\n\n    private mapProduct(product: Product) : MProduct {\n        return {\n            productId: product.productId,\n            productName: product.productName,\n            productDescription: product.productDescription,\n            productPhoto: product.productPhoto,\n            productQuantity: product.productQuantity,\n            productCost: product.productCost,\n            eventId: product.eventId,\n            productPurchaseDate: product.productPurchaseDate,\n            productCreation: product.productCreation,\n            productRemoval: product.productRemoval,\n            productActive: product.productActive\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {User} from \"./entities/User\";\nimport {map} from \"rxjs/operators\";\nimport {MUser} from \"../models/MUser\";\nimport {AuthUser} from \"../models/AuthUser\";\nimport {MVerifyEmail} from \"../models/MVerifyEmail\";\nimport {MRetrievePassword} from \"../models/MRetrievePassword\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getPageableUsers(authId: number, page: number, size: number): Observable<MUser[]>{\n    return this.http.get<User[]>(`${environment.restApi}/users/pageable/${authId}?page=${page}&size=${size}`).pipe(\n        map(users => users.map(this.mapUser.bind(this)))\n    );\n  }\n\n  getPageableSearchUsers(userLogin: string, authId: number, page: number, size: number): Observable<MUser[]>{\n    return this.http.get<User[]>(`${environment.restApi}/users/pageable/${userLogin}/${authId}?page=${page}&size=${size}`).pipe(\n        map(users => users.map(this.mapUser.bind(this)))\n    );\n  }\n\n  countUsers(authId: number): Observable<number> {\n    return this.http.get<number>(`${environment.restApi}/users/count/${authId}`);\n  }\n\n  countSearchUsers(userLogin: string, authId: number): Observable<number> {\n    return this.http.get<number>(`${environment.restApi}/users/count/${userLogin}/${authId}`);\n  }\n\n  getUser(userLogin: string): Observable<MUser>{\n    return this.http.get<User>(`${environment.restApi}/users/${userLogin}`).pipe(\n        map(this.mapUser.bind(this))\n    );\n  }\n\n  getUserById(userId: number): Observable<MUser>{\n    return this.http.get<User>(`${environment.restApi}/users/authUser/${userId}`).pipe(\n        map(this.mapUser.bind(this))\n    );\n  }\n\n  getToken(userEmail: string): Observable<boolean>{\n    return this.http.put<boolean>(`${environment.restApi}/users/token`,userEmail);\n  }\n\n  loginAvailable(login: string): Observable<boolean>{\n    return this.http.get<boolean>(`${environment.restApi}/users/available/${login}`);\n  }\n\n  editUser(authUser: AuthUser): Observable<void> {\n    return this.http.put<void>(`${environment.restApi}/users`,{\n      \"userId\": authUser.id,\n      \"userName\": authUser.name,\n      \"userSurname\": authUser.surname,\n      \"userLogin\": authUser.login,\n      \"userPassword\": authUser.password,\n      \"userBirthday\": authUser.birthday,\n      \"userPhoto\": authUser.photo,\n      \"roles\": \"\",\n      \"userEmail\": \"\",\n      \"permissions\": \"\",\n      \"userCreation\": \"\",\n      \"userRemoval\": \"\",\n      \"userActive\": \"\"\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al editar el usuario', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n\n  createUser(mUser: MUser): Observable<void> {\n\n    return this.http.post<void>(`${environment.restApi}/users`,{\n      \"userName\": mUser.userName,\n      \"userSurname\": mUser.userSurname,\n      \"userLogin\": mUser.userLogin,\n      \"userPassword\": mUser.userPassword,\n      \"userEmail\": mUser.userEmail,\n      \"userBirthday\": \"\",\n      \"userPhoto\": null,\n      \"roles\": \"USER\",\n      \"permissions\": \"\",\n      \"userCreation\": \"\",\n      \"userRemoval\": \"\",\n      \"userActive\": true\n    })\n      .pipe(\n        APachasError.throwOnError('Fallo en el registro', `Los datos del formulario son incorrectos o el usuario ya existe. Por favor, inténtelo de nuevo`)\n      );\n  }\n\n  sendRetrievePassword(mUser: MUser): Observable<void>{\n    return this.http.put<void>(`${environment.restApi}/users/sendRetrievePasswordEmail`, {\n      \"userEmail\": mUser.userEmail\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al enviar email', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n\n  verifyUser(mVerifyEmail: MVerifyEmail): Observable<void> {\n    return this.http.put<void>(`${environment.restApi}/users/verify`, {\n      \"userEmail\": mVerifyEmail.userEmail,\n      \"tokenPassword\": mVerifyEmail.tokenPassword\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al activar el usuario', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n\n  retrievePassword(mRetrievePassword: MRetrievePassword): Observable<void> {\n    return this.http.put<void>(`${environment.restApi}/users/retrievePassword`, {\n      \"userEmail\": mRetrievePassword.userEmail,\n      \"tokenPassword\": mRetrievePassword.tokenPassword,\n      \"newPassword\": mRetrievePassword.newPassword\n    })\n        .pipe(\n            APachasError.throwOnError('Fallo al activar el usuario', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n        );\n  }\n  private mapUser(user: User) : MUser {\n    return {\n      userId: user.userId,\n      userName: user.userName,\n      userSurname: user.userSurname,\n      userLogin: user.userLogin,\n      userPassword: user.userPassword,\n      userEmail: user.userEmail,\n      userBirthday: user.userBirthday,\n      userPhoto: user.userPhoto,\n      roles: user.roles,\n      permissions: user.permissions,\n      userActive: user.userActive,\n      userRemoval: user.userRemoval,\n      userCreation: user.userCreation,\n      userNotify: user.userNotify\n    }\n  }\n\n}\n","import {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {MEvent} from \"../models/MEvent\";\nimport {Event} from \"./entities/Event\";\nimport {map} from \"rxjs/operators\";\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {UserEvent} from \"./entities/UserEvent\";\nimport {MUserEvent} from \"../models/MUserEvent\";\nimport {AuthenticationService} from \"./authentication.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserEventService {\n\n    constructor(private http: HttpClient,\n                private authenticationService: AuthenticationService) {\n    }\n\n    countMutualEvents(userId: number, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/mutual/${userId}/${authId}`);\n    }\n\n    getNotifications(authId: number): Observable<string[]> {\n        if (authId != undefined){\n            return this.http.get<string[]>(`${environment.restApi}/usersEvents/notifications/${authId}`);\n        }\n    }\n\n    getPageableMutualEvents(userId: number, authId: number, page: number, size: number): Observable<MEvent[]> {\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/mutual/${userId}/${authId}?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageableSearchEvents(eventName: string, authId: number, page: number, size: number): Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/events/${eventName}/${authId}/?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageableSearchEventsWithFinished(eventName: string, authId: number, page: number, size: number): Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/withFinished/${eventName}/${authId}/?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    countSearchEvents(eventName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/events/${eventName}/${authId}`);\n    }\n\n    countSearchEventsWithFinished(eventName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/withFinished/${eventName}/${authId}`);\n    }\n\n    countEvents(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/events/${authId}`);\n    }\n\n    sumTotalEventExpense(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/sum/${eventId}`);\n    }\n\n    countEventsWithFinished(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/withFinished/${authId}`);\n    }\n\n    getPageableEvents(authId: number, page: number, size: number): Observable<MEvent[]> {\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/events/${authId}?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageableEventsWithFinished(authId: number, page: number, size: number): Observable<MEvent[]> {\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/pageable/withFinished/${authId}?page=${page}&size=${size}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getPageablePartakers(eventId: number, page:number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersEvents/pageable/partakers/${eventId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    countPartakers(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/partakers/${eventId}`);\n    }\n\n    deleteUserEvent(eventId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/usersEvents/${eventId}/${userId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar participante del evento', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    createUserEvent(eventId: any, userId: number): Observable<void> {\n        let accept = false;\n        if (userId == this.authenticationService.getUser().id){\n            accept = true;\n        }\n        return this.http.post<void>(`${environment.restApi}/usersEvents`,{\n            \"eventId\":eventId,\n            \"userId\": userId,\n            \"accept\": accept,\n            \"debt\": 0,\n            \"totalExpense\": 0,\n            \"userEventActive\": true,\n            \"userEventCreation\": \"\",\n            \"userEventRemoval\":\"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir participantes al evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editUserEvent(eventId: number, userIds: number[]): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/usersEvents/${eventId}`,userIds)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar participantes del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editTotalExpense(mUserEvent: MUserEvent): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersEvents/totalExpense/${mUserEvent.eventId}/${mUserEvent.userId}`, mUserEvent.totalExpense)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el dinero aportado por el participante autenticado del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editDebt(eventId: number, userId: number, userDebt: number): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersEvents/debt/${eventId}/${userId}`, userDebt)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el dinero que debe el participante del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editStatus(eventId: number, authId: number): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersEvents/status/${eventId}`, authId)\n            .pipe(\n                APachasError.throwOnError('Fallo al editar el estado de los participantes del evento', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    getPartakers(eventId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersEvents/${eventId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    getUserEvent(eventId: number, userId: number): Observable<MUserEvent>{\n        return this.http.get<UserEvent>(`${environment.restApi}/usersEvents/${eventId}/${userId}`).pipe(\n            map(this.mapUserEvent.bind(this))\n        );\n    }\n\n    getPageableUserEvents(eventId: number, page: number, size: number): Observable<MUserEvent[]>{\n        return this.http.get<UserEvent[]>(`${environment.restApi}/usersEvents/pageable/${eventId}/?page=${page}&size=${size}`).pipe(\n            map(userEvents => userEvents.map(this.mapUserEvent.bind(this)))\n        );\n    }\n\n    countUserEvents(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/${eventId}`);\n    }\n\n    getPageableSearchUserEvents(userName: string, eventId: number, page: number, size: number): Observable<MUserEvent[]>{\n        return this.http.get<UserEvent[]>(`${environment.restApi}/usersEvents/pageable/${userName}/${eventId}/?page=${page}&size=${size}`).pipe(\n            map(userEvents => userEvents.map(this.mapUserEvent.bind(this)))\n        );\n    }\n\n    countSearchUserEvents(userName: string, eventId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersEvents/count/${userName}/${eventId}`);\n    }\n\n    getOpenEvents(authId: number):Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/events/open/${authId}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n    getClosedEvents(authId: number):Observable<MEvent[]>{\n        return this.http.get<Event[]>(`${environment.restApi}/usersEvents/events/closed/${authId}`).pipe(\n            map(events => events.map(this.mapEvent.bind(this)))\n        );\n    }\n\n\n\n    private mapEvent(event: Event) : MEvent {\n        return {\n            eventId: event.eventId,\n            eventName:event.eventName,\n            eventDescription:event.eventDescription,\n            eventStart: event.eventStart,\n            eventEnd: event.eventEnd,\n            eventLocation:event.eventLocation,\n            eventPhoto:event.eventPhoto,\n            eventOpen:event.eventOpen,\n            eventOwner:event.eventOwner,\n            eventActive: event.eventActive,\n            eventCreation: event.eventCreation,\n            eventRemoval: event.eventRemoval\n        }\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userActive: user.userActive,\n            userRemoval: user.userRemoval,\n            userCreation: user.userCreation,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapUserEvent(userEvent: UserEvent) : MUserEvent {\n        return {\n            userId: userEvent.userId,\n            eventId: userEvent.eventId,\n            totalExpense: userEvent.totalExpense,\n            debt: userEvent.debt,\n            accept: userEvent.accept,\n            userEventActive: userEvent.userEventActive,\n            userEventRemoval: userEvent.userEventRemoval,\n            userEventCreation: userEvent.userEventCreation\n        }\n    }\n}","import {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {AuthenticationService} from \"./authentication.service\";\nimport {UserProduct} from \"./entities/UserProduct\";\nimport {MUserProduct} from \"../models/MUserProduct\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserProductService {\n\n    constructor(private http: HttpClient,\n                private authenticationService: AuthenticationService) {\n    }\n\n    getPageablePartakers(productId: number, page:number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersProducts/pageable/partakers/${productId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    getPartakers(productId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersProducts/partakers/${productId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    countPartakers(productId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersProducts/count/partakers/${productId}`);\n    }\n\n    deleteUserProduct(productId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/usersProducts/${productId}/${userId}`).pipe(\n            APachasError.throwOnError('Fallo al eliminar participante del producto', `Por favor, inténtelo de nuevo`)\n        );\n    }\n\n    createUserProduct(productId: any, userId: number): Observable<void> {\n        let accept = false;\n        if (userId == this.authenticationService.getUser().id){\n            accept = true;\n        }\n        return this.http.post<void>(`${environment.restApi}/usersProducts`,{\n            \"productId\":productId,\n            \"userId\": userId,\n            \"accept\": accept,\n            \"userProductActive\": true,\n            \"userProductCreation\": \"\",\n            \"userProductRemoval\":\"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir participantes al producto', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editUserProduct(productId: number, authId: number): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/usersProducts`,{\n            \"productId\": productId,\n            \"userId\": authId,\n            \"userProductActive\":true,\n            \"userProductCreation\": \"\",\n            \"userProductRemoval\":\"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al editar participantes del producto', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n            );\n    }\n\n    getUserProduct(productId: number, userId: number): Observable<MUserProduct>{\n        return this.http.get<UserProduct>(`${environment.restApi}/usersProducts/${productId}/${userId}`).pipe(\n            map(this.mapUserProduct.bind(this))\n        );\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userActive: user.userActive,\n            userRemoval: user.userRemoval,\n            userCreation: user.userCreation,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapUserProduct(userProduct: UserProduct) : MUserProduct {\n        return {\n            productId: userProduct.productId,\n            userId: userProduct.userId,\n            userProductActive: userProduct.userProductActive,\n            userProductRemoval: userProduct.userProductRemoval,\n            userProductCreation: userProduct.userProductCreation\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../environments/environment\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {User} from \"./entities/User\";\nimport {MUser} from \"../models/MUser\";\nimport {UserUser} from \"./entities/UserUser\";\nimport {MUserUser} from \"../models/MUserUser\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserUserService {\n\n    constructor(private http: HttpClient) { }\n\n    getUserUser(friendId: number, userId: number): Observable<MUserUser> {\n        return this.http.get<UserUser>(`${environment.restApi}/usersUsers/${friendId}/${userId}`).pipe(\n            map(this.mapUserUser.bind(this))\n        );\n    }\n\n    getNotifications(authId: number): Observable<string[]> {\n        return this.http.get<string[]>(`${environment.restApi}/usersUsers/notifications/${authId}`);\n    }\n\n    getDeletedUserUser(friendId: number, userId: number): Observable<MUserUser> {\n        return this.http.get<UserUser>(`${environment.restApi}/usersUsers/deleted/${friendId}/${userId}`).pipe(\n            map(this.mapUserUser.bind(this))\n        );\n    }\n\n    getFriends(userId: number): Observable<MUser[]> {\n        return this.http.get<User[]>(`${environment.restApi}/usersUsers/${userId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    createUserUser(mUserUser: MUserUser): Observable<void> {\n        return this.http.post<void>(`${environment.restApi}/usersUsers`,{\n            \"friendId\":mUserUser.friendId,\n            \"userId\": mUserUser.userId,\n            \"accept\": false,\n            \"userUserCreation\": \"\",\n            \"userUserRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo en la solicitud de amistad o solicitud ya enviada', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editUserUser(mUserUser: MUserUser): Observable<void> {\n        return this.http.put<void>(`${environment.restApi}/usersUsers`,{\n            \"friendId\":mUserUser.friendId,\n            \"userId\": mUserUser.userId,\n            \"accept\": mUserUser.accept,\n            \"userUserActive\": true,\n            \"userUserCreation\": \"\",\n            \"userUserRemoval\": \"\"\n        })\n            .pipe(\n                APachasError.throwOnError('Fallo al aceptar la solicitud', `Por favor, compruebe que los datos son correcto e inténtelo de nuevo`)\n            );\n    }\n\n    deleteUserUser(friendId: number, userId: number): Observable<void> {\n        return this.http.delete<void>(`${environment.restApi}/usersUsers/${friendId}/${userId}`);\n    }\n\n    countMutualFriends(userId: number, authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsers/count/mutual/${userId}/${authId}`);\n    }\n\n    getPageableMutualFriends(userId: number, authId: number, page: number, size: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersUsers/pageable/mutual/${userId}/${authId}?page=${page}&size=${size}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userCreation: user.userCreation,\n            userRemoval: user.userRemoval,\n            userActive: user.userActive,\n            userNotify: user.userNotify\n        }\n    }\n\n    private mapUserUser(userUser: UserUser) : MUserUser {\n        if (userUser != null){\n            return {\n                userId: userUser.userId,\n                friendId: userUser.friendId,\n                userUserActive: userUser.userUserActive,\n                userUserCreation: userUser.userUserCreation,\n                userUserRemoval: userUser.userUserRemoval,\n                accept: userUser.accept\n            }\n        }else{\n            return null;\n        }\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {UserUserEvent} from \"./entities/UserUserEvent\";\nimport {MUserUserEvent} from \"../models/MUserUserEvent\";\nimport {APachasError} from \"../modules/notification/entities\";\nimport {MUser} from \"../models/MUser\";\nimport {User} from \"./entities/User\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserUserEventService {\n\n    constructor(private http: HttpClient) { }\n\n    createUserUserEvent(eventId: any): Observable<void> {\n        return this.http.post<void>(`${environment.restApi}/usersUsersEvents`, eventId)\n            .pipe(\n                APachasError.throwOnError('Fallo al añadir transacciones', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    getPageableUserUserEventsByEvent(eventId: number, page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byEvent/${eventId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPartakers(authId: number): Observable<MUser[]>{\n        return this.http.get<User[]>(`${environment.restApi}/usersUsersEvents/partakers/${authId}`).pipe(\n            map(users => users.map(this.mapUser.bind(this)))\n        );\n    }\n\n    editPaid(transaction: MUserUserEvent, paid: boolean): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersUsersEvents/paid/${transaction.eventId}/${transaction.senderId}/${transaction.receiverId}`, paid)\n            .pipe(\n                APachasError.throwOnError('Fallo al actualizar el pago', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    editConfirmed(transaction: MUserUserEvent, confirmed: boolean): Observable<void>{\n        return this.http.put<void>(`${environment.restApi}/usersUsersEvents/confirmed/${transaction.eventId}/${transaction.senderId}/${transaction.receiverId}`, confirmed)\n            .pipe(\n                APachasError.throwOnError('Fallo al actualizar la confirmación', `Por favor, inténtelo de nuevo`)\n            );\n    }\n\n    getPageableUserUserEventsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsDebtsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/debts/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsDebtsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/debts/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsPaymentsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/payments/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsPaymentsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/payments/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsDebtsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/debts/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsDebtsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/debts/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsPaymentsByAuthUser(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/payments/byAuthUser/${authUserId}?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsPaymentsByAuthUserByEvent(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/payments/byAuthUser/${authUserId}/byEvent?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsDebtsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/debts/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableUserUserEventsPaymentsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/payments/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsDebtsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/debts/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableNotFinishedUserUserEventsPaymentsByAuthUserByDate(authUserId: number,page: number, size: number): Observable<MUserUserEvent[]> {\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/notFinished/payments/byAuthUser/${authUserId}/byDate?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    countUserUserEventsByEvent(eventId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byEvent/${eventId}`);\n    }\n\n    countUserUserEventsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byAuthUser/${authId}`);\n    }\n\n    countUserUserEventsDebtsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/debts/byAuthUser/${authId}`);\n    }\n\n    countUserUserEventsPaymentsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/payments/byAuthUser/${authId}`);\n    }\n\n    countFinishedUserUserEventsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/finished/byAuthUser/${authId}`);\n    }\n\n    countFinishedUserUserEventsDebtsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/finished/debts/byAuthUser/${authId}`);\n    }\n\n    countFinishedUserUserEventsPaymentsByAuthUser(authId: number): Observable<number>{\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/finished/payments/byAuthUser/${authId}`);\n    }\n\n    getPageableSearchUserUserEventsByEvent(transactionActorName: string, eventId: number, page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byEvent/${transactionActorName}/${eventId}/?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    getPageableSearchUserUserEventsByAuthUser(transactionActorName: string, authId: number, page: number, size: number): Observable<MUserUserEvent[]>{\n        return this.http.get<UserUserEvent[]>(`${environment.restApi}/usersUsersEvents/pageable/byAuthUser/${transactionActorName}/${authId}/?page=${page}&size=${size}`).pipe(\n            map(userUserEvents => userUserEvents.map(this.mapUserUserEvent.bind(this)))\n        );\n    }\n\n    countSearchUserUserEventsByEvent(transactionActorName: string, eventId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byEvent/${transactionActorName}/${eventId}`);\n    }\n\n\n    countSearchUserUserEventsByAuthUser(transactionActorName: string, authId: number): Observable<number> {\n        return this.http.get<number>(`${environment.restApi}/usersUsersEvents/count/byAuthUser/${transactionActorName}/${authId}`);\n    }\n\n    private mapUserUserEvent(userUserEvent: UserUserEvent) : MUserUserEvent {\n        return {\n            senderId: userUserEvent.senderId,\n            receiverId: userUserEvent.receiverId,\n            eventId: userUserEvent.eventId,\n            confirmed: userUserEvent.confirmed,\n            cost: userUserEvent.cost,\n            paid: userUserEvent.paid,\n            userUserEventActive: userUserEvent.userUserEventActive,\n            userUserEventRemoval: userUserEvent.userUserEventRemoval,\n            userUserEventCreation: userUserEvent.userUserEventCreation\n        }\n    }\n\n    private mapUser(user: User) : MUser {\n        return {\n            userId: user.userId,\n            userName: user.userName,\n            userSurname: user.userSurname,\n            userLogin: user.userLogin,\n            userPassword: user.userPassword,\n            userEmail: user.userEmail,\n            userBirthday: user.userBirthday,\n            userPhoto: user.userPhoto,\n            roles: user.roles,\n            permissions: user.permissions,\n            userActive: user.userActive,\n            userRemoval: user.userRemoval,\n            userCreation: user.userCreation,\n            userNotify: user.userNotify\n        }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  restApi: 'https://apachas-api.up.railway.app'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 30546;\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"]}